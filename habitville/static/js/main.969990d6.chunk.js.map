{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","pages/habits/models.ts","modules/loading/loadingService.ts","modules/loading/loading.component.tsx","modules/auth/components/user.page.tsx","modules/data/models.ts","env.ts","pages/habits/utilsHabits.ts","modules/data/utilsData.ts","pages/todo/models.ts","components/animatedIcon.tsx","modules/parties/models.ts","modules/data/adapters/dexie.ts","modules/localStorage/localStorageService.ts","utils.ts","modules/ajax/ajax.ts","modules/toast/toastService.ts","modules/auth/authService.ts","modules/data/sync.ts","modules/data/dataService.ts","modules/messages/models.ts","modules/social/models.ts","modules/gamify/utilsGamify.ts","modules/gamify/gamifyService.ts","pages/todo/todo.service.ts","pages/todo/todo.new.component.tsx","colors.ts","pages/todo/todo.edit.inline.component.tsx","pages/todo/Todo.listitem.component.tsx","pages/todo/hooks/todos.hook.ts","modules/app/hooks/appStatus.hook.ts","components/HeaderWithProgress.tsx","pages/todo/Todos.page.tsx","modules/auth/components/intro.page.tsx","modules/parties/party.service.ts","modules/social/social.service.ts","modules/social/components/Friends.list.component.tsx","modules/messages/components/Messages.list.component.tsx","pages/Home.tsx","pages/NotFound.tsx","modules/forms/myInput.tsx","modules/forms/myForm.tsx","modules/auth/components/auth.menu.component.tsx","modules/auth/components/login.page.tsx","modules/auth/components/register.page.tsx","modules/auth/unauthenticatedRoute.tsx","pages/habits/habits.service.ts","pages/habits/Habit.listitem.component.tsx","pages/habits/Habit.add.component.tsx","pages/habits/Habits.page.tsx","pages/habits/hooks/habits.hook.ts","components/MenuHeaderWithProgress.tsx","pages/todo/list.inline.add.component.tsx","pages/todo/todo.menu.item.tsx","pages/todo/todo.menulist.component.tsx","modules/menu/hooks/menu.hook.tsx","components/Menu.tsx","modules/parties/components/Party.edit.component.tsx","modules/parties/components/Party.listitem.component.tsx","modules/parties/pages/Parties.page.tsx","modules/parties/components/Challenge.member.scoreHistory.tsx","modules/parties/components/Members.list.component.tsx","modules/parties/components/Challenge.members.item.component.tsx","modules/parties/components/Challenge.add.note.action.component.tsx","modules/parties/components/Challenge.listitem.component.tsx","modules/parties/components/Challenge.add.component.tsx","modules/parties/components/Challenge.list.component.tsx","modules/parties/pages/Party.view.page.tsx","routes.tsx","modules/toast/toast.component.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","habitStage","habitIntervals","habitDifficulty","loadingService","_loading","loading$","BehaviorSubject","show","this","msg","next","Loading","useState","state","setState","useEffect","subscriptions","subscribe","res","it","unsubscribe","isOpen","message","UserPage","Doc","String","fromCharCode","values","undefined","name","deleted","created","Date","now","updated","creator","type","dirty","rev","assign","ProjectItem","note","access","printDifficulty","hab","trivial","easy","medium","hard","extreme","Habit","stage","current","difficulty","regularityInterval","day","regularityIntervalGoal","regularityEachDayGoal","actions","lastCalculatedDate","currentTimeperiedStreak","currentTimeperiodLastDay","currentStreak","biggestStreak","newRewards","ulog","level","TRACE","detail","process","REACT_APP_STAGE","SYNC_SERVER","AUTH_API_URL","env","APP_ID","ACCESS_META_KEY","SERVER_ACCESS_META_KEY","MOMENT_DATE_FORMAT","GAMIFY_HABIT_GOLD_BASE_REWARD","GAMIFY_HABIT_EXPERIENCE_BASE_REWARD","HABIT_REWARDS_GOLD_BASE","HABIT_REWARDS_GOLD_PERCENTAGE_INCREASE","HABIT_REWARDS_EXPERIENCE_BASE","HABIT_REWARDS_EXPERIENCE_PERCENTAGE_INCREASE","HABIT_REWARDS_NEW_GOLD","HABIT_REWARDS_NEW_EXPERIENCE","TODO_NEW_GOLD_REWARDS","TODO_DONE_GOLD_REWARDS","TODO_NEW_EXPERIENCE_REWARDS","TODO_DONE_EXPERIENCE_REWARDS","MESSAGE_DURATION","TOKEN_EXPIRATION","getInitGamifyRewards","base","gold","experience","items","sortByDate","a","b","date","calculateCurrentStreak","habit","r","rewards","sort","forEach","action","moment","isBefore","isSame","isAfter","calculateDailyChallengeStreak","calculateWeeklyChallengeStreak","calculateMonthlyChallengeStreak","rewards1","rewards2","currentAction","subtract","format","currentDateMoment","add","isSameOrBefore","value","Math","floor","calculateGoldByStreak","calculateExperienceByStreak","analizeDay","h","nextTimeperiodFirstDay","nextWeekFirstDay","streak","baseXP","exponent","generateUserChannelId","userid","getDefaultProject","uuid","generateProjectUUID","genrateMetaData","generateUUID","ok","shortid","generate","substring","getProjectChildId","length","getChannelFromProjectId","app","generateCollectionId","projectid","collection","replace","waitMS","ms","setTimeout","saveIntoArray","item","ary","idKey","i","getIndexById","slice","getDocumentRights","user","channel","split","getChannelNameFromId","canEditProject","rights","canEditProjectByRights","getDefaultTodoList","project","TodoList","folder","icon","secondaryType","fullname","color","_new","getDefaultTodoTag","TodoTag","animatedIcon","Todo","done","list","tags","parent","subTodos","showSubTodos","showDone","doneRewards","AnimatedIcon","ChallengeState","ChallengeType","ChallengeTypeUnit","ChallengeDifficulty","ChallengeIntervals","iconsvg","actionFunc","isStopped","isPaused","defaultOptions","loop","autoplay","render","animationData","rendererSettings","clearCanvas","scaleMode","preserveAspectRatio","actionHandler","onClick","className","options","height","width","log","DexieAdapter","scheme","db","_ready","ready$","_subscriptions","changes$","Subject","Dexie","stores","tables","t","columns","version","_init","open","error","sub","get","bulkGet","filter","doc","field","operator","where","equals","toArray","docs","startsWith","notEqual","put","bulkPut","PartyProject","members","moneyTypeSingle","moneyTypeMultiple","moneyColor","Challenge","waiting","challengeType","checkin","challengeTypeUnit","Other","chalengeTypeOther","chalengeTypeNoteVote","localStorageService","localStorage","getItem","val","JSON","parse","str","stringify","setItem","console","capitalize","s","charAt","toUpperCase","printDateRelative","timestamp","m","diff","fromNow","getNested","obj","args","reduce","saveIntoDocList","d","ToastType","getAjaxMessage","success","data","status","errors","getPostRequest","url","form","getErrorMessage","location","post","showLoading","loadingMessage","axios","hideLoading","info","response","AuthStatus","toastService","messages$","default","milliseconds","toast","autoClose","duration","err","showMessage","getUser","username","email","token","token_expiery","expires","isGuest","getGuestUser","authService","_user","_authStatus","authStatus$","username$","loadAuth","User","forceLogout","setAuthStatus","setObject","isEqual","Guest","getObject","updateUser","warn","password","history","prev","push","printServerErrors","organizeData","channels","checkpoints","syncData","props","syncurl","checkpoint","chpoints","types","databaseScheme","sync","dataService","authId","_ready$","addSyncCall$","pipe","throttleTime","_syncRemote","getDoc","getBulk","queryByProperty","getProjectItems","save","remoteSync","oldDoc","_","getToken","gotNewRightsToken","doc2","doctype","channelname","asObservable","change","property","projectChildId","event","complete","authid","syncRemote","dbSub","ready","Number","requestMaxSize","saveFromSync","calculateLevelExperience","exp","x","pow","calculateDoneTodoGold","todo","days","rew","calculateDoneTodoExperience","gamifyService","_userId","_state","health","maxHealth","maxExperience","state$","calculateFinishedTodoRewards","addGold","messageReceivedGold","addExperience","messageReceivedExperience","messageLostGold","messageLostExperience","calculateNewTodo","calculateNewHabitRewards","addRewards","dataSub","getReadySub","loadInitDocs","_save","sub2","subscribeDocChanges","getGamifyDocId","preMessage","postMessage","equal","initEqual","ts","red","TodoService","_projectid","selectedTodo","tag","tagDocs","doneTodos","orderFilter","orderAsync","showNewTagFilter","_subscription","listName","tagName","getTags","reloadTodos","subscribeProjectTypeChanges","filterAndSaveTodos","filtered","filterDoneParentFunction","orderFunction","todoId","parentId","parentTodo","concat","saveNewTags","addSubTodoToParent","tagDoc","printSimpleError","saveRes","remove","removeSubTodoFromParent","todoService","TodoNewComp","focus","closeFunc","saveFunc","projectId","useReducer","payload","title","showTags","closeFocus","_dispatch","inputEl","useRef","searchTags$","dispatch","setDelayedFocusOnInput","setFocus","searchTags","getTagsByStartingName","debounceTime","distinctUntilChanged","switchMap","term","regex","tag2","match","otherTags","index","trim","newDoc","onInputFocus","onSubAction","lastIndexOf","closeToolbar","fill","key","size","src","printSmallTagFromName","class","autofocus","ref","placeholder","onKeyPress","onIonChange","onIonBlur","onIonFocus","getDefaultState","showDeleteWarrning","text","mergeText","TodoEditInlineComponent","dataFunctions","hideRemoveWarrning","handleTagChange","newtags","find","includes","printTag","autoGrow","exec","newState","select","close","trash","onDidDismiss","header","buttons","role","cssClass","handler","reducer","TodoListItemComp","doneHandler","handleSelectTodo","printEdit","button","lines","slot","restart","check","AppStatus","HeaderWithProgress","style","right","alt","top","heart","trailWidth","percent","strokeWidth","strokeColor","leaf","Keyboard","Plugins","Device","TodosPage","useLocation","params","useParams","pathname","selectList","changeDoneFilter","changeOrderFilter","showNewTag","init","useTodosCollectionFacade","dataFunc","getInfo","devInfo","operatingSystem","addListener","keyboardHeight","setKeyboard","onIonRefresh","refresh","checkmarkCircleOutline","radioButtonOff","arrowDownOutline","arrowUpOutline","lastChild","vertical","horizontal","edge","IntroPage","initPartyState","partyService","sub1","subscribeChanges","party","channelid","partyProject","_createParty","saveNewProject","challenge","_createChallenge","saveSystemDoc","msgId","replied","accepted","newMsg","challengeid","saveFromServer","initSocialState","friends","socialService","_userid","showAddModal","FriendsListComponent","hideAddUser","member","inputs","addFriend","messages","MessagesListComponent","loadMsgs","subscribeChannelTypeChanges","getAllByChannel","msgs","printMessageIcon","messageType","mail","peopleCircle","personAdd","messageSubType","documentTextOutline","printReplyStatus","happy","sad","printMessage","from","acceptPartyInvitation","rejectPartyInviation","printClubRequestAcceptRejectButtons","acceptFriendInvitation","rejectFriendInviation","printFriendRequestAcceptRejectButtons","challengeName","dangerouslySetInnerHTML","__html","Home","NotFound","padding","MyInput","updateFunction","position","displayName","hasValidation","target","printErrors","submitButtonText","getFormOptions","settings","getValidator","MyForm","submitFunction","valid","initForm","model","Array","isArray","validateItem","validators","validateForm","updateItem","validate","findById","validator","isEmpty","isLength","isEmail","disabled","AuthMenuComponent","page","useHistory","LoginPage","submitButtongText","min","max","submit","loginAndRedirect","paddingTop","logIn","RegisterPage","register","UnauthenticatedRoute","exact","path","component","to","getInitHabitsState","selected","habits","stageFilter","HabitsService","_project","_docs","docs$","getAllByProject","filterhabits","filterFunction","HabitListItemComponent","showEditModalFunction","setDoc","printDate","active","printDayIcon","updatehabit","cog","getRegularityValues","interval","week","month","HabitAddComponent","dismissFunc","getDefaultRegularityState","regularity","handleChange","handlerRegularityValue","handleDifficultyChange","newReg","handlerRegularityIntervalChange","debounce","times","printRegularityLabel","printDifficultyLabel","showModal","modalHabit","getAction","HabitsPage","habitsService","changeStageFilter","getProject","useHabitsCollectionFacade","habitsState","addhabit","MenuHeaderWithProgress","ListAddInlineComponent","encodeURI","newList","saveList","TodoMenuItemButtonComponet","actonFunc","sun","star","routerLink","routerDirection","initialState","tagsOpen","lists","openLists","showDeleteListAlert","deleteList","l","TodoMenuListComponent","subTodoList","loadInitTodoLists","tagsList","subscribeByPropertyChange","loadInitTags","todolists","tagButtonClickHandler","listItem","side","tagItem","subHeader","getMenuState","sunny","checkmark","basket","construct","appPages","home","bonfire","apps","lastComponent","withRouter","useMenuHookFacade","contentId","appPage","autoHide","PartyEditComponent","PartyListItemComponent","userId","PartiesPage","subs","changes","editParty","saveParty","ChallengeMemberScoreHistory","printDay","dateString","score","reward","PartyMembersListComponent","printScore","self","canEditThisProject","addUser","ChallengeMembersItem","ChallengeAddActionNoteComponent","submitFunc","spellCheck","rows","memberDoc","showDoneAlert","ChallengeListItemComponent","currentDate","printDoneIcon","checkmarkDone","readerOutline","Cup","cafeOutline","Kilometer","walkOutline","Hour","alarmOutline","Minute","timerOutline","Dollar","cashOutline","rocketOutline","closeModal","submitModal","submitChallengeActions","getCurrentAction","cAction","finished","future","acceptChallenge","printActionButtons","changeChallengeState","printAdminActionButtons","printEditFabButton","printSubmitFab","label","checked","ChallengeAddComponent","_challenge","handleNamedChange","regularityValue","chdiff","modalChallenge","challenges","ChallengeListComponent","loadChallenges","addChallenge","ch","hideChallengeModal","saveChallenge","getInitState","loadParty","PartyViewPage","idd","Routes","loading","dataReady","appStatus","setAppStatus","setStatusFunction","getIsAuthenticated","renewToken","getUsername","guest","auth","useAppStatus","newpath","when","getRoutes","Toasts","setMessage","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","App","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"u11CAAA,IAAIA,EAAM,CACT,kCAAmC,CAClC,IACA,IAED,iCAAkC,CACjC,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,iCAAkC,CACjC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,gCAAiC,CAChC,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,qBAAsB,CACrB,IACA,IAED,uCAAwC,CACvC,IACA,IAED,sCAAuC,CACtC,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,mCAAoC,CACnC,IACA,IAED,kCAAmC,CAClC,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,kCAAmC,CAClC,IACA,IAED,iCAAkC,CACjC,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,iCAAkC,CACjC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,+BA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","file":"static/js/main.969990d6.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet-ios.entry.js\": [\n\t\t339,\n\t\t37\n\t],\n\t\"./ion-action-sheet-md.entry.js\": [\n\t\t340,\n\t\t38\n\t],\n\t\"./ion-alert-ios.entry.js\": [\n\t\t341,\n\t\t21\n\t],\n\t\"./ion-alert-md.entry.js\": [\n\t\t342,\n\t\t22\n\t],\n\t\"./ion-app_8-ios.entry.js\": [\n\t\t343,\n\t\t10\n\t],\n\t\"./ion-app_8-md.entry.js\": [\n\t\t344,\n\t\t11\n\t],\n\t\"./ion-avatar_3-ios.entry.js\": [\n\t\t345,\n\t\t39\n\t],\n\t\"./ion-avatar_3-md.entry.js\": [\n\t\t346,\n\t\t40\n\t],\n\t\"./ion-back-button-ios.entry.js\": [\n\t\t347,\n\t\t41\n\t],\n\t\"./ion-back-button-md.entry.js\": [\n\t\t348,\n\t\t42\n\t],\n\t\"./ion-backdrop-ios.entry.js\": [\n\t\t349,\n\t\t79\n\t],\n\t\"./ion-backdrop-md.entry.js\": [\n\t\t350,\n\t\t80\n\t],\n\t\"./ion-button_2-ios.entry.js\": [\n\t\t351,\n\t\t43\n\t],\n\t\"./ion-button_2-md.entry.js\": [\n\t\t352,\n\t\t44\n\t],\n\t\"./ion-card_5-ios.entry.js\": [\n\t\t353,\n\t\t45\n\t],\n\t\"./ion-card_5-md.entry.js\": [\n\t\t354,\n\t\t46\n\t],\n\t\"./ion-checkbox-ios.entry.js\": [\n\t\t355,\n\t\t47\n\t],\n\t\"./ion-checkbox-md.entry.js\": [\n\t\t356,\n\t\t48\n\t],\n\t\"./ion-chip-ios.entry.js\": [\n\t\t357,\n\t\t49\n\t],\n\t\"./ion-chip-md.entry.js\": [\n\t\t358,\n\t\t50\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t359,\n\t\t81\n\t],\n\t\"./ion-datetime_3-ios.entry.js\": [\n\t\t360,\n\t\t17\n\t],\n\t\"./ion-datetime_3-md.entry.js\": [\n\t\t361,\n\t\t18\n\t],\n\t\"./ion-fab_3-ios.entry.js\": [\n\t\t362,\n\t\t51\n\t],\n\t\"./ion-fab_3-md.entry.js\": [\n\t\t363,\n\t\t52\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t364,\n\t\t82\n\t],\n\t\"./ion-infinite-scroll_2-ios.entry.js\": [\n\t\t365,\n\t\t35\n\t],\n\t\"./ion-infinite-scroll_2-md.entry.js\": [\n\t\t366,\n\t\t36\n\t],\n\t\"./ion-input-ios.entry.js\": [\n\t\t367,\n\t\t53\n\t],\n\t\"./ion-input-md.entry.js\": [\n\t\t368,\n\t\t54\n\t],\n\t\"./ion-item-option_3-ios.entry.js\": [\n\t\t369,\n\t\t55\n\t],\n\t\"./ion-item-option_3-md.entry.js\": [\n\t\t370,\n\t\t56\n\t],\n\t\"./ion-item_8-ios.entry.js\": [\n\t\t371,\n\t\t57\n\t],\n\t\"./ion-item_8-md.entry.js\": [\n\t\t372,\n\t\t58\n\t],\n\t\"./ion-loading-ios.entry.js\": [\n\t\t373,\n\t\t23\n\t],\n\t\"./ion-loading-md.entry.js\": [\n\t\t374,\n\t\t24\n\t],\n\t\"./ion-menu_3-ios.entry.js\": [\n\t\t375,\n\t\t59\n\t],\n\t\"./ion-menu_3-md.entry.js\": [\n\t\t376,\n\t\t60\n\t],\n\t\"./ion-modal-ios.entry.js\": [\n\t\t377,\n\t\t12\n\t],\n\t\"./ion-modal-md.entry.js\": [\n\t\t378,\n\t\t13\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t379,\n\t\t16\n\t],\n\t\"./ion-popover-ios.entry.js\": [\n\t\t380,\n\t\t14\n\t],\n\t\"./ion-popover-md.entry.js\": [\n\t\t381,\n\t\t15\n\t],\n\t\"./ion-progress-bar-ios.entry.js\": [\n\t\t382,\n\t\t61\n\t],\n\t\"./ion-progress-bar-md.entry.js\": [\n\t\t383,\n\t\t62\n\t],\n\t\"./ion-radio_2-ios.entry.js\": [\n\t\t384,\n\t\t63\n\t],\n\t\"./ion-radio_2-md.entry.js\": [\n\t\t385,\n\t\t64\n\t],\n\t\"./ion-range-ios.entry.js\": [\n\t\t386,\n\t\t65\n\t],\n\t\"./ion-range-md.entry.js\": [\n\t\t387,\n\t\t66\n\t],\n\t\"./ion-refresher_2-ios.entry.js\": [\n\t\t388,\n\t\t25\n\t],\n\t\"./ion-refresher_2-md.entry.js\": [\n\t\t389,\n\t\t26\n\t],\n\t\"./ion-reorder_2-ios.entry.js\": [\n\t\t390,\n\t\t33\n\t],\n\t\"./ion-reorder_2-md.entry.js\": [\n\t\t391,\n\t\t34\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t392,\n\t\t83\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t393,\n\t\t67\n\t],\n\t\"./ion-searchbar-ios.entry.js\": [\n\t\t394,\n\t\t27\n\t],\n\t\"./ion-searchbar-md.entry.js\": [\n\t\t395,\n\t\t28\n\t],\n\t\"./ion-segment_2-ios.entry.js\": [\n\t\t396,\n\t\t68\n\t],\n\t\"./ion-segment_2-md.entry.js\": [\n\t\t397,\n\t\t69\n\t],\n\t\"./ion-select_3-ios.entry.js\": [\n\t\t398,\n\t\t70\n\t],\n\t\"./ion-select_3-md.entry.js\": [\n\t\t399,\n\t\t71\n\t],\n\t\"./ion-slide_2-ios.entry.js\": [\n\t\t400,\n\t\t84\n\t],\n\t\"./ion-slide_2-md.entry.js\": [\n\t\t401,\n\t\t85\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t402,\n\t\t31\n\t],\n\t\"./ion-split-pane-ios.entry.js\": [\n\t\t403,\n\t\t86\n\t],\n\t\"./ion-split-pane-md.entry.js\": [\n\t\t404,\n\t\t87\n\t],\n\t\"./ion-tab-bar_2-ios.entry.js\": [\n\t\t405,\n\t\t72\n\t],\n\t\"./ion-tab-bar_2-md.entry.js\": [\n\t\t406,\n\t\t73\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t407,\n\t\t32\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t408,\n\t\t74\n\t],\n\t\"./ion-textarea-ios.entry.js\": [\n\t\t409,\n\t\t75\n\t],\n\t\"./ion-textarea-md.entry.js\": [\n\t\t410,\n\t\t76\n\t],\n\t\"./ion-toast-ios.entry.js\": [\n\t\t411,\n\t\t29\n\t],\n\t\"./ion-toast-md.entry.js\": [\n\t\t412,\n\t\t30\n\t],\n\t\"./ion-toggle-ios.entry.js\": [\n\t\t413,\n\t\t19\n\t],\n\t\"./ion-toggle-md.entry.js\": [\n\t\t414,\n\t\t20\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t415,\n\t\t88\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 168;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t419,\n\t\t96\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 170;\nmodule.exports = webpackAsyncContext;","\nimport { Doc } from '../../modules/data/models'\nimport { GamifyRewards } from './utilsHabits';\n\nexport const TYPE_HABBIT = 'hab';\nexport const MOMENT_DATE_FORMAT = 'YYYYMMDD';\n\nexport enum habitStage {\n  'finished',\n  'current',\n  'future',\n  'resting'\n}\n\nexport enum habitIntervals {\n  day = 'day',\n  week = 'week',\n  month = 'month'\n}\n\nexport enum habitDifficulty {\n  trivial, easy, medium, hard, extreme\n}\n\nexport const printDifficulty = (hab:habitDifficulty):string => {\n  switch(hab) {\n    case habitDifficulty.trivial:\n      return 'trivial'; // , easy peasy lemon squeezy\n    case habitDifficulty.easy:\n      return 'easy'; //Piece of Cake , Smooth Sailin'\n    case habitDifficulty.medium:\n      return 'medium'; //Let's Go\n    case habitDifficulty.hard:\n      return 'hard'; //No Pain, No Gain\n    case habitDifficulty.extreme:\n      return 'extreme'; //Death Wish\n  }\n}\n\n\nexport interface HabitAction {\n  value: number, \n  date:string, \n  reward?: GamifyRewards,\n}\n\nexport class Habit extends Doc {\n  name: string = 'New habit';\n  note?: string;\n  type:string = TYPE_HABBIT;\n  stage: habitStage = habitStage.current;\n  difficulty:habitDifficulty = habitDifficulty.medium;\n  //regularity\n  regularityInterval:habitIntervals = habitIntervals.day;\n  regularityIntervalGoal: number = 1;\n  regularityEachDayGoal: number = 1;\n\n  actions: {[key: string]: HabitAction } = {};\n  //streaks\n  //member info\n  lastCalculatedDate?:string;\n  currentTimeperiedStreak: number = 0;\n  currentTimeperiodLastDay?: string;\n\n  currentStreak: number = 0;\n  biggestStreak: number = 0;\n\n  newRewards?: GamifyRewards;\n  \n  constructor(values: Object = {}) {\n    super()\n    Object.assign(this, values);\n  }\n}\n\n\n","\nimport { BehaviorSubject } from 'rxjs';\n\n\n\nexport class LoadingService {\n  private _loading: boolean = false;\n  \n\n  public loading$ = new BehaviorSubject({show: this._loading, msg: 'Loading...'});\n\n  showLoading(msg = \"Loading...\") {\n    this._loading = true;\n    this.loading$.next({show:true, msg});\n  }\n\n  hideLoading() {\n    this._loading = false;\n    this.loading$.next({show:false, msg:''});\n  }\n\n  public get loading(): boolean {\n    return this._loading;\n  }\n\n\n  startLoadingTimer() {\n\n  }\n\n}\nexport const loadingService = new LoadingService();\n\n\n","import React, { useState, useEffect } from 'react';\nimport { IonLoading } from '@ionic/react';\nimport { Subscription } from 'rxjs';\nimport { loadingService } from './loadingService';\n\nexport const Loading: React.FC = () => {\n  const [state, setState] = useState({show:false, msg: 'Loading...'});\n\n  useEffect(() => {\n    const subscriptions: Subscription[] = [\n      loadingService.loading$.subscribe(res =>{\n        setState({show: res.show, msg: res.msg});\n      })\n    ];\n    return () => { subscriptions.map(it => it.unsubscribe()) };\n  },[]);\n\n  \n  //onDidDismiss={() => setShowLoading(false)}\n  return (\n      <IonLoading\n        isOpen={state.show}\n        message={state.msg}\n      />\n  );\n};","import React from 'react';\nimport { IonHeader, IonToolbar, IonPage, IonTitle, IonContent, IonLabel } from '@ionic/react';\n\n\n\nconst UserPage: React.FC = () => {\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>User Page</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonLabel>User</IonLabel>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default UserPage;\n","export const PROJECT_SERVICE = '';\nexport const PROJECT_INDEX_SERVICE = 'ch';\nexport const SYSTEM_DOC = 'sys';\n\nexport const LASTCHAR = String.fromCharCode(65535);\nexport const DIV = '.';\nexport const DOUBLE_DIV = '..';\n\nexport class Doc {\n  public id: string|undefined = undefined;\n  name: string = '';\n  public deleted?: boolean;\n  public created?: number = Date.now();\n  public updated?: number = Date.now();\n  public creator?: string;\n  public type: string = 'doc';\n  public dirty?: number = 0;\n  public rev = 1;\n  constructor(values: Object = {}) {\n      Object.assign(this, values);\n  }\n\n}\n\nexport class ProjectItem extends Doc {\n  public id:string;\n  public name: string = '';\n  public note?: string;\n  public access = [];\n\n  constructor(values: Object = {}) {\n    super();\n    Object.assign(this, values);\n    this.id = values['id'];\n    if(!this.id)\n      this.id = ''; \n  }\n}\n\n\n\n\n\n\n\n\n\n","import  ulog from 'ulog';\nulog.level = ulog.TRACE;\n\nexport const FIRST_DAY_OF_WEEK = 'Monday';\n\n\n\nconst dev = {\n  \n  \n}\n\nconst prod = {\n  SYNC_SERVER: 'https://auth.mlflabs.com',\n  AUTH_API_URL: 'https://auth.mlflabs.com',\n}\nconst detail = process.env.REACT_APP_STAGE === 'production' ? prod: dev;\nexport const env = {...{\n  APP_ID: 'hv',\n  //myenvoy settings\n  ACCESS_META_KEY: 'access',\n  SERVER_ACCESS_META_KEY: 'ch',\n  MOMENT_DATE_FORMAT: 'YYYYMMDD',\n\n  //gamify \n  GAMIFY_HABIT_GOLD_BASE_REWARD:  5,\n  GAMIFY_HABIT_EXPERIENCE_BASE_REWARD:  2,\n\n\n  HABIT_REWARDS_GOLD_BASE: 5,\n  HABIT_REWARDS_GOLD_PERCENTAGE_INCREASE: 0.2,\n  HABIT_REWARDS_EXPERIENCE_BASE: 3,\n  HABIT_REWARDS_EXPERIENCE_PERCENTAGE_INCREASE: 0.2,\n  HABIT_REWARDS_NEW_GOLD: 5,\n  HABIT_REWARDS_NEW_EXPERIENCE: 2,\n\n\n  TODO_NEW_GOLD_REWARDS: 1,\n  TODO_DONE_GOLD_REWARDS: 3,\n  TODO_NEW_EXPERIENCE_REWARDS: 2,\n  TODO_DONE_EXPERIENCE_REWARDS: 5,\n\n\n  //messages\n  MESSAGE_DURATION: 2000,\n\n  //Auth\n  TOKEN_EXPIRATION: 300, // how many days\n  SYNC_SERVER: 'https://auth.mlflabs.com',\n  AUTH_API_URL: 'https://auth.mlflabs.com',\n  //SYNC_SERVER: 'http://localhost:3002',\n  //AUTH_API_URL: 'http://localhost:3002',\n}, ...detail}\n","import { Habit, MOMENT_DATE_FORMAT, HabitAction } from './models';\nimport moment from 'moment';\nimport { FIRST_DAY_OF_WEEK, env } from '../../env';\nimport ulog from 'ulog';\n\nconst log = ulog('utils');\n\nexport interface GamifyRewards {\n  gold:number,\n  experience: number,\n  items:any[]\n}\n\nexport const mergeRewards = (rewards1: GamifyRewards, \n                             rewards2: GamifyRewards): GamifyRewards => {\n  return Object.assign({\n    gold: rewards1.gold + rewards2.gold,\n    experience: rewards1.experience + rewards2.experience,\n    items: [...rewards1.items, ...rewards2.items]\n  });\n}\n\n\n\nexport const getInitGamifyRewards =  (base?:GamifyRewards):GamifyRewards =>  {\n  return {...{ gold: 0, experience: 0, items:[] }, ...base};\n}\n\n\nconst sortByDate = (a, b) =>{\n  if(a.date > b.date) return 1;\n  return -1;\n}\n\nexport const calculateCurrentStreak = (habit: Habit, actions: HabitAction[]) => {\n    //loop through actions and add up rewards\n    let r ={habit: Object.assign(habit), rewards: getInitGamifyRewards()};\n    let rewards: GamifyRewards = getInitGamifyRewards();\n    actions.sort(sortByDate).forEach(action => {\n      //make sure we don't have future day, or past last calculated date day\n      if(r.habit.lastCalculatedDate){\n        if(moment(action.date).isBefore(moment(r.habit.lastCalculatedDate)))\n          throw new Error('Action date is too old, can not modify this action');\n        if(moment(action.date).isSame(moment(r.habit.lastCalculatedDate)))\n          throw new Error('Action for this date already submitted.');\n      }\n      if(moment(action.date).isAfter(moment()))\n        throw new Error('Action date is in the future, cannot modify this action');\n      \n      if(r.habit.regularityInterval === 'day')\n        r = calculateDailyChallengeStreak(r.habit, action)\n      else if(habit.regularityInterval === 'week')\n        r = calculateWeeklyChallengeStreak(r.habit, action)\n      else if(r.habit.regularityInterval === 'month')\n        r = calculateMonthlyChallengeStreak(r.habit, action)\n      else {\n        throw new Error('Challenge has incorrect regularityInterval, ' + \n          r.habit.regularityInterval )\n      }\n      rewards = mergeRewards(r.rewards, rewards);\n      \n    });\n    return {habit: r.habit, rewards};\n}\n\n\n//from action and back\nconst calculateDailyChallengeStreak = (habit: Habit, action: HabitAction) => {\n  \n\n  if(!habit.lastCalculatedDate) {\n    habit.actions = {};\n    habit.lastCalculatedDate = moment(action.date).subtract(1,'d').format(MOMENT_DATE_FORMAT);\n    habit.biggestStreak = 0;\n    habit.currentStreak = 0;\n  }\n\n  habit.actions[action.date] = action;\n\n  let currentAction;\n  let currentDateMoment = moment(habit.lastCalculatedDate).add(1, 'd');\n\n  //run this after going action/lastcalculateddate logic\n  while(currentDateMoment.isSameOrBefore(moment(action.date))) {\n    currentAction = habit.actions[currentDateMoment.format(MOMENT_DATE_FORMAT)];\n\n    //see if its null, no action or if contains values\n    if(currentAction) {\n      //do we have a value\n      if(currentAction.value >= habit.regularityEachDayGoal){\n        //success\n        habit.currentStreak++;\n      }\n      else {\n        //we have an action, but not a success\n        habit.currentStreak = 0;\n      }\n    }\n    else {\n        //currentAction is null, failed\n        habit.currentStreak = 0;\n    }\n    if(habit.currentStreak > habit.biggestStreak)\n      habit.biggestStreak = habit.currentStreak;\n\n    currentDateMoment.add(1, 'day');\n  }\n\n  habit.lastCalculatedDate = action.date;\n\n  //calculate rewards\n  let rewards = getInitGamifyRewards();\n  if(habit.currentStreak === 0){\n    rewards.gold = Math.floor(env.GAMIFY_HABIT_GOLD_BASE_REWARD * \n                        (action.value / habit.regularityEachDayGoal));\n    rewards.experience = Math.floor(env.GAMIFY_HABIT_EXPERIENCE_BASE_REWARD * \n                        (action.value / habit.regularityEachDayGoal));\n  }\n  else {\n    rewards.gold = calculateGoldByStreak(habit.currentStreak, \n                                          habit.difficulty,\n                                          env.GAMIFY_HABIT_GOLD_BASE_REWARD);\n    rewards.experience = calculateExperienceByStreak(habit.currentStreak,\n                                          habit.difficulty,\n                                          env.GAMIFY_HABIT_EXPERIENCE_BASE_REWARD);\n  }\n  return {habit: Object.assign(habit), rewards};\n}\n\n\n\nconst analizeDay = (currentAction: HabitAction, \n                     habit:Habit):{habit:Habit, \n                                   rewards:GamifyRewards} => {\n   //see if its null, no action or if contains values\n   let rewards = getInitGamifyRewards();\n   if(currentAction) {\n    //do we have a value\n    if(currentAction.value >= habit.regularityEachDayGoal){\n      //success\n      if(habit.currentTimeperiedStreak < habit.regularityIntervalGoal){\n        habit.currentTimeperiedStreak++;\n        habit.currentStreak++;\n        rewards.gold = calculateGoldByStreak(habit.currentStreak, \n          habit.difficulty,\n          env.GAMIFY_HABIT_GOLD_BASE_REWARD);\n        rewards.experience = calculateExperienceByStreak(habit.currentStreak,\n          habit.difficulty,\n          env.GAMIFY_HABIT_EXPERIENCE_BASE_REWARD);\n      }\n      else\n      {\n        //we made it, but we are over the goal value, just give basic bonus\n        //make it half of even a non streak one\n        rewards.gold = Math.floor(env.GAMIFY_HABIT_GOLD_BASE_REWARD/2);\n        rewards.experience = Math.floor(env.GAMIFY_HABIT_EXPERIENCE_BASE_REWARD/1.5);\n      }\n    } \n    else {\n      //we didn't make it this day, just give a basic, fraction of base reward\n      rewards.gold = calculateGoldByStreak(habit.currentStreak, \n        habit.difficulty,\n        env.GAMIFY_HABIT_GOLD_BASE_REWARD);\n      rewards.experience = calculateExperienceByStreak(habit.currentStreak,\n        habit.difficulty,\n        env.GAMIFY_HABIT_EXPERIENCE_BASE_REWARD);\n    }\n  }\n   \n  if(habit.currentStreak > habit.biggestStreak)\n    habit.biggestStreak = habit.currentStreak;\n  \n  return {habit: Object.assign(habit), rewards};\n}\n\n//from action and back\nconst calculateMonthlyChallengeStreak = (h: Habit, action: HabitAction) => {\n  let habit = Object.assign(h);\n  if(!habit.lastCalculatedDate) {\n    habit.actions = {};\n    habit.lastCalculatedDate = moment(action.date).subtract(1,'d').format(MOMENT_DATE_FORMAT);\n    habit.biggestStreak = 0;\n    habit.currentStreak = 0;\n    habit.currentTimeperiedStreak = 0;\n    habit.currentTimeperiodLastDay = moment(habit.lastCalculatedDate).date(1)\n                                        .add(1, 'month').format(MOMENT_DATE_FORMAT);\n  }\n\n  habit.actions[action.date] = action;\n\n  let currentAction;\n\n  let nextTimeperiodFirstDay = moment(habit.currentTimeperiodLastDay);\n  let currentDateMoment = moment(habit.lastCalculatedDate).add(1, 'd');\n  let rewards = getInitGamifyRewards();\n  //run this after going action/lastcalculateddate logic\n  while(currentDateMoment.isSameOrBefore(moment(action.date))) {\n    currentAction = habit.actions[currentDateMoment.format(MOMENT_DATE_FORMAT)];\n\n    //are we in the same week\n    if(currentDateMoment.isBefore(nextTimeperiodFirstDay)) {\n      const res = analizeDay(currentAction, habit)\n      habit = res.habit;\n      rewards = res.rewards;\n\n    }\n    else{ \n      //starting new timeperiod\n      //see if we made it last period\n      if(habit.currentTimeperiedStreak < habit.regularityIntervalGoal){\n        //we didn't make it, clear the streak\n        habit.currentStreak = 0;\n      }\n      nextTimeperiodFirstDay.add(1, 'month');\n      habit.currentTimeperiodLastDay = nextTimeperiodFirstDay.format(MOMENT_DATE_FORMAT);\n      //if we are before action date, its an error, too big of time span\n      if(currentDateMoment.isAfter(nextTimeperiodFirstDay)){\n        throw new Error('Action dates are too much apart.');\n      }\n      habit.currentTimeperiedStreak = 0;\n      const res = analizeDay(currentAction, habit);\n      habit = res.habit;\n      rewards = res.rewards;\n    }\n    currentDateMoment.add(1, 'day');\n  }\n\n  habit.lastCalculatedDate = action.date;\n  return {habit, rewards};\n}\n\n\n\nconst calculateWeeklyChallengeStreak = (h:Habit, action:HabitAction) => {\n  let habit = h;\n  if(!habit.lastCalculatedDate) {\n    habit.lastCalculatedDate = moment(action.date).subtract(1,'d').format(MOMENT_DATE_FORMAT);\n    habit.biggestStreak = 0;\n    habit.currentStreak = 0;\n    habit.currentTimeperiedStreak = 0;\n    habit.currentTimeperiodLastDay = moment(habit.lastCalculatedDate).day(FIRST_DAY_OF_WEEK)\n                                          .add(1, 'week').format(MOMENT_DATE_FORMAT);\n                                          habit.actions = {};\n  }\n\n  habit.actions[action.date] = action;\n\n  let currentAction;\n\n  let nextWeekFirstDay = moment(habit.currentTimeperiodLastDay);\n  let currentDateMoment = moment(habit.lastCalculatedDate).add(1, 'd');\n  let rewards = getInitGamifyRewards();\n  //run this after going action/lastcalculateddate logic\n  while(currentDateMoment.isSameOrBefore(moment(action.date))) {\n    currentAction = habit.actions[currentDateMoment.format(MOMENT_DATE_FORMAT)];\n\n    //are we in the same week\n    if(currentDateMoment.isBefore(nextWeekFirstDay)) {\n      const res = analizeDay(currentAction, habit)\n      rewards = res.rewards;\n      habit = res.habit;\n    }\n    else{ \n      //starting new timeperiod\n      //see if we made it last period\n      if(habit.currentTimeperiedStreak < habit.regularityIntervalGoal){\n        //we didn't make it, clear the streak\n        habit.currentStreak = 0;\n      }\n      nextWeekFirstDay.add(1, 'week');\n      habit.currentTimeperiodLastDay = nextWeekFirstDay.format(MOMENT_DATE_FORMAT);\n      //if we are before action date, its an error, too big of time span\n      if(currentDateMoment.isAfter(nextWeekFirstDay)){\n        throw new Error('Action dates are too much apart.');\n      }\n      habit.currentTimeperiedStreak = 0;\n      const res = analizeDay(currentAction, habit);\n      habit = res.habit;\n      rewards = res.rewards;\n    }\n    currentDateMoment.add(1, 'day');\n  }\n\n  habit.lastCalculatedDate = action.date;\n  return {habit, rewards};\n}\n\n\nconst calculateExperienceByStreak = (streak, difficulty,  baseXP) => {\n  let exponent = 0.7 + difficulty/5;\n  return Math.floor(baseXP + (streak * exponent))\n  \n}\n\nconst calculateGoldByStreak = (streak, difficulty,  baseXP) => {\n  let exponent = 1 + difficulty/5;\n  return Math.floor(baseXP + (streak * exponent))\n  \n}\n\n","import { PROJECT_SERVICE, DIV, PROJECT_INDEX_SERVICE, ProjectItem, Doc } from './models';\nimport shortid from 'shortid';\nimport { env } from '../../env';\n\nexport const TYPE_SETTINGS = 'set';\n\nexport function generateUserChannelId(userid): string {\n  return 'u' + env.APP_ID + userid;\n}\n\nexport function getDefaultProject(userid): ProjectItem {\n  const uuid = 'u' + env.APP_ID + userid;\n  return {\n    id: generateProjectUUID(uuid, ''),\n    rev: 1,\n    name: 'default',\n    access:[],\n    type: TYPE_SETTINGS,\n    updated: 0, //Date.now(),\n    [env.ACCESS_META_KEY]: genrateMetaData(userid), \n  }\n}\n\nexport function generateUUID():string {\n  let id;\n  let ok = false;\n  while (!ok) {\n    id = shortid.generate();\n    if(id.substring(0,1)!== '_' && id.substring(0,1)!== '-')\n      ok = true;\n  }\n\n  return id;\n}\n\nexport function isThisUserProject(id:string|undefined, userid): boolean {\n  return (getChannelFromProjectId(id) === generateUserChannelId(userid));\n}\n\nexport function getChannelNameFromId(id:string|undefined) {\n  if(id === undefined) throw new Error('Id cannot be undefined');\n  return id.split(DIV)[0];\n}\n\nexport function getProjectChildId(id:string|undefined): string {\n  if(id === undefined) throw new Error('Id can not be undefined');\n  let length = PROJECT_INDEX_SERVICE.length + DIV.length;\n  return id.substring(0, id.length-length);\n}\n\nexport function getChannelFromProjectId(id: string|undefined):string {\n  return getProjectChildId(id);\n}\n\nexport function generateProjectUUID(id = generateUUID(), app = env.APP_ID):string {\n  return app + id +  DIV + PROJECT_INDEX_SERVICE;\n}\n\nexport function generateProjectChildId(projectId: string, type: string, id = generateUUID()):string {\n  return PROJECT_SERVICE+ DIV + projectId.split(DIV)[1] + DIV + type +\n          DIV + id;\n}\n\nexport function generateCollectionId(projectid: string, collection, id = generateUUID()): string {\n  //eliminate dots from id, not allowed\n  id = id.replace('.','');\n  \n  if(projectid === undefined) throw new Error(\"Project can't be underfined\");\n  const length = PROJECT_INDEX_SERVICE.length;\n  return projectid.substring(0, projectid.length-length)+collection+ DIV +id; \n}\n\nexport const waitMS = (ms) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n};\n\n\nexport function saveIntoArray(item: Object, ary: Array<any> = [], idKey: string = 'id'): Array<any> {\n  let i = getIndexById(item[idKey], ary, idKey);\n  if (i === -1) {\n    i = ary.length;\n  }\n  return [...ary.slice(0, i),\n  Object.assign({}, item),\n  ...ary.slice(i + 1)];\n}\n\nexport function genrateMetaData(userid:string):string[]{\n    return [ 'u'+ env.APP_ID + userid,]; \n}\n\n\n\nexport function getIndexById(id: string, ary: any, idKey: string = 'id'): number {\n  for (let i = 0; i < ary.length; i++) {\n    if (id === ary[i][idKey]) {\n      return i;\n    }\n  }\n  // if we don't have a match return null\n  return -1;\n}\n\nexport const extractTypeCollectionFromDocId = (id) => {\n  return id.split(DIV)[2];\n}\n\nexport const extractChannelNameFromDocId = (id) => {\n  return id.split(DIV)[0];\n}\n\n\n//rights functions\n/*\n    Rights, each digit represents different right\n    0.  0 - Not admin 1- Admin, can change everything\n    1.  (Project item) 0 - can't see, 1 - can see, 2 - can edit\n    2.  (Project children) 0 - can't see, 1 - can see own, 2 - can see all items\n    3.  (Project children edit) 0 -can't edit, 1 can edit/make own, 2 can edit all \n*/\n\nexport const getDocumentRights = (id: string|undefined, user):string|undefined => {\n  const channel = getChannelNameFromId(id);\n  return user[env.ACCESS_META_KEY][channel];\n}\n\nexport const canEditProject = (id, user): boolean => {\n  const rights = getDocumentRights(id, user);\n  if(!rights) return false;\n  return canEditProjectByRights(rights);\n} \n\nexport const canEditProjectByRights = (rights: string): boolean => {\n  if(rights.substring(0,1) === '1') return true;\n  if(rights.substring(1,2) === '2') return true;\n  return false;\n}\n\n\nexport const canEditDoc= (doc:Doc, user): boolean => {\n  const rights = getDocumentRights(doc.id, user);\n  if(!rights) return false;\n  return canEditItemByRights(rights, doc.creator === user.id);\n} \n\nexport const canEditOwnedItemByRights = (rights: string): boolean => {\n  if(rights.substring(0,1) === '1') return true;\n  if(rights.substring(3,4) === '1') return true;\n  if(rights.substring(3,4) === '2') return true;\n  return false;\n}\n\nexport const canEditOthersItemByRights = (rights: string): boolean => {\n  if(rights.substring(0,1) === '1') return true;\n  if(rights.substring(3,4) === '2') return true;\n  return false;\n}\n\nexport const canEditItemByRights = (rights: string, myItem:boolean): boolean => {\n  return (myItem)? canEditOwnedItemByRights(rights) : canEditOthersItemByRights(rights);\n}\n\n","import { Doc } from '../../modules/data/models'\nimport { GamifyRewards, getInitGamifyRewards } from '../habits/utilsHabits';\nimport { getProjectChildId } from '../../modules/data/utilsData';\n\nexport const TYPE_TODO = 'todo';\nexport const TYPE_TODO_LIST = 'todolist';\nexport const TYPE_TODO_FOLDER = 'todoFolder';\nexport const TYPE_TODO_TAG = 'todoTag';\n\nexport const FOLDER_BASE_POSITION = 'base';\n\nexport const getDefaultTodoList = (name:string = 'tasks', projectid:string):TodoList => {\n  const project = getProjectChildId(projectid);\n  return new TodoList({\n    id: undefined,\n    folder: undefined,\n    type: TYPE_TODO_LIST,\n    icon: 'check',\n    secondaryType: TYPE_TODO_LIST,\n    name,\n    fullname: project + name,\n  })\n}\n\nexport class TodoList extends Doc {\n  folder: string = FOLDER_BASE_POSITION;\n  type: string = TYPE_TODO_LIST;\n  project?: string;\n  icon?:string;\n  color?:string;\n  _new?: boolean;\n  fullname:string;\n  secondaryType:'todolist'|'todoFolder'  = TYPE_TODO_LIST\n\n  constructor(values: Object = {}) {\n    super();\n    Object.assign(this, values);\n    this.fullname = values['fullname'];\n  }\n}\n\nexport const getDefaultTodoTag = (name:string = 'tasks', icon:string ='check'):TodoTag => {\n  return new TodoTag({\n    id: undefined,\n    type: TYPE_TODO_TAG,\n    icon,\n    name,\n  })\n}\n\nexport class TodoTag extends Doc {\n  type: string = TYPE_TODO_TAG;\n  icon?:string;\n  animatedIcon?:any;\n  color?:string;\n  _new?: boolean;\n  constructor(values: Object = {}) {\n    super();\n    Object.assign(this, values);\n    //this.fullname = values['fullname'];\n  }\n}\n\nexport class Todo extends Doc {\n  note?: string;\n  type: string = TYPE_TODO;\n\n  done: boolean;\n  date: number|null;\n  list: string = 'default';\n  tags: string[];\n\n\n  _new?: boolean; // for saving new docs, temp solution\n    //sub tasks\n  parent: string | null;\n  subTodos: string[];\n  showSubTodos: boolean;\n  showDone: boolean;\n\n  newRewards: GamifyRewards;\n  doneRewards: GamifyRewards;\n  \n  constructor(values: Object = {}) {\n    super();\n    this.done = false;\n    this.date = null;\n    this.tags = [];\n    this.parent = null;\n    this.subTodos = [];\n\n    this.showSubTodos = false;\n    this.showDone = false;\n\n    this.newRewards = getInitGamifyRewards();\n    this.doneRewards = getInitGamifyRewards();\n    \n    Object.assign(this, values);\n\n  }\n}","import React, { useState } from 'react'\nimport Lottie from 'react-lottie';\nimport './default.css'\n\nexport const waitMS = (ms: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n};\n\n\nfunction AnimatedIcon({iconsvg, actionFunc}:\n    {iconsvg:any, actionFunc:Function}) {\n  const [state, setState] = useState({isStopped:true, isPaused:true})\n\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: false, \n    render: 'svg',\n    animationData: iconsvg,\n    rendererSettings: {\n      clearCanvas: true,\n      scaleMode: 'noScale',\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  }; \n\n  const actionHandler = async() => {\n    setState({isStopped:false, isPaused:false});\n    \n\n    await waitMS(1000);\n    actionFunc();\n    setState({isStopped:true, isPaused:true});\n  }\n\n  return (\n    <div onClick={() => actionHandler()} className =\"animatedfunction\">\n      <Lottie  options={defaultOptions}\n          height={25}\n          width={25}\n          isStopped={state.isPaused}\n          isPaused={state.isStopped}/>\n    </div>\n  )\n}\n\nexport default AnimatedIcon;\n","import { Doc, ProjectItem } from \"../data/models\";\n\nexport const TYPE_PARTY = 'party';\n\nexport enum ChallengeState {\n  finished = 'finished',\n  current = 'current',\n  future = 'future',\n  waiting = 'waiting',\n  resting = 'resting',\n}\n\nexport enum ChallengeType {\n  checkin = 'Check-In',\n  value = 'Value',\n  note = 'Note',\n  quizz = 'Quizz',\n}\n\nexport enum ChallengeTypeUnit {\n  Cup = 'Cup',\n  Dollar = \"Dollar\",\n  Page = 'Page',\n  Minute = 'Minute',\n  Hour = 'Hour',\n  Meter = 'Meter',\n  Kilometer = 'Kilometer',\n  Other = 'Other'\n}\n\n\nexport enum ChallengeDifficulty {\n  trivial, easy, medium, hard, extreme\n}\n\nexport enum ChallengeIntervals {\n  day = 'day',\n  week = 'week',\n  month = 'month'\n}\n\nexport interface PartyMember {\n  id: string,\n  username: string,\n  rights: string,\n  score: {reward: number},\n  scoreHistory: {[key:string]: {reward:number}};\n}\n\nexport interface ChallengeRewards {\n  value: number,\n  item?: any,\n}\n\nexport interface ChallengeAction {\n  date: string,\n  value: number, \n  reward: ChallengeRewards,\n  data?: any,\n}\nexport interface ChallengeMember {\n  id: string,\n  username: string,\n  score: {reward: number},\n  joinDate: number,\n  actions: { [key:string]: ChallengeAction },\n  lastCalculatedDate?: string,\n  currentStreak?: number,\n  biggestStreak?: number,\n}\n\n\nexport class PartyProject extends ProjectItem {\n  type: string = TYPE_PARTY\n  secondaryType: string = 'project'\n  creator: string = '';\n  dirty: number = 0;\n  members: PartyMember[]  = []\n\n  moneyTypeSingle: string = 'Ruby';\n  moneyTypeMultiple: string =  'Rubies';\n  moneyColor: string = '#ff0000'\n\n\n  constructor(values: Object = {}) {\n    super()\n    Object.assign(this, values);\n  }\n}\n\nexport class Challenge extends Doc {\n  name: string = 'New Challenge';\n  note?: string;\n  type:string = TYPE_PARTY;\n  access: string = ''\n  secondaryType: string = 'challenge'\n  state: ChallengeState = ChallengeState.waiting;\n  difficulty:ChallengeDifficulty = ChallengeDifficulty.medium;\n  //regularity\n  regularityInterval:ChallengeIntervals = ChallengeIntervals.day;\n  regularityIntervalGoal: number = 1;\n  regularityEachDayGoal: number = 1;\n\n  //type\n  challengeType: ChallengeType = ChallengeType.checkin;\n  challengeTypeUnit: ChallengeTypeUnit = ChallengeTypeUnit.Other;\n  chalengeTypeOther: string = '';\n\n  chalengeTypeNoteVote: boolean = false;\n\n  //members\n  members: ChallengeMember[]  = []\n\n  constructor(values: Object = {}) {\n    super()\n    Object.assign(this, values);\n  }\n}\n","import Dexie from 'dexie';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { DataChangeEvent } from '../dataService';\nimport { Subscription } from 'rxjs';\nimport { env } from '../../../env';\nimport ulog from 'ulog';\n\nconst log = ulog('dexie');\n\nexport interface DatabaseScheme {\n  name: string,\n  version: number,\n  tables: TableScheme[],\n}\n\nexport interface TableScheme {\n  name: string,\n  columns: string,\n  sync: boolean,\n}\n\n\nexport default class DexieAdapter {\n\n  private db;\n  private _ready = false;\n  public ready$ = new BehaviorSubject(this._ready);\n  private _subscriptions:Subscription[] = [];\n\n  public changes$ = new Subject<DataChangeEvent>();\n\n  constructor(scheme: DatabaseScheme) {\n    this.db = new Dexie(env.APP_ID +  scheme.name+ '_dexie');\n    const stores = {};\n    scheme.tables.forEach(t => {\n      stores[t.name] = t.columns;\n    });\n    this.db.version(scheme.version).stores(stores);\n    this._init();\n  }\n\n  private async _init() {\n    try {\n      await this.db.open();\n      this._ready = true;\n      this.ready$.next(true);\n    }\n    catch(e) {\n      log.error(e);\n    }\n  }\n\n  public async destroy() {\n    this._subscriptions.forEach(sub => {\n      if(sub)sub.unsubscribe();\n    })\n  }\n\n  public async getDoc(id: string, collection: string): Promise<any> {\n    //const res = await this.db[collection].where('id').equals(id).first();\n    const res = await this.db[collection].get({id});\n    if(res) return res;\n    return null;\n  }\n\n  public async getBulk(ids: string[], collection: string): Promise<any> {\n    const res = await this.db[collection].bulkGet(ids);\n    return res.filter(doc => doc !== undefined)\n  }\n\n  public async queryByProperty(field: string, operator: string, \n      value: any, collection: string): Promise<any> {\n    switch(operator) {\n      case 'equals':\n        const docs = await this.db[collection].where(field).equals(value).toArray();\n        return docs;\n      case 'startsWith':\n        return await this.db[collection].where(field).startsWith(value).toArray();\n      case 'notEqual':\n        return await this.db[collection].where(field).notEqual(value).toArray();\n      default:\n        throw new Error('Missing proper operator, given: '+ operator);\n    }\n  }\n\n  public async getProjectItems(projectid: string, collection: string) {\n    const res = await this.db[collection].where('id').startsWith(projectid).toArray();\n    return res;\n  }\n\n  public async save(doc: any, collection: string, setDirty = true){\n    if(setDirty)\n      doc.dirty = 1;\n    const res = await this.db[collection].put(doc);\n    if(res) {\n      this.changes$.next({doc});\n      return true\n    }\n    return false;\n  }\n\n  public async saveFromSync(docs: any[], collection: string){\n    const res = await this.db[collection].bulkPut(docs);\n    if(res) {\n      docs.forEach(doc => {\n        this.changes$.next({doc});\n      })\n      return true\n    }\n    return false;\n  }\n\n\n}","\n\nclass LocalStorageService {\n  \n  async getItem(id: string){\n    return localStorage.getItem(id);\n  }\n\n  async getString(id: string):Promise<string>{\n    let val:string;\n    val = localStorage.getItem(id) || '';\n    return val;\n  }\n\n  async getObject(id: string):Promise<object|null> {\n    const val = localStorage.getItem(id);\n    if(!val)return null;\n    return JSON.parse(val);\n\n  }\n\n  async setObject(id: string, val: object):Promise<boolean> {\n    try {\n      const str = JSON.stringify(val);\n      await localStorage.setItem(id, str);\n      return true;\n    }\n    catch(e){\n      console.log(e);\n      return false;\n    }\n    \n\n  }\n\n\n\n  async setString(id: string, val: string) {\n    localStorage.setItem(id, val);\n  }\n  \n}\n\nconst localStorageService = new LocalStorageService();\n\nexport default localStorageService;","import moment from 'moment';\nimport ulog from 'ulog'\n\nconst log = ulog('utils');\n\nexport const capitalize = (s: string) => {\n  if (typeof s !== 'string') return ''\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nexport const printDateRelative = (timestamp: number) => {\n  try {\n    const m = moment(timestamp);\n\n    if(moment().diff(m, 'd') < 3){\n      return m.fromNow();\n    }\n    else {\n      return m.format('DD-MM-YYYY');\n    }\n  }\n  catch(e){\n    log.error(e);\n  }\n}\n\nexport function getNested(obj: any, ...args: string[]) {\n  return args.reduce((obj, level) => obj && obj[level], obj)\n}\n\nexport const waitMS = (ms: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n};\n\nexport function getAction(todo:string, data = {}){\n  return {type:todo, data:data};\n}\n\nexport function printCleanNote(text: string) {\n  const t = text.replace(/(\\r\\n|\\n|\\r)/gm,\" \");\n  if(t.length > 40)\n    return t.substring(0,37)+'...';\n  return t;\n}\n\nexport function saveIntoArray(item: Object, ary: Array<any> = [], idKey: string = 'id'): Array<any> {\n  let i = getIndexById(item[idKey], ary, idKey);\n  if (i === -1) {\n    i = ary.length;\n  }\n  return [...ary.slice(0, i),\n          Object.assign({}, item),\n          ...ary.slice(i + 1)];\n}\n\nexport function saveIntoDocList(item: Object, ary: Array<any> = [], idKey: string = 'id'): Array<any> {\n  if(item['deleted']){\n    return ary.filter(d => d[idKey] !== item[idKey])\n  }\n  let i = getIndexById(item[idKey], ary, idKey);\n  if (i === -1) {\n    i = ary.length;\n  }\n  return [...ary.slice(0, i),\n          Object.assign({}, item),\n          ...ary.slice(i + 1)];\n}\n\nexport function getIndexById(id: string, ary: any, idKey: string = 'id'): number {\n  for (let i = 0; i < ary.length; i++) {\n    if (id === ary[i][idKey]) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nexport function findById(id:any, ary: any[], idKey: string = \"id\"): any {\nfor (let i = 0; i < ary.length; i++) {\n    if (id === ary[i][idKey]) {\n      return ary[i];\n    }\n  }\n  return null;\n}\n\nexport function removeFromArrayById(id: any, ary:Array<any>, idKey = 'id') {\n  return ary.filter(o => o[idKey] !== id);\n}\n\nexport function clamp(val:number, max:number, min:number = 0): number {\n  if(val > max) return max;\n  if(val < min) return min;\n  return val;\n}","import axios from 'axios';\nimport { getNested } from '../../utils';\nimport { loadingService } from '../loading/loadingService';\nimport ulog from 'ulog';\n\nconst log = ulog('ajax');\n\n\nexport interface ajaxResponse {\n  success: boolean,\n  data: any,\n  status?: number,\n  errors?: errorMessage[]\n}\n\n\nexport const getAjaxMessage = (success:boolean, data:any, \n    status:number = 0, errors: errorMessage[] = []): ajaxResponse => {\n  return {success, data, status, errors}\n}\n\nexport const getAjaxErrorMessage = (errorMessage: string, \n  location='system', status:number = 404 ) => {\n    return getAjaxMessage(false, null, status, \n      [{location, msg:errorMessage}])\n}\n\nexport interface errorMessage {\n  location: string,\n  msg: string\n}\n\nexport interface postRequest {\n  url: string,\n  type: string,\n  form: object,\n  options?: object,\n}\n\nexport interface getRequest {\n  url: string,\n  type: string,\n  form: object,\n  options?: object,\n}\n\nexport const getPostRequest = (url:string, form:object, options:object = {}, ) => {\n    return {url, type:'post', form, options};\n}\n\n\n\nexport const getErrorMessage = (msg: string, location:string = \"Server\"):errorMessage => {\n  return {msg, location};\n}\n\nexport const post = async (req: postRequest, showLoading = true, loadingMessage=\"Loading...\"):Promise<ajaxResponse> => {\n  try {\n    if(showLoading)\n      loadingService.showLoading(loadingMessage);\n    const res = await axios.post(req.url, req.form, req.options);\n\n    loadingService.hideLoading();\n    log.info(res);\n    return getAjaxMessage(true, res.data, 200);\n  }\n  catch(err) {\n    loadingService.hideLoading();\n    const response = getNested(err, 'response');\n    if(!response || !response.status) {\n      return getAjaxMessage(false, null, 503, [getErrorMessage(\"Service is temporarly unavailable\")]);\n    }\n    else if(response.status === 422){\n      return getAjaxMessage(false, null, response.data.status, response.data.errors);\n    }\n    else if(response.status === 404) {\n      return getAjaxMessage(false, null, 404, [getErrorMessage(\"Could not connect to server\")]);\n    }\n    else {\n      return getAjaxMessage(false, null, response.status, [getErrorMessage(\"Could not connect to server\")]);\n    }\n  }\n}\n","import { Subject } from 'rxjs';\nimport { ajaxResponse } from '../ajax/ajax';\nimport { toast } from 'react-toastify';\n\nexport interface ToastMessage {\n  message: string,\n  duration: number,\n  key?: number,\n}\n\nexport enum ToastType {\n  default = \"default\", \n  info = \"info\", \n  success = \"success\", \n  warning = \"warning\", \n  error = \"error\"\n}\n\n\nexport class ToastService {\n\n  public messages$ = new Subject<ToastMessage>();\n\n  showMessage(message: string, type:ToastType = ToastType.default, milliseconds: number = 3000) {\n    toast(message, {\n      type: type,\n      autoClose: milliseconds,\n    })\n  }\n\n  printSimpleError (msg:string, duration = 2000) {\n    toast( msg, {type: ToastType.error, autoClose: duration})\n  }\n\n  //TODO: for now only prints the first error\n  printServerErrors (res:ajaxResponse) {\n    const errors = res.errors || [];\n    if(errors.length > 0){\n      errors.forEach(err => this.showMessage(err.msg, ToastType.error))\n    }\n  }\n\n\n\n}\nexport const toastService = new ToastService();\n\n\n","\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport * as moment from 'moment';\nimport { isEqual } from 'lodash';\nimport localStorageService from '../localStorage/localStorageService';\nimport {env} from '../../env';\nimport  { getPostRequest, post, ajaxResponse } from '../ajax/ajax';\nimport { toastService } from '../toast/toastService';\nimport ulog from 'ulog';\n\nconst log =  ulog('auth');\n\nexport enum AuthStatus {\n  Loading, \n  Guest, //not loged in\n  User // loged in\n}\n\nexport const GUEST = 'Guest';\nexport const AUTH_USER_KEY = 'auth-user-key';\nexport interface AuthEvent {\n  success: boolean;\n  code: number;\n  data: any;\n}\n\nexport interface User {\n  id: string,\n  username: string;\n  email: string|null;\n  token: string|null;\n  token_expiery: number|null;\n  access: any[];\n}\n\n\n\nexport const getUser = (values: any):User => {\n  if(values == null)\n    return {\n      id: 'guest',\n      username: GUEST,\n      email: null,\n      token: null,\n      token_expiery: null,\n      access: []\n    }\n\n  return {\n    id: values.id || 'guest',\n    username: values.username || GUEST,\n    email: values.email||null,\n    token: values.token||null,\n    token_expiery: values.token_expiery||values.expires||null,\n    access: values.access || []\n  }\n}\n\nexport const isGuest = (user:User) => {\n  return user.username === GUEST;\n}\n\nexport function getGuestUser(username:string = 'Guest'):User {\n  return getUser({ username });\n}\n\n\nexport class AuthService {\n  private _user:User = getGuestUser('null');\n  private _authStatus = AuthStatus.Loading;\n  public authStatus$ = new BehaviorSubject(this._authStatus);\n  public username$ = new Subject<string>();\n\n  constructor() {\n    this.loadAuth();\n  }\n\n  getIsAuthenticated():boolean { return this._authStatus === AuthStatus.User; }\n  getUsername() { return this._user.username; }\n  getEmail() { return this._user.email;}\n  getUser() { return this._user };\n\n\n  async updateUser(user: User, forceLogout = false) {\n    // log.info('Userupdate: ', user, forceLogout, this._authStatus);\n    log.info('Update User:: ', user);\n    if(!isGuest(user) || this._user.username ==='null') {\n\n      if(this._authStatus !== AuthStatus.User) {\n        this.setAuthStatus(AuthStatus.User);\n      }\n\n      if(user.username !== this._user.username){\n        this._user = user;\n        await localStorageService.setObject(AUTH_USER_KEY, user)\n        this.username$.next(user.username);\n      }\n      if(!isEqual(this._user, user)) {\n        log.info('New user object, save it', user);\n        this._user = user;\n        await localStorageService.setObject(AUTH_USER_KEY, user)\n      }\n      \n      return;\n    }\n\n    if(this._authStatus !== AuthStatus.Guest){\n      this.setAuthStatus(AuthStatus.Guest)\n  \n      if(forceLogout){\n        await localStorageService.setObject(AUTH_USER_KEY, getGuestUser);\n      }\n    }\n  }\n\n\n\n\n  async loadAuth() {\n    try {\n      const user = getUser(await localStorageService.getObject(AUTH_USER_KEY));\n      log.info('LOADED USER', user);\n\n      if(!user.token || !user.token_expiery) {\n        return this.updateUser(getGuestUser());\n      }\n      const exp = moment.unix(user.token_expiery);\n      if(exp.isAfter(moment.now())) {\n        return this.updateUser(user);\n      }\n      else {\n        log.warn('TOKEN is old');\n        return this.updateUser(getGuestUser())\n      }\n    }\n    catch(e) {\n      log.error(e);\n      return this.updateUser(getGuestUser())\n    }\n  }\n\n\n  public async loginAndRedirect(id: string, password: string, history, location) {\n    const res = await post( getPostRequest(env.AUTH_API_URL+'/auth/login',\n      { id, password, app: env.APP_ID },), true,  'Login in, please wait');\n      if(res.success) {\n        this.updateUser(getUser(res.data))\n        let next;\n        if(location && location.state && location.state.prev){\n          next = location.state.prev.startsWith('/auth/')? '/': location.state.prev;\n        }\n\n        history.push(next || '/');\n      }\n      else {\n        toastService.printServerErrors(res);\n      }\n  }\n\n  public async logout() {\n    \n  }\n\n  public async login(id: string, password: string):Promise<ajaxResponse> {\n    const res = await post( getPostRequest(env.AUTH_API_URL+'/auth/login',\n      { username: id, password: password, app: env.APP_ID }, {}), true,  'Login in, please wait');\n\n    return res;\n  }\n\n\n  public async renewToken() {\n    const res = await post(getPostRequest(env.AUTH_API_URL+'/auth/renewToken',\n                          {token: this._user.token}), false);\n    log.info('Renewed Token: ', res);\n    if(res.success){\n      await this.updateUser({...this._user, ...{token: res.data.token, \n                                [env.ACCESS_META_KEY]: res.data[env.SERVER_ACCESS_META_KEY],\n                                token_expiery: res.data.expires}})\n      return true;\n    }\n    else {\n      //is it bad token, or just no internet\n      if(res.status && res.status === 422){\n        await this.updateUser(getGuestUser());\n        return false;\n      }\n    }\n\n\n  }\n\n  public async register(username:string, email: string, password: string): Promise<boolean> {\n    const res = await post( getPostRequest(env.AUTH_API_URL+'/auth/register',\n                      { username, password, email }),\n                      true,  'Registering, please wait');\n    if(res.success) {\n        return true;\n    }\n    else {\n      toastService.printServerErrors(res);\n      return false;\n    }\n  }\n\n  public async forgotPassword() {\n    //const res = await this.http.post(environment.auth_api+'/auth/forgotpassword'\n  }\n\n\n  private setAuthStatus(status:AuthStatus){\n    this._authStatus = status;\n    this.authStatus$.next(status);\n  }\n\n  public getAuthStatus():AuthStatus {\n    return this._authStatus;\n  }\n\n  public getToken():string {\n    return this._user.token || '';\n  }\n\n  public get userid(): string {\n    return this._user.id || '';\n  }\n\n\n\n}\nexport const authService = new AuthService();\n\n","import { post, getPostRequest } from '../ajax/ajax';\nimport { DIV } from './models';\nimport localStorageService from '../localStorage/localStorageService';\nimport ulog from 'ulog';\n\nconst log = ulog('sync');\n\nexport interface SyncDataChannel {\n  name: string,\n  docs: any[],\n}\n\n\nexport const organizeData = async (data: any[]) => {\n  const channels = {};\n  let channel;\n\n  data.forEach(doc => {\n    channel = doc.id.split(DIV)[0];\n    if(!channels[channel]) channels[channel] = [];\n    channels[channel].push({...{}, ...doc});\n\n  });\n  //now load channel checkpoints\n  const checkpoints = await localStorageService.getObject('channel_checkpoints') || {};\n  return {channels: channels, checkpoints};\n}\n\nexport const syncData = async (props:{  data:any[],\n                                        syncurl: string, \n                                        token: string, \n                                        checkpoint: number,\n                                        requestMaxSize:number}) => {\n  //TODO: check our size of docs, if its bigger than max size\n  try {\n    //get checkpoint\n    const data =  await organizeData(props.data);\n    const res = await post(getPostRequest(props.syncurl + '/sync/sync', {\n      token: props.token,\n      checkpoint: props.checkpoint,\n      data,\n    }),false,'');\n\n    if(res) {\n      //merge the 2 checkpoints\n      const chpoints = await localStorageService.getObject('channel_checkpoints') || {};\n      await localStorageService.setObject('channel_checkpoints',{...chpoints, ...res.data.checkpoints})\n      return res.data.types;\n    }\n    return null;\n  }\n  catch(e){\n    log.error(e);\n   }\n}\n\n","import { Observable, Subject, BehaviorSubject } from 'rxjs';\nimport { map, filter, throttleTime, first } from 'rxjs/operators';\nimport { getProjectChildId, generateCollectionId, \n  TYPE_SETTINGS, waitMS, getChannelFromProjectId } from './utilsData';\n\nimport { ProjectItem, DIV } from './models';\nimport _ from 'lodash';\nimport DexieAdapter, { DatabaseScheme } from './adapters/dexie';\nimport { TYPE_HABBIT } from '../../pages/habits/models';\nimport { TYPE_TODO, TYPE_TODO_LIST, TYPE_TODO_TAG } from '../../pages/todo/models';\nimport { TYPE_PARTY } from '../parties/models';\nimport { TYPE_MSG } from '../messages/models';\nimport { env } from '../../env';\nimport { authService } from '../auth/authService';\nimport localStorageService from '../localStorage/localStorageService';\nimport { syncData } from './sync';\nimport { post, getPostRequest } from '../ajax/ajax';\nimport ulog from 'ulog';\nimport { TYPE_SOCIAL } from '../social/models';\nimport { RefresherEventDetail } from '@ionic/core';\n\nconst log = ulog('dataService');\n\nexport interface DataChangeEvent {\n  doc: any,\n  old?: any,\n}\n\nconst databaseScheme: DatabaseScheme =  {\n  name: 'guest_dx',\n  version: 21,\n  tables: [\n    {\n      name: TYPE_SETTINGS,\n      columns: 'id, dirty',\n      sync: true\n    },\n    {\n      name: TYPE_PARTY,\n      columns: 'id, dirty, party, type, secondaryType',\n      sync: true\n    },\n    {\n      name: TYPE_TODO,\n      columns: 'id, *tags, list ,dirty',\n      sync: true\n    },\n    {\n      name: TYPE_TODO_LIST,\n      columns: 'id, dirty, folder, secondaryType, fullname',\n      sync: true\n    },\n    {\n      name: TYPE_TODO_TAG,\n      columns: 'id, name, dirty',\n      sync: true\n    },\n    {\n      name: TYPE_HABBIT,\n      columns: 'id, dirty',\n      sync: true\n    },\n    {\n      name: TYPE_MSG,\n      columns: 'id, messageType, dirty',\n      sync: true\n    },\n    {\n      name: TYPE_SOCIAL,\n      columns: 'id, name, dirty, secondaryType',\n      sync: true\n    },\n  ]\n}\n\n\n\nclass DataService {\n  private db;\n  private authId:string = '';\n  private _ready = false;\n  public _ready$ = new BehaviorSubject(this._ready);\n  public addSyncCall$ = new Subject(); // do we need to sync with server\n  constructor() {\n    //subscriptions\n    this.addSyncCall$.pipe(\n      throttleTime(5000),\n    ).subscribe(() => {\n        log.info('Syncing.......')\n        this._syncRemote();\n      })\n  }\n\n  async getDoc(id: string|undefined,  collection: string): Promise<any> {\n    if(id === undefined){\n      throw new Error('Doc Id cannot be undefined, check logic.');\n    }\n    return await this.db.getDoc(id, collection);\n  }\n\n  async getBulk(ids: string[], collection: string): Promise<any> {\n   return await this.db.getBulk(ids, collection);\n  }\n\n  //operators: equals, startsWith, above, below, notEqual\n  async queryByProperty(field:string, operator: 'equals'|'startsWith'|'notEqual', \n      value: any, collection: string): Promise<any> {\n    return await this.db.queryByProperty(field, operator, value, collection);\n  }\n\n  async getAllByProject(projectid, collection): Promise<any> {\n    return await this.db.getProjectItems(getProjectChildId(projectid) + DIV, collection);\n  }\n\n  async getAllByChannel(channel, collection): Promise<any> {\n    return await this.db.getProjectItems(channel + DIV, collection);\n  }\n\n  //save without making it diryt\n  async saveFromServer(doc:any, type:string) {\n    await this.db.save(doc, type, false);\n  }\n\n  async save(doc:any, collection: string, props:{projectid?: string, \n    oldDoc?: any,remoteSync?:boolean} = {}): Promise<any> {  \n      log.info('SAVING DOC', doc, props, collection);\n      if(!props) props = {remoteSync: true};\n      if(props.remoteSync === undefined) props.remoteSync = true;\n    \n      try {\n        let oldDoc = {};\n        if (doc.id && props.oldDoc == null) {\n          oldDoc = await this.getDoc(doc.id, collection);\n        }\n        if (_.isEqual(oldDoc, doc)) {\n          return false; \n        }\n    \n        if(!doc.id) {\n          if(!props.projectid) throw new Error('Saving new doc requires valid props.project')\n            // @ts-ignore:  we made this check at the begining\n          doc.id = generateCollectionId(props.projectid, collection);\n          doc.created = Date.now();\n        }\n        doc.dirty = true;\n        if(!doc.rev)doc.rev = 1;\n        doc.rev ++;\n        const res = await this.db.save(doc, collection);\n        if (props.remoteSync)\n          this.addSyncCall$.next();\n        if (res.ok)\n          return res;\n        else\n          return false;\n        }\n      catch (e) {\n        log.error('DEXIE error: ', e);\n        return false;\n      }\n  }\n\n  \n\n  \n\n\n  async saveNewProject(project:ProjectItem, collection: string): Promise<any> {\n    const res = await post(getPostRequest(env.AUTH_API_URL +'/channels/addNewChannel',\n                      {token: authService.getToken(), \n                       doc: project,\n                       name: project.name}, {} ),  false) ;\n    log.info('Making new project, ajax result: ', res);\n    if(!res.success)\n      return res;\n\n    const channel = res.data.channel;\n    let gotNewRightsToken = false;\n    while(!gotNewRightsToken){\n      const user = authService.getUser();\n      if(user[env.ACCESS_META_KEY][channel]){\n        gotNewRightsToken = true;\n      }\n      else {\n        await waitMS(2000);\n      }\n    }\n    return await this.db.save(res.data.doc, collection, false);\n  }\n\n  async saveSystemDoc(doc: any, project:ProjectItem, collection: string): Promise<any> {\n    if(doc.id){\n      log.warn('Editing SystemDoc, ', doc);\n      const res = await post(getPostRequest(env.AUTH_API_URL +'/channels/editSystemDoc',\n                            { token: authService.getToken(), doc}, {} ), false) ;\n      if(!res.success)\n        return res;\n  \n      return await this.db.save(res.data.doc, collection, false);\n    }\n    else {\n      log.warn('Saving new SystemDoc, ', doc);\n      const doc2 = {}\n      if(!doc.type) \n        throw new Error('Saving system doc requires doc to have type property');\n      if(doc.secondaryType)\n        doc2['secondaryType'] = doc.secondaryType;\n  \n      const res = await post(getPostRequest(env.AUTH_API_URL +'/channels/addNewSystemDoc',\n                        {...{ token: authService.getToken(), \n                          doctype: doc.type,\n                          channelname: getChannelFromProjectId(project.id),\n                          doc: doc }, ...doc2}, {} ), false) ;\n      if(!res.success)\n        return res;\n  \n      return await this.db.save(res.data.doc, collection, false);\n    }\n    \n\n  }\n\n\n\n\n  public async remove(id: string, collection: string, remoteSync:boolean = true) {\n    try {\n      const doc = await this.getDoc(id, collection);\n      if(!doc) return false;\n      log.warn('Deleting doc: ',id);\n      log.warn(doc);\n      const res =  this.db.save({...doc, ...{deleted: true}}, collection);\n      log.info(res);\n      if (remoteSync)\n        this.addSyncCall$.next();\n      return res;\n    }\n    catch(e) {\n      log.error(e);\n      return null;\n    }\n  }\n\n  public async removeProject() {\n\n    /*\n    try {\n      //load all project children and remove them\n      //TODO, on server side, if notice project deleted, make sure all server children are also deleted\n      const res = await this._pouch.allDocs({\n        include_docs: true,\n        startkey: getProjectChildId(project._id),\n        endkey: getProjectChildId(project._id) + LASTCHAR\n      });\n      const docs = res.rows.map(row => Object.assign(\n        row.doc, { _deleted: true, updated: Date.now() }));\n\n      docs.push(Object.assign(project, { _deleted: true, updated: Date.now() }));\n      const res2 = await this._pouch.bulkDocs(docs);\n\n      if (syncRemote)\n        this.addSyncCall$.next();\n\n      return res2;\n    }\n    catch (e) {\n      console.log('Remove Project Error: ', e);\n    }\n    */ return false;\n  }\n\n\n\n  // streams\n\n  subscribeChanges(): Observable<any> {\n    return this.db.changes$.asObservable().pipe(\n      map((change:DataChangeEvent) => change.doc )\n    );\n  }\n  \n\n  subscribeDocChanges(id: string): Observable<any> {\n    return this.db.changes$.asObservable().pipe(\n      filter((change: DataChangeEvent) => change.doc.id === id),\n      map((change: DataChangeEvent) => change.doc)\n    );\n  }\n\n\n  subscribeByPropertyChange(\n    property: string,\n    value: any): Observable<any> {\n    return this.db.changes$.asObservable().pipe(\n      filter((change: DataChangeEvent) => { \n        return (change.doc[property] === value);\n      }),\n      map((change: DataChangeEvent) => change.doc)\n    ); \n  }\n\n  subscribeProjectTypeChanges(projectid: string|undefined, type: string): Observable<any> {\n    if(projectid === undefined) \n      throw new Error('Project id, can not be undefined, can not subscribe to id') ;\n    const projectChildId = getProjectChildId(projectid);\n    return this.db.changes$.asObservable().pipe(\n      filter((change: DataChangeEvent) => { \n        return change.doc.id.startsWith(projectChildId + DIV + type + DIV);\n      }),\n      map((change: DataChangeEvent) => change.doc)\n    ); \n  }\n\n  //project id and channel only difference is the suffic at end of proejctid\n  subscribeChannelTypeChanges(channel: string|undefined, type: string): Observable<any> {\n    if(channel === undefined) \n      throw new Error('Channel can not be undefined, can not subscribe to id') ;\n    return this.db.changes$.asObservable().pipe(\n      filter((change: DataChangeEvent) => { \n        return change.doc.id.startsWith(channel + DIV + type + DIV);\n      }),\n      map((change: DataChangeEvent) => change.doc)\n    ); \n  }\n\n\n  public get ready() {\n    return this._ready;\n  }\n\n  public getReadySub() {\n    return this._ready$;\n  }\n\n  public set ready(value: boolean) {\n    this._ready = value;\n    if(value)\n      this._ready$.next(value);\n  }\n\n  public async refresh(event: CustomEvent<RefresherEventDetail>) {\n    await this._syncRemote();\n    event.detail.complete();\n  }\n\n  public async init(authid: string , syncRemote = true) {\n    log.info('Init DB')\n    const scheme = databaseScheme;\n    scheme.name = authid;\n    this.db = new DexieAdapter(scheme);\n    const dbSub = this.db.ready$.subscribe(ready => {\n      log.info('Dexie Sub: ', ready);\n      if(!ready) return;\n\n      this.ready = true;\n      if (syncRemote)\n        this.addSyncCall$.next();\n\n      dbSub.unsubscribe();\n      \n    });\n  }\n\n  private async _syncRemote() {\n    console.log('Sync Remote:::')\n    let ck = Number(await localStorageService.getItem('SYNC_CHECKPOINT'));\n    if(!ck) ck = 0; \n    \n    let docs: any[] = [];\n    for(let i = 0; i < databaseScheme.tables.length; i++) {\n      if(!databaseScheme.tables[i].sync){\n        continue;\n      }\n      const res = await this.db.queryByProperty('dirty', 'equals', 1, databaseScheme.tables[i].name);\n      docs.push(...res);\n    }\n    const res = await syncData({  data: docs, \n                                  syncurl: env.SYNC_SERVER,\n                                  token: authService.getToken(),\n                                  checkpoint: 0,\n                                  requestMaxSize: 1000});\n    //save checkpoint\n    if(res) {\n      const keys = Object.keys(res);\n      for(let i = 0; i < keys.length; i++){\n        await this.db.saveFromSync(\n          res[keys[i]].map(doc => Object.assign(doc, {dirty: 0})), \n          keys[i]);\n      }\n    }\n    console.log('Finished sync');\n  }\n\n\n\n}\n\nexport const dataService = new DataService();\n","\n\nexport const TYPE_MSG = 'msg';\n\nexport interface Msg {\n  id:string,\n  to:string, \n  from:string, \n  type:string, \n  messageType: string,\n  message:string, \n  data: any\n  replied?: {accepted: boolean, date:number},\n  deleted?: boolean\n}","import { Doc } from \"../data/models\";\n\nexport const TYPE_SOCIAL = 'social';\n\n\n\nexport class Friend extends Doc {\n  username!: string;\n  id!: string;\n  secondaryType?: string;\n\n\n  constructor(values: Object = {}) {\n    super()\n    Object.assign(this, values);\n    if(!values['username']) throw new Error('Friend Doc username required')\n    if(!values['id']) throw new Error('Friend Doc id required')\n  }\n}\n\n\n","import { Todo } from \"../../pages/todo/models\";\nimport moment from 'moment';\nimport { env } from \"../../env\";\n\n\nexport const calculateLevelExperience = (level:number): number => {\n  let exp = 0;\n    for(let x = 1; x < level; x++){\n      exp += Math.floor((x+100) * Math.pow(2,(x/7)))\n    }\n  return Math.floor(exp/4);\n}\n\n\nexport const calculateDoneTodoGold = (todo:Todo): number => {\n  let days = 0;\n  //how many days past\n  if(todo.date)\n    days = moment(todo.date).diff(moment(),'hour');\n  const rew = env.TODO_DONE_GOLD_REWARDS + (env.HABIT_REWARDS_GOLD_PERCENTAGE_INCREASE * days);\n  return Math.floor(rew);\n}\n\nexport const calculateDoneTodoExperience = (todo:Todo): number => {\n  let days = 0;\n  //how many days past\n  if(todo.date)\n    days = moment(todo.date).diff(moment(),'hour');\n  const rew =env.TODO_DONE_EXPERIENCE_REWARDS + \n    (env.HABIT_REWARDS_EXPERIENCE_PERCENTAGE_INCREASE * days);\n  return Math.floor(rew);\n\n\n}\n\n\n","import { BehaviorSubject } from 'rxjs';\nimport { toast } from 'react-toastify';\nimport { Todo } from '../../pages/todo/models';\nimport { Habit } from '../../pages/habits/models';\nimport { dataService } from '../data/dataService';\nimport { calculateLevelExperience, calculateDoneTodoGold, calculateDoneTodoExperience } from './utilsGamify';\nimport { throttleTime } from '../../../node_modules/rxjs/operators';\nimport { isEqual } from 'lodash';\nimport { getInitGamifyRewards, GamifyRewards } from '../../pages/habits/utilsHabits';\nimport { generateCollectionId, genrateMetaData, TYPE_SETTINGS, getDefaultProject } from '../data/utilsData';\nimport { env } from '../../env';\nimport { authService } from '../auth/authService';\nimport ulog from 'ulog';\n\nconst log = ulog('gamify');\n\n\nexport interface GamifyState {\n  health:number,\n  maxHealth: number,\n  experience: number,\n  maxExperience: number,\n  level: number,\n  gold: number,\n\n  items: any[],\n}\n\nexport const getInitGamifyState = () => {\n  return {\n    health: 50,\n    maxHealth: 50,\n    experience: 0,\n    maxExperience: 20,\n    level: 1,\n    gold: 0,\n\n    items:[]\n  }\n}\n\nexport class GamifyService {\n\n  private _userId = '';\n  private _subscriptions:any[] = [];\n  private _state: GamifyState = getInitGamifyState();\n  \n  public state$ = new BehaviorSubject<GamifyState>(this._state);\n  \n\n  public async init(userid: string) {\n    this.unsubscribe();\n    this._userId = userid;\n    const dataSub = dataService.getReadySub().subscribe(async (ready) => {\n      if(!ready) return;\n      const doc = await this.loadInitDocs(userid);\n      const sub = this.state$.pipe(throttleTime(10000)).subscribe(()=>{\n        this._save();\n      })\n  \n      const sub2 = dataService.subscribeDocChanges(this.getGamifyDocId())\n        .subscribe(doc => {\n          const equal = isEqual(this._state, doc.state);\n          if(!equal)\n            this.state = doc.state;\n        });\n  \n      this._subscriptions.push(sub);\n      this._subscriptions.push(sub2);\n      //load the init stae\n      if(doc)\n        this.state = doc.state;\n\n      dataSub.unsubscribe();\n    })\n  }\n\n\n\n  private unsubscribe() {\n    this._subscriptions.forEach(s=>{\n      if(s)s.unsubscribe();\n    })\n  }\n\n  public calculateFinishedTodoRewards = (todo: Todo): Todo => {\n    if(!todo.doneRewards || !todo.doneRewards.gold){\n      todo.newRewards = getInitGamifyRewards({\n        gold: calculateDoneTodoGold(todo),\n        experience: calculateDoneTodoExperience(todo),\n        items: []\n      });\n    }\n\n    if(todo.done){\n      this.addGold(todo.newRewards.gold);\n      this.messageReceivedGold(todo.newRewards.gold);\n      this.addExperience(todo.newRewards.experience);\n      this.messageReceivedExperience(todo.newRewards.experience)\n    }\n    else {\n      this.addGold(todo.newRewards.gold * -1);\n      this.messageLostGold(todo.newRewards.gold);\n      this.addExperience(todo.newRewards.experience * -1);\n      this.messageLostExperience(todo.newRewards.experience);\n    }\n\n    return {...{}, ...todo};\n  }\n\n  public calculateNewTodo = (todo: Todo): Todo => {\n    todo.newRewards = getInitGamifyRewards({\n      gold: env.TODO_NEW_GOLD_REWARDS,\n      experience: env.TODO_NEW_EXPERIENCE_REWARDS,\n      items: [],\n    });\n\n    this.addGold(todo.newRewards.gold);\n    this.messageReceivedGold(todo.newRewards.gold)\n    this.addExperience(todo.newRewards.experience);\n    this.messageReceivedExperience(todo.newRewards.experience)\n\n    return {...{} ,...todo};\n  }\n\n  public calculateNewHabitRewards = (habit:Habit): Habit => {\n    habit.newRewards = getInitGamifyRewards({\n      gold: env.HABIT_REWARDS_NEW_GOLD,\n      experience: env.HABIT_REWARDS_NEW_EXPERIENCE,\n      items: [],\n    });\n\n    this.addGold(habit.newRewards.gold);\n    this.messageReceivedGold(habit.newRewards.gold)\n    this.addExperience(habit.newRewards.experience);\n    this.messageReceivedExperience(habit.newRewards.experience)\n\n    return {...{}, ...habit};\n  }\n\n  private addGold(value:number, save = true) {\n    this._state = {...this._state, ...{gold: this._state.gold + value}};\n    if(save)this.state = this._state;\n  }\n\n  private addExperience(value: number, save = true) {\n    let experience = this._state.experience + value;\n    \n    if(experience > this._state.maxExperience){\n      experience = (this._state.maxExperience - experience) * -1;\n      this._state = {...this._state, \n        ...{maxExperience: calculateLevelExperience(this._state.level+1),\n            level: this._state.level + 1}}\n    }\n    this._state = {...this._state, ...{experience}}\n    if(save) this.state = this._state;\n  }\n\n  public addRewards = (rewards:GamifyRewards) => {\n    if(rewards.gold > 0) {\n      this.messageReceivedGold(rewards.gold);\n      this.addGold(rewards.gold, false);\n    }\n    if(rewards.experience > 0){\n      this.messageReceivedExperience(rewards.experience);\n      this.addExperience(rewards.experience, false)\n    }\n\n    if(rewards.gold > 0 && rewards.experience > 0) {\n      this.state = this._state;\n    }\n  }\n\n  private messageReceivedGold(gold: number, preMessage?:string, postMessage?:string) {\n    if(!preMessage) preMessage = '';\n    if(!postMessage) postMessage = '';\n    toast.success(preMessage+' You have received ' + gold + ' gold '+postMessage,{autoClose: env.MESSAGE_DURATION});\n  }\n\n  private messageLostGold(gold:number, preMessage?:string, postMessage?:string) {\n    if(!preMessage) preMessage = '';\n    if(!postMessage) postMessage = '';\n    toast.error(preMessage+' You have lost ' + gold + ' gold'+postMessage, {autoClose: env.MESSAGE_DURATION});\n  }\n\n  private messageReceivedExperience(exp: number, preMessage?:string, postMessage?:string) {\n    if(!preMessage) preMessage = '';\n    if(!postMessage) postMessage = '';\n    toast.success(preMessage+' You have received ' + exp + ' experience'+postMessage,{autoClose: env.MESSAGE_DURATION});\n  }\n\n  private messageLostExperience(exp:number, preMessage?:string, postMessage?:string) {\n    if(!preMessage) preMessage = '';\n    if(!postMessage) postMessage = '';\n    toast.error(preMessage+' You have lost ' + exp + ' experience'+postMessage, {autoClose: env.MESSAGE_DURATION});\n  }\n  \n  private async _save() {\n    try{\n      const doc = await dataService.getDoc(this.getGamifyDocId(), TYPE_SETTINGS);\n\n      if(!doc){\n        return;\n      }\n\n      const equal = isEqual(this._state, doc.state);\n      //make sure we are not saving the init state\n      const initEqual = isEqual(this.state, getInitGamifyState());\n      if(!equal && !initEqual && doc.userid ===  this._userId) {\n        dataService.save({...doc, ...{state: this._state}}, TYPE_SETTINGS);\n      }\n    }\n    catch(e) {\n      log.error(e);\n    }\n    \n  }\n\n  private getGamifyDocId(): string {\n    const defaultProject = getDefaultProject(authService.userid);\n    const id =  generateCollectionId(defaultProject.id, 'gamify', '');\n    return id.substring(0, id.length-1);\n  }\n\n  private async loadInitDocs(id: string): Promise<any> {\n    try {\n      const s = await dataService.getDoc(this.getGamifyDocId(), TYPE_SETTINGS);\n      if(s) return s;\n      const ts = Date.now();   \n      if(id === this._userId){  //half second pased, see if state changed\n        const res = await dataService.save({\n          id: this.getGamifyDocId(),\n          state: getInitGamifyState(),\n          type: TYPE_SETTINGS,\n          [env.ACCESS_META_KEY]: genrateMetaData(id),\n          userid: id,\n          created: ts,\n          updated: ts\n        }, TYPE_SETTINGS)\n      return res;\n      }\n    }\n    catch(e) {\n      log.error(e.red, id);\n    }    \n  }\n\n  public get state(): GamifyState {\n    return this._state;\n  }\n  public set state(value: GamifyState) {\n    this._state = value;\n    this.state$.next(value);\n  }\n\n}\nexport const gamifyService = new GamifyService();\n\n\n","\nimport { Todo, TYPE_TODO, TodoList, TYPE_TODO_LIST, TodoTag, getDefaultTodoList, getDefaultTodoTag, TYPE_TODO_TAG } from './models';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { dataService } from '../../modules/data/dataService';\nimport { waitMS, getProjectChildId } from '../../modules/data/utilsData';\nimport _ from 'lodash';\nimport { gamifyService } from '../../modules/gamify/gamifyService';\nimport ulog from 'ulog';\nimport { toastService } from '../../modules/toast/toastService';\n\n\nconst log = ulog('todo');\n\n\nexport interface TodoState {\n  selectedTodo: Todo|null,\n  list: TodoList|undefined,\n  tag: TodoTag|undefined,\n  docs: Todo[],\n  tagDocs: TodoTag[],\n  doneTodos: boolean,\n  orderFilter: string,\n  orderAsync: number,\n  showNewTagFilter: boolean,\n}\n\nexport const getInitTodoState = (): TodoState => {\n  return {\n    selectedTodo:null,\n    list: undefined,\n    tag: undefined,\n    docs: [],\n    tagDocs: [],\n    doneTodos: false,\n    orderFilter: 'created',\n    orderAsync: 1,\n    showNewTagFilter: false,\n  }\n}\n\nexport class TodoService {\n  \n  // @ts-ignore: it will be initialized in init\n  private _projectid: string;\n  private _state: TodoState = getInitTodoState();\n  public state$ = new BehaviorSubject(this._state);\n  private _subscription: Array<Subscription> = [];\n\n  public init(projectid: string, list:string|undefined, tag:string|undefined) {\n    log.warn(projectid, list, tag);\n    //first unsubscribe\n    this.unsubscribe();\n    const dataSub = dataService.getReadySub().subscribe( async (ready) => {\n      if(!ready) return;\n      \n      this._init(projectid, list, tag);\n\n      await waitMS(1000);\n      dataSub.unsubscribe();\n    });\n  }\n\n  async _init(projectid: string, listName: string|undefined, tagName: string|undefined) {\n\n    if(this._projectid  === projectid && \n        this._state.list?.fullname === listName && \n        this._state.tag?.name === tagName) return;\n\n    let list, tag\n    if(!listName && !tagName){\n      list = getDefaultTodoList('default', projectid)     \n    }\n    if(listName)\n      list = getDefaultTodoList(listName, projectid)    \n    if(tagName)\n      tag = getDefaultTodoTag(tagName, projectid);\n\n    this._state = {...this.state, ...{\n      tag, \n      list,\n      tagDocs: this.getTags()}};\n    \n      log.warn(this._state);\n    \n    this._projectid = projectid;\n    \n    log.info(this.state);\n\n    this.reloadTodos();\n\n    const sub = dataService.subscribeProjectTypeChanges(projectid,TYPE_TODO)\n      .subscribe((doc: Todo) => {\n        log.log(\"TodoService subscription: \", doc); \n        this.reloadTodos();\n      });\n    this._subscription.push(sub);\n\n  }\n\n  async reloadTodos() {\n    log.info('RELOADING TODOS::: ', this.state)\n      let docs;\n    if(this.state.list){\n        log.info('Todo Query by List')\n        docs = await dataService.queryByProperty(\n          'list', 'equals', this.state.list.fullname, TYPE_TODO);\n    }\n     else if(this.state.tag){\n        log.info('Todo Query by Tags')\n        docs = await dataService.queryByProperty(\n          'tags', 'equals', this.state.tag.name, TYPE_TODO);\n    }\n\n    this.filterAndSaveTodos(docs);\n   \n  }\n\n  public async getTagsByStartingName(value){\n    return await dataService.queryByProperty(\n      'name', 'startsWith', value, TYPE_TODO_TAG); \n  }\n\n  private filterAndSaveTodos(docs: Todo[]):Todo[] {\n    const filtered = docs.filter(doc => this.filterDoneParentFunction(doc))\n                        .sort((a,b) => this.orderFunction(a,b));\n    this.state = {...this.state, ...{docs: filtered}};\n    return filtered;\n  }\n\n  private orderFunction(a:Todo, b:Todo) {\n    return (a[this._state.orderFilter] > b[this._state.orderFilter])?\n     (1 * this._state.orderAsync) : (-1 * this._state.orderAsync)\n  }\n\n\n  private filterDoneParentFunction(doc:Todo) {\n      if (doc.done !== this._state.doneTodos) return false;\n      return true;\n  }\n\n\n \n  public get state(): TodoState {\n    return this._state;\n  }\n  public set state(value: TodoState) {\n    this._state = value;\n    this.state$.next(this._state);\n  }\n\n  public async addSubTodoToParent (todoId: string, parentId: string) {\n    try {\n      const parentTodo: Todo = await dataService.getDoc(parentId, TYPE_TODO);\n      if (parentTodo) {\n        if(!parentTodo.subTodos) parentTodo.subTodos = [];\n        parentTodo.subTodos = _.concat(parentTodo.subTodos, todoId);\n        this.save(parentTodo);\n      }\n    }\n    catch(e) {\n      log.error(e);\n    }\n  }\n\n  public async removeSubTodoFromParent (todoId: string, parentId) {\n    try {\n      const parentTodo: Todo = await dataService.getDoc(parentId, TYPE_TODO);\n      if (parentTodo) {\n        if(!parentTodo.subTodos) parentTodo.subTodos = [];\n        parentTodo.subTodos = _.filter(parentTodo.subTodos, t=>t!== todoId);\n        this.save(parentTodo);\n      }\n    }\n    catch(e) {\n      log.error(e);\n    }\n  }\n\n\n  public async save(doc:Todo, parentId: string|null = null) {\n    log.info(\"Save: \", doc, this._projectid, TYPE_TODO);\n    //see if its new\n    if(doc._new) {\n      delete(doc._new);\n      \n      if(this.state.list)\n        doc.list = this.state.list.fullname;\n      else\n        doc.list = getProjectChildId(this._projectid)+'default'\n      if(!doc.tags){\n        doc.tags = [];\n      }\n      await this.saveNewTags(doc.tags);\n      doc = gamifyService.calculateNewTodo(doc);\n    }\n    const res = await dataService.save({...{done: false}, ...doc}, TYPE_TODO, {projectid: this._projectid});\n    if(parentId && doc.id) {\n      this.addSubTodoToParent(doc.id, parentId)\n    }\n    return res;\n\n  }\n\n  public async saveNewTags(tags:string[]) {\n    console.log('Tags::: ', tags);\n    let tagDoc;\n    for(let i = 0; i < tags.length; i++) {\n      console.log(tags[i]);\n      tagDoc = await dataService.queryByProperty('name', 'equals', tags[i], TYPE_TODO_TAG);\n      console.log(tagDoc);\n      if(tagDoc.length === 0) {\n        //save new tag\n        await dataService.save(new TodoTag({\n          name: tags[i], \n        }), TYPE_TODO_TAG, {projectid: this._projectid, remoteSync:true });\n      }\n    }\n  }\n\n  public async saveList(doc:TodoList) {\n    log.info('Save New TodoList: ', doc);\n    if(doc._new) {\n      //make sure its not a duplicate\n      const res = await dataService.getDoc(doc.id, TYPE_TODO_LIST);\n      if(res){\n        //error, its a duplicate\n        toastService.printSimpleError('List Already Exists');\n        return;\n      }\n      delete doc._new;;\n      const saveRes = await dataService.save(doc, TYPE_TODO_LIST);\n      log.info(saveRes);\n      return saveRes;\n    }\n  }\n\n  public async deleteList(list:TodoList) {\n    //get all docs that are in this list\n    log.warn(list);\n    const docs = await dataService.queryByProperty('list', 'equals', list.fullname,TYPE_TODO);\n    log.warn(docs);\n    //delete all items\n    for(let i = 0; i < docs.length; i ++){\n      dataService.remove(docs[i].id, TYPE_TODO);\n    }\n    if(list.id)\n      dataService.remove(list.id, TYPE_TODO_LIST);\n  }\n\n  public async remove(id: string) {\n    //see if this doc has parent\n    try {\n      const todo: Todo = await dataService.getDoc(id, TYPE_TODO);\n      if (todo) {\n        if(todo.parent) {\n          this.removeSubTodoFromParent(id, todo.parent);\n        }\n      }\n    }\n    catch(e) {\n      log.error(e);\n    }\n    dataService.remove(id, TYPE_TODO);\n  }\n\n  public select(doc:Todo | null) {\n    this.state = {...this._state, ...{ selectedTodo: doc} };\n  }\n\n  public changeDoneFilter(done: boolean) {\n    if(done === this._state.doneTodos) return;\n    this._state = {...this._state, ...{ doneTodos: done} };\n    this.reloadTodos();\n  }\n\n  public showNewTagFilter(show) {\n    this.state = {...this.state, ...{showNewTagFilter: show}};\n  }\n\n  public changeOrderFilter(filter: string) {\n    if(this._state.orderFilter === filter){\n      this._state = {...this._state, ...{ orderFilter: filter, \n        orderAsync: (this._state.orderAsync === 1)? -1:1} };\n    }\n    else {\n      this._state = {...this._state, ...{ orderFilter: filter} };\n    }\n    this.reloadTodos();\n  }\n\n  public getTags():TodoTag[] {\n    const tags =  [\n      new TodoTag({\n        id: undefined,\n        icon: 'sun.svg',\n        name: 'today',\n        fullname: 'today',\n      }),\n      new TodoTag({\n        id: undefined,\n        icon: 'star.svg',\n        name: 'important',\n        fullname: 'important',\n      })\n      //getDefaultTodoTag('today', projectid, 'sun.svg'), \n      //getDefaultTodoTag('important', projectid, 'star.svg')];\n    ]\n    return tags;\n  }\n\n\n  public selectList(list:TodoList) {\n    if(list === this._state.list) return;\n    this._state = {...this._state, ...{ list } };\n    this.reloadTodos();\n  }\n\n  public unsubscribe() {\n    if(!this) return;\n    this._subscription.forEach(sub => {\n      if(sub)\n        sub.unsubscribe();\n    });\n  }\n\n}\n\n\n\nexport  const todoService = new TodoService(); ","import React, { useRef, useReducer, useEffect } from 'react';\nimport { Todo, TYPE_TODO, TodoList, getDefaultTodoList, TodoTag } from './models';\nimport {IonInput, IonButton, IonIcon} from '@ionic/react';\nimport { generateCollectionId } from '../../modules/data/utilsData';\nimport ulog from 'ulog'\nimport { waitMS } from '../../components/animatedIcon';\nimport { todoService } from './todo.service';\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, filter } from 'rxjs/operators';\nimport { COLOR_SECONDARY } from '../../colors';\nimport './todo.component.css';\n\nconst log = ulog('todo');\n\n\n\nconst TodoNewComp = ({list, tag, focus, closeFunc, saveFunc, projectId}:\n  {list:TodoList|undefined, focus: boolean, \n    tag:string|undefined, closeFunc:Function,\n    projectId: string, saveFunc: Function}) => {\n\n  const reducer = (state, {type, payload}) => {\n      switch(type) {\n        case 'setTitle': \n          //see if we have a tag\n          if(payload[payload.length -1] === '#'){\n            return {...state, ...{title:payload, showTags: true}};\n          }\n          if(payload[payload.length -1] === ' ' && state.showTags === true){\n            return {...state, ...{title:payload, showTags: false}};\n          }\n          return {...state, ...{title:payload}};\n        case 'setFocus':\n          return {...state, ...{focus:payload}};\n        case 'setCloseFocus':\n          console.log('setCloseFocus, ', payload);\n          return {...state, ...{closeFocus:payload}};\n        case 'setState':\n          return payload;\n        case 'setTags':\n          return {...state, ...{tags: payload}};\n        default:\n          log.console.error('Incorrect action, ', type, payload);\n          return state;\n          \n      }\n  }\n    \n  \n  \n  \n    const [state, _dispatch] = useReducer(reducer, {title:'', \n                                                  focus, \n                                                  tags: [],\n                                                  showTags:false,\n                                                  closeFocus: false})\n  const inputEl = useRef(null);\n  const searchTags$ = new Subject<string>();\n\n  useEffect(() => {\n    dispatch('setFocus', focus);\n    if(focus){\n      setDelayedFocusOnInput();\n    }\n  }, [focus])\n\n  const setDelayedFocusOnInput = async () => {\n    await waitMS(200);\n    if(inputEl.current){\n      console.log('Setting focus to input')\n      // @ts-ignore: current is pointing to input\n      inputEl.current.setFocus();\n    }\n  }\n\n\n  const dispatch = (type: 'setTitle'|\n                          'setFocus'|\n                          'setTags'|\n                          'setState'|\n                          'setCloseFocus', payload:any = {}) => {\n    _dispatch({type, payload});\n  }\n\n  //TODOS: testing....\n  const setNewTitle = (e) => {\n    dispatch('setTitle', e.detail.value);\n    if(state.showTags) {\n      const index = e.detail.value.lastIndexOf('#');\n      searchTags$.next(e.detail.value.substring(index));\n       \n    }\n  }\n\n\n  const searchTags = async (value) => {\n    console.log('tags searching, ', value);\n    return await todoService.getTagsByStartingName(value);\n    //use todo service to load tags here\n  }\n\n  searchTags$.pipe(\n    debounceTime(300),\n    distinctUntilChanged(),\n    filter(value => value.length > 2),\n    switchMap(term => searchTags(term.substring(1)))\n  ).subscribe(res => {\n    console.log('SEARCH TAGS:::::: ', res);\n    dispatch('setTags', res);\n  });\n\n\n\n  const onKeyPress = (e) => {\n    if(e.key === 'Enter'){\n      save();\n      dispatch('setTitle', '');\n    }\n  }\n\n  const save = async () => {\n    let fullname;\n    if(!list){\n      fullname = getDefaultTodoList('tasks', projectId).fullname;\n    }\n    else {\n      fullname = list.fullname;\n    }\n\n     //do we have tags in the title\n     const regex = /\\#\\w+\\b/\n     let tag2 = state.title.match(regex);\n     let name = state.title;\n     let otherTags = {};\n     while(tag2) {\n       console.log(tag2);\n       otherTags[tag2[0].substring(1)] = '';\n       name = name.substring(0, tag2.index) + name.substring(tag2.index+tag2[0].length).trim();\n       console.log(name);\n       tag2 = name.match(regex);\n     }\n\n     if(tag){\n      otherTags[tag] = ''\n    }\n    \n    const id = generateCollectionId(projectId, TYPE_TODO)\n    const newDoc = new Todo({\n      id, \n      name: name, \n      list: fullname,\n      tags: Object.keys(otherTags),\n      _new: true});\n\n     await saveFunc(newDoc);\n  };\n\n\n\n  const onInputFocus = async(e) => {\n    await waitMS(510);\n    console.log('Focus', e);\n    dispatch('setFocus', true);\n  }\n\n  const onInputBlur = (e) => {\n    closeToolbar();\n    dispatch('setCloseFocus', true);\n    console.log('Blur ', state,  e);\n  }\n\n  const onSubAction = (type:string, payload:any = {}) => {\n    switch(type) {\n      case 'tag':\n        dispatch('setState', {...state, ...{title: state.title+' #',  closeFocus: false}})\n        break;\n      case 'tagString':\n        console.log(payload);\n        const index = state.title.lastIndexOf('#');\n        dispatch('setState', {...state, ...{\n            title: state.title.substring(0, index+1) + payload + ' ',  \n            closeFocus: false}})\n        break;\n      case 'addTag':\n        dispatch('setState', {...state, ...{\n          title: state.title.trim() + ' ' + payload + ' ',  \n          closeFocus: false}})\n        break;\n      \n    }\n    \n    dispatch('setCloseFocus', false);\n    console.log('Action: ', type, inputEl)\n    if(inputEl){\n      console.log('Setting focus to input')\n      // @ts-ignore: current is pointing to input\n      inputEl.current.setFocus();\n    }\n      \n  }\n\n  const closeToolbar = async () => {\n    //wait 1 sec, if nothing is presssed, then \n    await waitMS(500)\n    console.log('CloseToolbar Focus: ', state);\n    if(state.closeFocus)\n      closeFunc()\n    \n     \n  }\n\n\n  const printSmallTagFromName = (tag:TodoTag) => {\n    if(tag.icon) {\n      return <IonIcon  \n                key={tag.name}\n                size=\"small\" \n                color='success' \n                src={\"/assets/icons/\"+tag.icon} />\n    }\n\n    return <IonIcon  \n                key={tag.name}\n                size=\"small\" \n                color='success' \n                src={\"/assets/icons/tag.svg\"} >\n          {tag.name}  \n          </IonIcon>\n  }\n\n\n  return (\n    <>\n    {state.showTags? (\n      <div>\n        {state.tags.map((tag:TodoTag) => (\n          <IonButton \n            fill=\"clear\"\n            color={COLOR_SECONDARY}\n            onClick={() => onSubAction('tagString', tag.name)}\n            key={tag.name} >\n            {printSmallTagFromName(tag)}\n            {tag.name}\n          </IonButton>\n\n        ))}\n      </div>\n    ) : (<></>)}\n    {state.focus? (\n      <div>\n        <IonButton class=\"newTodoCloseButton\" onClick={() => closeToolbar()} fill=\"clear\" >Close</IonButton>\n        <IonButton onClick={() => onSubAction('tag')} fill=\"clear\" >Tag #</IonButton>\n        <IonButton onClick={() => onSubAction('addTag', '#today')} fill=\"clear\" >\n              <IonIcon  \n                  key={'today'}\n                  size=\"small\" \n                  color='success' \n                  src={\"/assets/icons/sun.svg\"} />\n\n        </IonButton>\n        <IonButton onClick={() => onSubAction('addTag', '#important')} fill=\"clear\" >\n              <IonIcon  \n                  key={'important'}\n                  size=\"small\" \n                  color='success' \n                  src={\"/assets/icons/star.svg\"} />\n\n        </IonButton>\n        <IonInput\n            autofocus={true}\n            ref={inputEl}\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onKeyPress={onKeyPress}\n            onIonChange={setNewTitle}\n            value={state.title}\n            onIonBlur={onInputBlur}\n            onIonFocus={onInputFocus}/>\n      </div>\n    ) : (<></>)}\n    \n    </>\n  )\n\n\n}\n\nexport default TodoNewComp;","export const COLOR_PRIMARY = 'primary';\nexport const COLOR_SECONDARY = 'secondary';\nexport const COLOR_TERTIARY = 'tertiary';\nexport const COLOR_SUCCESS = 'success';\nexport const COLOR_WARNING = 'warning';\nexport const COLOR_DANGER = 'danger';\nexport const COLOR_LIGHT = 'light';\nexport const COLOR_MEDIUM = 'medium';\nexport const COLOR_DARK = 'dark';","import React, { useState, useEffect } from 'react';\nimport { Todo, TodoTag } from './models';\nimport { DataFunctions } from './hooks/todos.hook';\nimport _ from 'lodash';\nimport ulog from 'ulog';\nimport { IonLabel, IonTextarea, IonButton, IonIcon, IonAlert } from '@ionic/react';\nimport './todo.edit.component.css';\nimport { trash, close } from '../../../node_modules/ionicons/icons';\n\n\nconst log = ulog('todo');\n\nconst getDefaultState = (todo:Todo, tagDocs:TodoTag[]) =>  {\n  return {\n  todo: todo,\n  tagDocs,\n  showDeleteWarrning: false,\n  text: mergeText(todo.name, todo.note)\n}}\n\nconst mergeText = (name: string|undefined, note: string|undefined): string => {\n  if(!name) name= '';\n  if(!note) \n    note = '';\n  else\n    note = '\\n'+note;\n  return name + note;\n}\n\n\n\nconst TodoEditInlineComponent = ({todo, tagDocs, dataFunctions}: \n        {todo:Todo,  tagDocs:TodoTag[], dataFunctions: DataFunctions}) => {\n  log.warn(\"Edit Todo Render::: \", todo, tagDocs, tagDocs);\n\n  const [state, setState] = useState(getDefaultState(todo, tagDocs));\n\n  useEffect(() => {\n    setState(getDefaultState(todo, tagDocs));\n  }, [todo, tagDocs])\n\n  const handleTitleChange = (e) => {\n    const text = e.detail.value;\n    var match = /\\r|\\n/.exec(text);\n    if(match){\n      const name = text.substring(0, match.index);\n      const note = text.substring(match.index+1);\n      const newDoc = {...state.todo, ...{name: name, note: note}}\n      const newState = {...state, ...{todo: newDoc, text: text}};\n      setState(newState);\n    }\n    else {\n      const newDoc = {...state.todo, ...{name: text, note: ''}}\n      const newState = {...state, ...{todo: newDoc, text: text}};\n      setState(newState);\n    }\n  }\n\n  const handleBlur = () => {\n    dataFunctions.save(state.todo);\n  }\n\n  const showRemoveWarrning = () => {\n    setState({...state, ...{showDeleteWarrning: true}});\n  }\n\n\n  const hideRemoveWarrning = () => {\n    setState({...state, ...{showDeleteWarrning: false}});\n  }\n\n  const remove = () => {\n    hideRemoveWarrning();\n    if(state.todo.id)\n      dataFunctions.remove(state.todo.id);\n  }\n\n  const printTag = (tag: TodoTag) => {\n    let color;\n    if(_.includes(state.todo.tags,tag.name)){\n      color = 'success';\n    }\n    else {\n      color = 'light';\n    }\n    return  <IonButton \n                fill=\"clear\"\n                size=\"default\" \n                color={color} \n                key={tag.name + 'editicon'}  \n                onClick={() => handleTagChange(tag)}>\n              <IonIcon  src={\"/assets/icons/\"+tag.icon} /></IonButton>\n  }\n\n\n  const handleTagChange = (tag: TodoTag) => {\n    log.error(tag, tagDocs);\n    if(!state.todo.tags) state.todo.tags = [];\n    const res = state.todo.tags.find(t=>t===tag.name);\n    let newtags;\n    if(res === undefined){\n      newtags = _.concat(state.todo.tags, tag.name);\n    }\n    else {\n      newtags = _.filter(state.todo.tags, t=>t!==tag.name);\n    }\n    dataFunctions.save(Object.assign(state.todo, {tags: newtags}));\n  }\n\n\n  return (\n\n    <div className=\"\">\n        \n        \n        <div key=\"todoEditInlineIconScrollParent\" className=\"todoEditInlineIconScrollParent\">\n          { tagDocs.map(tag => printTag(tag)) }\n        </div>\n        <IonTextarea \n            placeholder=\"Enter todo title and note here\"\n            name=\"note\"\n            class=\"todoEditInlineTextArea\"\n            autoGrow={true}\n            onIonBlur={handleBlur}\n            onIonChange={handleTitleChange}\n            value={state.text}></IonTextarea>\n        \n        \n        <div>\n          <div className=\"todoButtonsLeftAlign\">\n              <IonButton size=\"small\"  fill=\"clear\" color=\"secondary\" onClick={()=>{dataFunctions.select(null)}}>\n                  <IonIcon  icon={close} /><IonLabel>Close</IonLabel>\n              </IonButton>\n          </div>\n          <div className=\"todoButtonsRightAlign\">\n              <IonButton size=\"small\"  fill=\"clear\" color=\"danger\" onClick={showRemoveWarrning}>\n                  <IonIcon  icon={trash} /><IonLabel>Delete</IonLabel>\n              </IonButton>\n          </div>\n        </div>\n        <div className=\"todoInlineEditPadding\"> </div>   \n\n        <IonAlert\n            isOpen={state.showDeleteWarrning}\n            onDidDismiss={() => hideRemoveWarrning}\n            header={'Warrning!!!'}\n            message={'Are you sure you want to <strong>delete</strong> this task and its sub-tasks?'}\n            buttons={[\n              {\n                text: 'Cancel',\n                role: 'cancel',\n                cssClass: 'secondary',\n                \n              },\n              {\n                text: 'Yes Im Sure',\n                handler: () => remove()\n              }\n            ]}\n          />\n    </div>\n\n  );\n\n}\n\nexport default TodoEditInlineComponent;","import React, { useEffect, useReducer } from 'react';\nimport { IonLabel, IonRow, IonCol, \n        IonIcon, IonGrid, IonItem, IonText, IonAvatar } from '@ionic/react';\nimport { Todo, TodoTag } from './models';\nimport _ from 'lodash';\nimport './todo.component.css'\nimport { DataFunctions } from './hooks/todos.hook';\nimport TodoEditInlineComponent from './todo.edit.inline.component';\nimport { gamifyService } from '../../modules/gamify/gamifyService';\nimport ulog from 'ulog'\nimport check from '../../icons/check.json';\nimport restart from '../../icons/restart.json'\nimport AnimatedIcon from '../../components/animatedIcon';\nimport { COLOR_SUCCESS } from '../../colors';\n\nconst log = ulog('todo');\n\nexport interface TodoState {\n  todo: Todo,\n}\n\n\nconst reducer = (state, {type, payload}): TodoState => {\n  switch(type) {\n    case 'updateTodo':\n      return {...state, ...{todo:payload}};\n    \n    default:\n      return state;\n  }\n}\n\n\n//Component Start\nconst TodoListItemComp = ({todo, tagDocs, selectedTodo, dataFunctions}:\n  {todo:Todo, tagDocs:TodoTag[], lastChild: boolean,  selectedTodo: Todo|null,  dataFunctions: DataFunctions}) => {\n  \n\n  const [state, _dispatch] = useReducer(reducer, \n    {todo: todo, })\n\n  useEffect(() => {\n    dispatch('updateTodo', todo);\n  }, [todo])\n  \n  const dispatch = (type:'updateTodo'|\n                          'any', \n                    payload:any = {}) => {\n    _dispatch({type, payload});\n  }\n  \n  const doneHandler = () => {\n    const newDoc = gamifyService.calculateFinishedTodoRewards(\n        {...state.todo, ...{done: !state.todo.done}});\n    dispatch('updateTodo', newDoc);\n    dataFunctions.save(newDoc);\n  }\n\n  const handleSelectTodo = () => {\n    if(selectedTodo && state.todo.id === selectedTodo.id){\n      dataFunctions.select(null);\n    }\n    else {\n      dataFunctions.select(state.todo);\n    }\n  }\n\n  \n\n  const printSmallTagFromName = (name:string) => {\n    //log.warn(tagDocs);\n    const tag = tagDocs.find(t => t.name === name);\n    if(tag && tag.icon) {\n      return <IonIcon  \n                class=\"todoListItemTagIcon\"\n                key={tag.name}\n                size=\"small\" \n                color='success' \n                src={\"/assets/icons/\"+tag.icon} />\n    }\n\n    return <IonText \n              key={name}\n              class=\"todoListItemTag\"\n              color={COLOR_SUCCESS} >\n              <IonIcon  \n                color='success' \n                src={\"/assets/icons/tag.svg\"} />\n          {name}  \n          </IonText>\n  }\n\n  const printTask = () => (\n    <>\n      <IonItem  button \n            color={((selectedTodo && selectedTodo.id === state.todo.id)? 'light' : '')}   \n            lines=\"full\">\n        \n            <IonAvatar onClick={() => {}} slot=\"start\">\n              {state.todo.done? (\n                <AnimatedIcon  iconsvg={restart} actionFunc={doneHandler} />\n              ) : (\n                <AnimatedIcon  iconsvg={check} actionFunc={doneHandler} />\n              )}\n              \n            </IonAvatar>\n              <IonLabel onClick={handleSelectTodo}>\n              <IonText color=\"primary\">\n                  <h2>{state.todo.name}</h2>\n              </IonText>\n              {state.todo.note? (\n                <IonText color=\"secondary\">\n                  <p>{state.todo.note}</p>\n                </IonText> \n              ) : (<></>)}\n               \n              </IonLabel>\n              {state.todo.tags.sort().map(\n                tag=>printSmallTagFromName(tag)\n              )}\n        </IonItem>\n        {printEdit()}\n    </>\n  )\n\n\n  const printEdit = () => {\n    if(!selectedTodo || selectedTodo.id !== state.todo.id) return;\n    return (\n      <IonGrid>\n        <IonRow>\n            <IonCol class=\"todoTitleColumn\" onClick={() => {}}  >\n              <TodoEditInlineComponent \n                          todo={state.todo}\n                          tagDocs={tagDocs}\n                          dataFunctions={dataFunctions} />\n                        \n            </IonCol>\n        </IonRow>\n      </IonGrid>\n    )\n  }\n  \n\n  return printTask();\n};\n\nexport default TodoListItemComp;\n","import { useEffect, useState, useRef } from 'react';\nimport { Subscription } from 'rxjs';\nimport { Todo, TodoList } from '../models';\nimport { TodoService, TodoState, getInitTodoState } from '../todo.service';\nimport ulog from 'ulog';\n\nconst log = ulog('todo');\n\nexport interface DataFunctions {\n  save: {(doc: Todo, parentId?: string|null):Promise<any>},\n  remove: {(id: string)},\n  select: {(doc: Todo | null)},\n  selectList: {(list: TodoList)},\n  changeDoneFilter: {(done:boolean)}\n  changeOrderFilter: {(type: string)},\n  showNewTag: {(show:boolean)}\n}\n\n\n//more simpler then auth hook, just read data\nexport function useTodosCollectionFacade(\n  projectid: string| undefined, list:string|undefined, tag:string|undefined): \n  [TodoState, DataFunctions]{\n  \n  log.warn(projectid, list, tag);\n                           \n  if(!projectid) throw new Error('Projectid can not be undefined');\n  const [state, setState] = useState(getInitTodoState());\n  const todoService = useRef(new TodoService());\n          \n  const dataFunctions = {\n    save: (doc: Todo, parentId?: string|null):Promise<any> => todoService.current.save(doc, parentId),\n    remove: (id) => todoService.current.remove(id), //TODO: allow user to choose, sync or not to sync\n    select: (doc: Todo | null) => todoService.current.select(doc),\n    selectList: (list: TodoList) => todoService.current.selectList(list),\n    changeDoneFilter: (done:boolean) => todoService.current.changeDoneFilter(done),\n    changeOrderFilter: (filter:string) => todoService.current.changeOrderFilter(filter),\n    showNewTag: (show:boolean) => todoService.current.showNewTagFilter(show),\n  }\n\n  useEffect(() => {\n    todoService.current.init(projectid, list, tag)\n    return todoService.current.unsubscribe;\n  }, [projectid, list, tag])\n\n  useEffect(() => {\n    const subscriptions: Subscription[] = [\n      todoService.current.state$.subscribe(state => {\n        setState(state);\n      })\n    ];\n    return () => { subscriptions.map(it => it.unsubscribe()) };\n  },[projectid]);\n\n\n  return [state, dataFunctions];\n}","import { useEffect, useState } from 'react';\nimport { Subscription } from 'rxjs';\nimport { dataService } from '../../data/dataService';\nimport { GUEST, authService } from '../../auth/authService';\nimport { gamifyService } from '../../gamify/gamifyService';\nimport { partyService } from '../../parties/party.service';\nimport ulog from 'ulog';\n\nconst log = ulog('app');\n\nexport enum AppStatus {\n  loading, auth, guest\n}\n\n// username, authenticated, login, logout, renewToken\nexport function useAppStatus(): [{status:AppStatus, dataReady:boolean, username:string}] {\n\n  const [appStatus, setAppStatus] = useState({status: AppStatus.loading, dataReady: false, username: GUEST});\n\n\n  log.info('APP Router Status: ', appStatus);\n\n  useEffect(() => {\n    log.info('App Stats Effect::');\n    const subscriptions: Subscription[] = [\n      dataService.getReadySub().subscribe(ready => {\n        if(ready === appStatus.dataReady) return;\n          setStatusFunction();\n      }),\n      authService.username$.subscribe(async (username) => {\n        //renew token\n        if(authService.getIsAuthenticated()){\n          authService.renewToken();\n        }\n        setStatusFunction();\n        const userid = authService.getUser().id;\n        await dataService.init( userid, username !== GUEST);\n        await gamifyService.init(userid);\n        await partyService.init();\n        dataService.addSyncCall$.next();\n      }),\n\n    ];\n    // usersService.loadAll();\n    return () => { subscriptions.map(it => it.unsubscribe()) };\n  },[]);\n\n\n  const setStatusFunction = () => {\n    const dataReady = dataService.ready;\n    const username = authService.getUsername();\n    if(dataReady === appStatus.dataReady && username === appStatus.username)\n      return;\n    log.info('STATUS:', dataReady, username, appStatus);\n    \n    if(dataReady){\n      if(username === GUEST)\n        setAppStatus({ status:AppStatus.guest, username: username, dataReady: dataReady });\n      else\n        setAppStatus({ status:AppStatus.auth, username: username, dataReady: dataReady });\n    }\n    else {\n      setAppStatus({ status:AppStatus.loading, username: username, dataReady: dataReady });\n    }\n  };\n\n  return [ appStatus ];\n}","import React, { useState, useEffect } from 'react';\nimport { IonHeader, IonIcon, IonBadge } from '@ionic/react';\nimport { Line } from 'rc-progress';\nimport { gamifyService, getInitGamifyState, GamifyState } from '../modules/gamify/gamifyService';\n\n\n\nimport './header.css';\nimport 'rc-progress/assets/index.css';\nimport { heart, star, leaf, logoUsd } from 'ionicons/icons';\n\nconst HeaderWithProgress = ({title}:{title:string}) => {\n\n  const [state, setState] = useState<GamifyState>(getInitGamifyState())\n\n  const {health, maxHealth, experience, maxExperience, level, gold} = state;\n\n  useEffect(() => {\n    const sub = gamifyService.state$.subscribe(s => {\n      setState({...state, ...s});\n    })\n    return () => {\n      sub.unsubscribe();\n    };\n  }, [])\n\n\n  return (\n    <IonHeader className=\"headerWithAvatar\">\n      <div className=\"cityParent\">\n        <img src=\"/assets/pics/hills.svg\" style={{right:'25px'}} className=\"headerHills\" alt=\"Hills\"/>\n        <img src=\"/assets/pics/hills.svg\" style={{right:'200px'}} className=\"headerHills\" alt=\"Hills\"/>\n        <img src=\"/assets/pics/ground.svg\" className=\"headerGround\" alt=\"Ground\"/>\n        <img src=\"/assets/pics/sun.svg\" style={{right:'130px', top: '10px', width:'5%'}} className=\"headerSkyDetail\" alt=\"Hills\"/>\n        <img src=\"/assets/pics/cloud2.svg\" style={{right:'240px', top: '40px'}} className=\"headerSkyDetail\" alt=\"Hills\"/>\n        <img src=\"/assets/pics/cloud1.svg\" style={{right:'60px', top: '40px'}} className=\"headerSkyDetail\" alt=\"Hills\"/>\n        <img src=\"/assets/pics/cloud2.svg\" style={{right:'140px', top: '15px'}} className=\"headerSkyDetail\" alt=\"Hills\"/>\n      </div>\n      <div className=\"statsParent\" >\n        <div className=\"statsBarParent\" >\n          <IonIcon class=\"statsBarIcon\" icon={heart} style={{color: \"#C20114\"}} />\n          <Line trailWidth={0} percent={health/maxHealth * 100} \n                className=\"statsBarLine\"\n                strokeWidth={4} strokeColor=\"#C20114\" />\n          <IonBadge class=\"statsBarBadge\" \n                    color=\"danger\" >{health}/{maxHealth}</IonBadge>\n        </div>\n        <div className=\"statsBarParent\" >\n        <IonIcon class=\"statsBarIcon\" icon={leaf} style={{color: \"#157F1F\"}} />\n          <Line trailWidth={0}  percent={experience/maxExperience * 100} \n                className=\"statsBarLine\"\n                strokeWidth={4} strokeColor=\"#157F1F\" />\n          <IonBadge class=\"statsBarBadge\" \n                    color=\"success\" >{experience}/{maxExperience}</IonBadge>\n        </div>\n        <div className=\"statsBarMoneyParent\" >\n          <IonBadge class=\"statsBarMoneyBadge\" \n                    color=\"warning\" >Gold: {gold}</IonBadge>\n          <IonBadge class=\"statsBarMoneyBadge\" \n                    color=\"success\" >Level: {level}</IonBadge>\n        </div>\n      </div>\n        \n      <h1>{title}</h1>\n    </IonHeader>\n  )\n}\n\nexport default HeaderWithProgress;","import React from 'react';\nimport {\n  IonPage,\n  IonContent,\n  IonList,\n  IonButton,\n  IonToolbar,\n  IonChip,\n  IonIcon,\n  IonLabel,\n  IonFab,\n  IonFabButton,\n  IonRefresher,\n  IonRefresherContent} from '@ionic/react';\nimport { Plugins, KeyboardInfo } from '@capacitor/core';\n\nimport TodoNewComp from './todo.new.component';\nimport TodoListItemComp from './Todo.listitem.component';\nimport { useTodosCollectionFacade } from './hooks/todos.hook';\nimport './todos.page.css';\nimport HeaderWithProgress from '../../components/HeaderWithProgress';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { capitalize } from '../../utils';\nimport { getDefaultProject } from '../../modules/data/utilsData';\nimport { authService } from '../../modules/auth/authService';\nimport ulog from 'ulog';\nimport { checkmarkCircleOutline, radioButtonOff, arrowDownOutline, arrowUpOutline, add } from 'ionicons/icons';\nimport { dataService } from '../../modules/data/dataService';\n\nconst log = ulog('todo');\nconst { Keyboard, Device } = Plugins;\n\n\nconst TodosPage  = () => {\n\n  const project = getDefaultProject(authService.userid);\n  const location = useLocation();\n  \n\n  let list, tag;\n  const params = useParams();\n  log.info(params, location);\n  if(location.pathname.startsWith('/todos/tag/')){\n   tag = params['tag']\n  }\n  else {\n    list = params['list']\n  }\n\n  const [state, dataFunc] = useTodosCollectionFacade(project.id, list, tag)\n  const { docs, selectedTodo, tagDocs } = state;\n\n  const printTitle = ():string => {\n    if(state.list){\n      return 'Todos: ' + capitalize(state.list.name);\n    }\n    return 'Todos';\n  }\n\n  const setKeyboard = async () => {\n    const devInfo = await Device.getInfo();\n    if(devInfo.operatingSystem !== 'ios' &&\n       devInfo.operatingSystem !== 'android') return;\n\n    Keyboard.addListener('keyboardWillShow', (info: KeyboardInfo) => {\n      console.log('keyboard will show with height', info.keyboardHeight);\n    });\n    \n    Keyboard.addListener('keyboardDidShow', (info: KeyboardInfo) => {\n      console.log('keyboard did show with height', info.keyboardHeight);\n    });\n    \n    Keyboard.addListener('keyboardWillHide', () => {\n      console.log('keyboard will hide');\n    });\n    \n    Keyboard.addListener('keyboardDidHide', () => {\n      console.log('keyboard did hide');\n    });\n  }\n\n  const drawActiveInactiveChip = () => {\n    const label = 'Switch View';\n\n    return <IonChip>\n            <IonIcon onClick={() => {dataFunc.changeDoneFilter(!state.doneTodos)}}\n                     icon={radioButtonOff}\n                     color={(state.doneTodos)? 'light':'success'}  />\n            <IonLabel onClick={() => {dataFunc.changeDoneFilter(!state.doneTodos)}}>\n              {label}</IonLabel>\n            <IonIcon \n                      color={(!state.doneTodos)? 'light':'success'} \n                      icon={checkmarkCircleOutline}\n                      onClick={() => {dataFunc.changeDoneFilter(!state.doneTodos)}}/>\n          </IonChip>\n\n  }\n\n  setKeyboard();\n  \n  return (\n    <IonPage>\n      <HeaderWithProgress title={printTitle()} />\n      <IonContent id=\"todoContent\">\n      <IonRefresher slot=\"fixed\" onIonRefresh={(e) => dataService.refresh(e)}>\n          <IonRefresherContent></IonRefresherContent>\n      </IonRefresher>\n        <div>\n          <IonButton  color={(!state.doneTodos)? 'light':'success'} \n                      class=\"todoHeaderIcons\" \n                      onClick={() => {dataFunc.changeDoneFilter(true)}}\n                      fill=\"clear\">\n                      <IonIcon icon={checkmarkCircleOutline} />\n          </IonButton>\n          <IonButton  color={(state.doneTodos)? 'light':'success'} \n                      class=\"todoHeaderIcons\" \n                      onClick={() => {dataFunc.changeDoneFilter(false)}}\n                      fill=\"clear\">\n                      <IonIcon icon={radioButtonOff} />\n          </IonButton>\n          <IonButton  color={(state.orderFilter!== 'created')? 'light':'success'} \n                      class=\"todoHeaderButtons\" \n                      onClick={() => {dataFunc.changeOrderFilter('created')}}\n                      fill=\"clear\">Date\n                      {(state.orderFilter === 'created')? (\n                        <IonIcon \n                          icon={((state.orderAsync === -1)? arrowDownOutline : arrowUpOutline)}/>\n                      ) : (<></>) }\n          </IonButton>\n          <IonButton  color={(state.orderFilter !== 'name')? 'light':'success'} \n                      class=\"todoHeaderButtons\" \n                      onClick={() => {dataFunc.changeOrderFilter('name')}}\n                      fill=\"clear\">Name\n                      {(state.orderFilter === 'name')? (\n                        <IonIcon \n                          icon={((state.orderAsync === -1)? arrowDownOutline : arrowUpOutline)}/>\n                      ) : (<></>) }\n          </IonButton>\n        </div>\n        <IonList>\n            {docs.map(todo => (\n              <TodoListItemComp   todo={todo} \n                                  tagDocs={tagDocs}\n                                  lastChild = {false}\n                                  selectedTodo={selectedTodo}                                 \n                                  dataFunctions={dataFunc}\n                                  key={todo.id} />\n            ))}\n        </IonList>\n        <IonFab vertical=\"top\" horizontal=\"end\" slot=\"fixed\" edge>\n          <IonFabButton onClick={() => dataFunc.showNewTag(true)} >\n            <IonIcon icon={add} />\n          </IonFabButton>\n        </IonFab>\n      </IonContent>\n      <IonToolbar>\n          <TodoNewComp \n            list = {state.list}\n            focus = {state.showNewTagFilter}\n            closeFunc = {() => dataFunc.showNewTag(false)}\n            tag = {tag}\n            projectId={project.id||''} \n            saveFunc={dataFunc.save} />\n      </IonToolbar>\n    </IonPage>\n  );\n};\n\nexport default TodosPage;\n\n","import React from 'react';\nimport { IonHeader, IonToolbar, IonPage, IonTitle, IonContent, IonLabel } from '@ionic/react';\n\n\n\nconst IntroPage: React.FC = () => {\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Loading</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonLabel>Loading.....</IonLabel>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default IntroPage;\n","import { Subscription, BehaviorSubject } from \"rxjs\";\nimport { PartyProject, TYPE_PARTY, Challenge, ChallengeState, ChallengeAction } from \"./models\";\nimport { getPostRequest, post } from '../ajax/ajax';\nimport { env } from \"../../env\";\nimport { loadingService } from \"../loading/loadingService\";\nimport { toastService, ToastType } from \"../toast/toastService\";\nimport { dataService } from \"../data/dataService\";\nimport { waitMS, getChannelFromProjectId } from '../data/utilsData';\nimport { Msg, TYPE_MSG } from \"../messages/models\";\nimport moment from \"moment\";\nimport { saveIntoDocList } from \"../../utils\";\nimport ulog from 'ulog';\nimport { authService } from \"../auth/authService\";\n\nconst log = ulog('parties');\n\nexport interface PartyState {\n  docs: PartyProject[],\n}\n\nexport const initPartyState = {\n  docs: []\n}\n\nexport class PartyService {\n  private _subscription: Array<Subscription> = [];\n  \n  private _state: PartyState = initPartyState;\n  public state$ = new BehaviorSubject(this._state);\n  \n  async init(){\n    this.unsubscribe();\n\n\n    const sub1 = dataService.subscribeChanges().subscribe(doc => {\n      if(doc.type === 'party' && doc.secondaryType === 'project'){\n        const docs = saveIntoDocList(doc, this._state.docs);\n        this.state = {...this._state, ...{docs}};\n      }\n    });\n    this._subscription.push(sub1);\n    const docs = await dataService.queryByProperty('secondaryType', 'equals', 'project', TYPE_PARTY);\n    this.state = {...this._state , ...{docs}};\n\n\n  }\n\n  /*\n    Rights, each digit represents different right\n    0.  0 - Not admin 1- Admin, can change everything\n    1.  (Project item) 0 - can't see, 1 - can see, 2 - can edit\n    2.  (Project children) 0 - can't see, 1 - can see own, 2 - can see all items\n    3.  (Project children edit) 0 -can't edit, 1 can edit/make own, 2 can edit all \n  */\n  public async addUser(id:string, party: PartyProject) {\n    try {\n      const res = await post(getPostRequest(env.AUTH_API_URL +'/channels/sendAddMemberRequest',\n                      { token: authService.getToken(), \n                        channelid: getChannelFromProjectId(party.id),\n                        id: id,\n                        rights: '0121' //see all, edit own items \n                      }), \n                      true, 'Adding member, please wait');\n\n      if(!res.success){\n        return toastService.printServerErrors(res);\n      }\n\n      toastService.showMessage('Member invitation sent', ToastType.success);\n      waitMS(3000);\n      dataService.addSyncCall$.next();\n    }\n    catch (e) {\n      log.error(e);\n    }\n    \n  }\n\n  public saveParty(partyProject: PartyProject){\n    if (!partyProject.id) {\n      this._createParty(partyProject);\n    }\n  }\n\n  //make new party ajax\n  private async _createParty(partyProject: PartyProject) {\n    log.info('Saving party Project::: ', partyProject);\n    loadingService.showLoading('Creating party, please wait, ' +\n                'internet connection required');\n    const res = await dataService.saveNewProject(partyProject, TYPE_PARTY);\n    if(!res.success){\n      return toastService.printServerErrors(res);\n    } \n    loadingService.hideLoading();\n  }\n\n  public saveChallenge(challenge:Challenge, party:PartyProject){\n      this._createChallenge(challenge, party);\n  }\n\n  private async _createChallenge(challenge:Challenge, partyProject: PartyProject) {\n    log.info('Saving System Doc::: ', partyProject);\n    loadingService.showLoading('Adding Challenge, please wait, ' +\n                'internet connection required');\n    const res = await dataService.saveSystemDoc(challenge,partyProject, TYPE_PARTY);\n    if(!res.success){\n      return toastService.printServerErrors(res);\n    }\n    loadingService.hideLoading();\n  }\n\n\n  public async acceptPartyInvitation(msg:Msg){\n    //lets send a request\n    try {\n      const res = await post(getPostRequest(env.AUTH_API_URL +'/channels/acceptChannelInvitation',\n                      { token: authService.getToken(), msgId: msg.id,}, {} ), \n                      true, 'Accept Reply sent, waiting for reply.');\n      if(!res.success){\n        return toastService.printServerErrors(res);\n      }\n\n      toastService.showMessage('Pary Membership request sent. Please wait for app update.', ToastType.success);\n      await waitMS(2000);\n      dataService.addSyncCall$.next();\n      msg.replied = {accepted: true, date: Date.now()};\n      dataService.save(msg, TYPE_MSG);\n    }\n    catch (e) {\n      log.error(e);\n    }\n  }\n\n  public async acceptFriendInvitation(msg:Msg){\n    //lets send a request\n    try {\n      const res = await post(getPostRequest(env.AUTH_API_URL +'/social/acceptFriendInvitation',\n                      { token: authService.getToken(), msgId: msg.id,}, {} ), \n                      true, 'Accept Reply sent, waiting for reply.');\n      if(!res.success){\n        return toastService.printServerErrors(res);\n      }\n\n      toastService.showMessage('Friend acceptance reply sent. Please wait for app update.', \n        ToastType.success);\n\n      await waitMS(2000);\n\n      dataService.addSyncCall$.next();\n\n      msg.replied = {accepted: true, date: Date.now()};\n      dataService.save(msg, TYPE_MSG);\n    }\n    catch (e) {\n      log.error(e);\n    }\n  }\n\n  public async rejectPartyInviation(msg:Msg) {\n    const newMsg = {...msg, ...{replied:{accepted: false, date: Date.now()}}}\n    dataService.save(newMsg, TYPE_MSG);\n  }\n\n  public async rejectFriendInviation(msg:Msg) {\n    const newMsg = {...msg, ...{replied:{accepted: false, date: Date.now()}}}\n    dataService.save(newMsg, TYPE_MSG);\n  }\n\n  public async changeChallengeState(challengeid: string|undefined, state:ChallengeState){\n    if(!challengeid) throw new Error('Challengeid cannot be undefined');\n    try {\n      const res = await post(getPostRequest(env.AUTH_API_URL +'/habits/changeChallengeState',\n                      { token: authService.getToken(), \n                        challengeid, state}, {} ), \n                      true, 'Saving challenge, please wait.');\n      if(!res.success){\n        return toastService.printServerErrors(res);\n      }\n      await dataService.saveFromServer(res.data.doc, TYPE_PARTY);\n\n      toastService.showMessage('Challenge saved.', \n        ToastType.success);\n\n      await waitMS(2000);\n      dataService.addSyncCall$.next();\n      await waitMS(2000);\n      dataService.addSyncCall$.next();\n    }\n    catch (e) {\n      log.error(e);\n    }\n  }\n\n  public async submitChallengeActions(challengeid: string|undefined, actions: ChallengeAction[]){\n    if(!challengeid) throw new Error('Challengeid cannot be undefined');\n    try {\n      const res = await post(getPostRequest(env.AUTH_API_URL +'/habits/submitChallengeActions',\n                      { token: authService.getToken(), \n                        challengeid, actions}, {} ), \n                      true, 'Saving challenge, please wait.');\n      if(!res.success){\n        return toastService.printServerErrors(res);\n      }\n      if(res.data && res.data.challenge)\n        dataService.saveFromServer(res.data.challenge, TYPE_PARTY);\n\n      if(res.data && res.data.rewards >= 0) {\n        log.info('Shwoing rewards::: ', res.data.rewards);\n        toastService.showMessage('You have recieved '+res.data.rewards, \n        ToastType.success);\n      }\n\n      await waitMS(2000);\n      dataService.addSyncCall$.next();\n      await waitMS(2000);\n      dataService.addSyncCall$.next();\n       \n    }\n    catch (e) {\n      log.error(e);\n    }\n  }\n\n  public async acceptChallenge(challenge:Challenge){\n    //lets send a request\n    try {\n      const res = await post(getPostRequest(env.AUTH_API_URL +'/habits/acceptChallenge',\n                      { token: authService.getToken(), challengeid: challenge.id}, {} ), \n                      true, 'Accept Reply sent, waiting for reply.');\n      if(!res.success){\n        return toastService.printServerErrors(res);\n      }\n      toastService.showMessage('Challenge acceptance request sent', \n        ToastType.success);\n      await dataService.saveFromServer(res.data.doc, TYPE_PARTY);\n      await waitMS(2000);\n      dataService.addSyncCall$.next();\n    }\n    catch (e) {\n      log.error(e);\n    }\n  }\n\n\n  public get state(): PartyState {\n    return this._state;\n  }\n  public set state(value: PartyState) {\n    console.log('State: ', value);\n    this._state = value;\n    this.state$.next(this._state);\n  }\n\n  public unsubscribe() {\n    if(!this) return;\n    this._subscription.forEach(sub => {\n      if(sub)\n        sub.unsubscribe();\n    });\n  }\n\n}\n\nexport const partyService = new PartyService();","import { Subscription, BehaviorSubject } from \"rxjs\";\nimport { getPostRequest, post } from '../ajax/ajax';\nimport { env } from \"../../env\";\nimport { authService } from '../auth/authService';\nimport { toastService, ToastType } from \"../toast/toastService\";\nimport { dataService } from \"../data/dataService\";\nimport { waitMS } from '../data/utilsData';\nimport { Friend } from \"./models\";\n\nexport interface SocialState {\n  friends: Friend[],\n}\n\nexport const initSocialState = {\n  friends: []\n}\n\n\n\nexport class SocialService {\n  private _subscription: Array<Subscription> = [];\n  private _userid = ''\n  private _state: SocialState = initSocialState;\n  public state$ = new BehaviorSubject(this._state);\n  \n  async init(userid){\n    if(userid === this._userid) return;\n    this._userid = userid;\n    this.unsubscribe();\n    this._init();\n  }\n\n  private async _init() {\n\n  }\n\n  public async addFriend(username?:string) {\n    try {\n      const res = await post(getPostRequest(env.AUTH_API_URL +'/social/sendAddFriendRequest',\n                      { token: authService.getToken(), \n                        username,\n                      }), \n                      true, 'Sending invitatin request, please wait');\n      if(!res.success){\n        return toastService.printServerErrors(res);\n      }\n\n      toastService.showMessage('Friend invitation sent', ToastType.success);\n\n      waitMS(3000);\n\n      dataService.addSyncCall$.next();\n    }\n    catch (e) {\n      console.log(e);\n    }\n    \n  }\n\n\n  public get state(): SocialState {\n    return this._state;\n  }\n  public set state(value: SocialState) {\n    this._state = value;\n    this.state$.next(this._state);\n  }\n\n\n\n  public unsubscribe() {\n    if(!this) return;\n    this._subscription.forEach(sub => {\n      if(sub)\n        sub.unsubscribe();\n    });\n  }\n\n}\n\nexport const socialService = new SocialService();","import React, { useReducer } from 'react';\nimport { IonCard, IonCardTitle, IonCardHeader, IonCardContent, IonList, IonItem, IonAlert, IonFooter, IonButton, IonLabel } from '@ionic/react';\nimport  ulog from 'ulog';\nimport { Friend } from '../models';\nimport { socialService } from '../social.service';\nconst log = ulog('social');\n\nexport interface FriendsState {\n  showAddModal: boolean,\n  friends: Friend[],\n}\n\n\nconst reducer = (state, action): FriendsState => {\n  switch(action.type) {\n    case 'showAddMemberModal':\n      return {...state, ...{showAddModal: true}};\n    case 'hideAddMemberModal':\n      return {...state, ...{showAddModal: false}};\n\n    default:\n      log.error('Action type is not a match');\n      return state;\n  }\n}\n\nconst FriendsListComponent = () => {\n  const [state, _dispatch] = useReducer(reducer, {\n    showAddModal: false,\n    friends: [],\n  })\n\n  const dispatch = (type: 'showAddMemberModal'|\n                          'hideAddMemberModal', \n                    data:any = {}) => {\n    _dispatch({type, data});\n  }\n\n  const addFriend = () => {\n    dispatch(\"showAddMemberModal\");\n    \n  }\n\n  const hideAddUser = () => {\n    dispatch('hideAddMemberModal');\n  }\n\n  return (\n    <IonCard>\n      <IonCardHeader>\n        <IonCardTitle>Friends</IonCardTitle>\n      </IonCardHeader>\n      <IonCardContent>\n        <IonList>\n            {state.friends.map(member => (\n              <IonItem  button \n                        key={member.id}\n                        onClick={() => {}}>\n              <IonLabel>\n                {member.username}\n              </IonLabel>\n            </IonItem>\n            ))}\n        </IonList>\n        \n      </IonCardContent>\n        <IonFooter>\n          <IonButton onClick={()=>addFriend()} fill=\"clear\">Add Friend</IonButton>\n        </IonFooter>\n      <IonAlert \n        isOpen={state.showAddModal}\n        onDidDismiss={() => hideAddUser()}\n        header=\"Friend's Username:\"\n        inputs={[\n          {\n            name: 'username',\n            type: 'text',\n            id: 'username',\n\n\n          }\n        ]}\n        buttons={[\n          {\n            text: 'Cancel',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: () => {\n              hideAddUser();\n            }\n          },\n          {\n            text: 'Invite User',\n            handler: (data) => {\n              socialService.addFriend(data.username);\n              hideAddUser();\n            }\n          }\n        ]}\n      />\n    </IonCard>\n  )\n\n}\nexport default FriendsListComponent;","import React, { useReducer, useEffect } from 'react';\nimport { IonCard, IonCardTitle, IonCardHeader, IonCardContent, IonList, IonItem, IonLabel, IonAvatar, IonIcon, IonText, IonButton } from '@ionic/react';\nimport  ulog from 'ulog';\nimport { Msg } from '../../messages/models';\nimport { dataService } from '../../data/dataService';\nimport { TYPE_MSG } from '../models';\nimport { mail, personAdd, happy, sad, peopleCircle, documentTextOutline } from 'ionicons/icons';\nimport { printDateRelative, saveIntoArray } from '../../../utils';\nimport { partyService } from '../../parties/party.service';\nimport { COLOR_SUCCESS, COLOR_WARNING } from '../../../colors';\nconst log = ulog('messages');\n\nexport interface MessagesState {\n  messages: Msg[],\n}\n\n\nconst reducer = (state, {type, payload}): MessagesState => {\n  switch(type) {\n    case 'setMessages':\n      return {...state, ...{messages: payload}};\n      case 'updateMessage':\n        return {...state, ...{messages: saveIntoArray(payload, state.messages)}};\n    default:\n      log.error('Action type is not a match');\n      return state;\n  }\n}\n\nconst MessagesListComponent = ({channel}:{channel:string}) => {\n  const [state, _dispatch] = useReducer(reducer, {\n    messages: [],\n  })\n  log.warn('MSSGS:  ', channel);\n  useEffect(() => {\n    loadMsgs()\n    const sub = dataService.subscribeChannelTypeChanges(channel, TYPE_MSG)\n                    .subscribe(doc => {\n                        log.info(doc);\n                        dispatch('updateMessage', doc);\n                    });\n    return () => {\n      sub.unsubscribe();\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [channel])\n\n  const dispatch = (type: 'setMessages'|\n                          'updateMessage', \n                    payload:any = {}) => {\n    _dispatch({type, payload});\n  }\n\n  const loadMsgs = async () => {\n    log.info('Get all by project, type', channel, TYPE_MSG);\n    const msgs = await dataService.getAllByChannel(channel, TYPE_MSG);\n    log.warn(msgs);\n    dispatch('setMessages', msgs.sort((a,b)=>{\n      if(a.updated < b.updated) return 1;\n      return -1;\n    }))\n    log.info(msgs, channel);\n  }\n\n  const printMessageIcon = (msg) => {\n    if(msg.messageType === 'event'){\n      return <IonIcon icon={mail}  slot=\"start\" />\n    }\n    else if(msg.messageType === 'channelinvite') {\n      return <IonIcon icon={peopleCircle}  slot=\"start\" />\n    }\n    else if(msg.messageType === 'friendinvite') {\n      return <IonIcon icon={personAdd}  slot=\"start\" />\n    }\n    else if(msg.messageType === 'action' && msg.messageSubType === 'Note') {\n      return <IonIcon icon={documentTextOutline}  slot=\"start\" />\n    }\n  }\n\n  const printReplyStatus = (msg:Msg) => {\n    if((msg.messageType === 'channelinvite' || msg.messageType === 'friendinvite')\n        && msg.replied !== undefined) {\n      if(msg.replied) {\n        return <IonIcon icon={happy} size='large' \n                        slot=\"end\"\n                        color={COLOR_SUCCESS} />\n      }\n      else {\n        return <IonIcon icon={sad} size='large' \n                        slot=\"end\"\n                        color={COLOR_WARNING} />\n      }\n    }\n  }\n\n  const printClubRequestAcceptRejectButtons = (msg:Msg) => {\n    if(msg.messageType === 'channelinvite' && msg.replied === undefined){\n      return (\n        <div>\n          <IonButton onClick={() => partyService.acceptPartyInvitation(msg)} >\n            Accept</IonButton>\n          <IonButton onClick={() => partyService.rejectPartyInviation(msg)}> \n            Reject</IonButton>\n        </div>\n      )\n    }\n  }\n\n  const printFriendRequestAcceptRejectButtons = (msg:Msg) => {\n    if(msg.messageType === 'friendinvite' && msg.replied === undefined){\n      return (\n        <div>\n          <IonButton onClick={() => partyService.acceptFriendInvitation(msg)} >\n            Accept</IonButton>\n          <IonButton onClick={() => partyService.rejectFriendInviation(msg)}> \n            Reject</IonButton>\n        </div>\n      )\n    }\n  }\n\n  const printMessage = (msg) => {\n    if(msg.messageType === 'event'){\n      return <IonItem  button \n                key={msg.id}\n                onClick={() => {}}>\n        {printMessageIcon(msg)}\n        <IonLabel className=\"ion-text-wrap\">\n          <h3>{msg.message}</h3>\n          <IonText color=\"secondary\">\n              <p>{printDateRelative(msg.updated)}</p>\n          </IonText>\n        </IonLabel>\n      </IonItem>\n    }\n    else if(msg.messageType === 'channelinvite') {\n      return <IonItem  button \n                key={msg.id}\n                onClick={() => {}}>\n        {printMessageIcon(msg)}\n        <IonLabel className=\"ion-text-wrap\">\n          <h2>{msg.from} has invited you to join his club, \n          <strong>{msg.data.name}</strong></h2>\n          <IonText  color=\"secondary\">\n            {printDateRelative(msg.updated)}\n          </IonText>\n            {printClubRequestAcceptRejectButtons(msg)}\n          \n        </IonLabel>\n        {printReplyStatus(msg)}\n      </IonItem>\n    }\n    else if(msg.messageType === 'friendinvite') {\n      return <IonItem  button \n                key={msg.id}\n                onClick={() => {}}>\n        {printMessageIcon(msg)}\n        <IonLabel className=\"ion-text-wrap\">\n            <h2>You have received friend request from \n            <strong> {msg.from}</strong></h2>\n            <IonText  color=\"secondary\">\n              {printDateRelative(msg.updated)}\n            </IonText>\n              {printFriendRequestAcceptRejectButtons(msg)}\n        </IonLabel>\n        {printReplyStatus(msg)}\n      </IonItem>\n    }  \n    else if(msg.messageType === 'action' && msg.messageSubType === 'Note') {\n      return <IonItem  button \n                key={msg.id}\n                onClick={() => {}}>\n        {printMessageIcon(msg)}\n        <IonLabel className=\"ion-text-wrap\">\n            <h2>{msg.challengeName}: <strong>{msg.username}</strong></h2>\n            <h3 dangerouslySetInnerHTML={{__html: msg.data.note.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>')}} />\n             \n            <IonText  color=\"secondary\">\n              {printDateRelative(msg.updated)}\n            </IonText>\n        </IonLabel>\n        {printReplyStatus(msg)}\n      </IonItem>\n    }                                     \n  }\n\n\n  return (\n    <IonCard>\n      <IonCardHeader>\n        <IonCardTitle>Messages</IonCardTitle>\n      </IonCardHeader>\n      <IonCardContent>\n        <IonList>\n            {state.messages.map(msg=> printMessage(msg))}\n        </IonList>\n        \n      </IonCardContent>\n    </IonCard>\n  )\n\n}\nexport default MessagesListComponent;","import {\n  IonPage,\n  IonContent} from '@ionic/react';\nimport React, { useReducer, useEffect } from 'react';\nimport './Home.css';\nimport HeaderWithProgress from '../components/HeaderWithProgress';\nimport FriendsListComponent from '../modules/social/components/Friends.list.component';\nimport MessagesListComponent from '../modules/messages/components/Messages.list.component';\nimport ulog from 'ulog';\nimport { generateUserChannelId } from '../modules/data/utilsData';\nimport { authService } from '../modules/auth/authService';\n\nconst log = ulog('home');\n\n\nexport interface HomeState {\n  userid: string;\n}\n\nconst reducer = (state, {type, payload}:{type:string, payload:any}): HomeState => {\n  switch(type) {\n    case 'setUserid':\n      return {...state, ...{userid: payload}};\n    default:\n      log.error('Action Type is incorrect, default called', type, payload);\n      return state;\n  }\n}\n\nconst Home: React.FC = () => {\n\n  const [state, _dispatch] = useReducer(reducer, {\n    userid:''\n  })\n\n  const dispatch = (type:'setUserid', \n                    payload: any = {}) => {\n    _dispatch({type, payload});\n  }\n\n\n  useEffect(() => {\n    const sub = authService.username$.subscribe(() => {\n      log.info('Userid update, ', authService.userid);\n      dispatch('setUserid', authService.userid);\n    });\n    log.info('HOME, ', authService.userid);\n    dispatch('setUserid', authService.userid);\n    log.info('Home State', authService.userid);\n    return () => {\n      sub.unsubscribe();\n    };\n  }, [])\n\n  return (\n    <IonPage>\n      <HeaderWithProgress title=\"HabitVille\" />\n      <IonContent >\n        <FriendsListComponent />\n        <MessagesListComponent channel={generateUserChannelId(state.userid)} />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Home;\n\n","import {\n  IonPage,\n  IonContent,\n  IonHeader,\n  IonTitle,\n  IonToolbar} from '@ionic/react';\nimport React, {  } from 'react';\n\n\nconst NotFound: React.FC = () => {\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>habits</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent >\n        <div style={{padding:'20px'}}>\n          This page does not exist\n        </div>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default NotFound;\n\n","import React from 'react'\nimport {  IonInput, IonLabel, IonItem,\n  IonNote, IonText } from '@ionic/react';\n\n\nconst MyInput = ({data, updateFunction}) => {\n\n\n\n  //const [_data, setData] = useState<FormValueItem>(data); \n\n  /*\n  useEffect(() => {\n    props.attachToForm({name:props.name, value: props.value});\n\n    return props.detachFromForm({name:props.name, value:props.value});\n  },[props]);\n  */\n\n  //console.log(\"MY Input DATA: \", data);\n\n  const handleChange = (event) => {\n    updateFunction({...data, ...{value: event.target.value, dirty: true}});\n  };\n\n  const handleBlur = (event) => {\n    if(data.dirty === true) return;\n    updateFunction({...data, ...{value: event.target.value, dirty: true}});\n  }\n\n  const printErrors = () => {\n    if(data.dirty){\n      const errors =data.errors.map(m => (\n        <IonNote key={m} color=\"danger\">{m}</IonNote>\n      ))\n      return errors;\n    }\n  }\n\n\n  return (\n    <IonItem>\n      <IonLabel position=\"stacked\">\n        {data.displayName}\n        { data.hasValidation?(\n          <IonText color=\"danger\">*</IonText>\n        ):null}\n      </IonLabel>\n      <IonInput \n        name={data.id}\n        value={data.value}\n        type={data.type}\n        onIonBlur={handleBlur}\n        onIonChange={handleChange}></IonInput>\n        {data.messages.map(m => (\n          <IonNote key={m}>{m}</IonNote>\n        ))}\n        {printErrors()}\n    </IonItem>\n  )\n}\n\nexport default MyInput;","import React, { useEffect, useState } from 'react'\nimport MyInput from './myInput';\nimport { saveIntoArray, findById } from '../../utils';\nimport { IonButton } from '@ionic/react';\nimport validator from 'validator';\n\n\n// use to generate form, usually from outside form passed into here\n// so far we can use, ones that have stars have been tested\n// \"text\", \"password\", \"email\", \"number\", \"search\", \"tel\", and \"url\"\nexport interface FormItem { \n  id: string;\n  displayName?: string;\n  type: string;\n  messages?: string[];\n  validators?: any[];  \n  default?: any;\n}\n\nexport interface ValidatorItem {\n  type: string;\n  message?: string|null;\n  options?: any;\n}\n\n\n// use to hold form state\nexport interface FormValueItem {\n  id: string;\n  displayName: string;\n  type: string;\n  value: string;\n  messages: string[];\n  errors: string[];\n  dirty: boolean;\n  hasValidation:boolean;\n  //status: number; //0: untouched, 1: valid, 2: not valid\n}\n\nexport interface OptionsItem {\n  submitButtonText: string;\n}\n\nexport const defaultOptions:OptionsItem = {\n  submitButtonText: \"Submit\",\n}\n\nexport const getFormOptions = (settings:{}) => {\n  return {...defaultOptions, ...settings};\n}\n\nexport interface Props {\n  items: FormItem[],\n  submitFunction: Function,\n  options?: OptionsItem\n}\n\nexport interface State {\n  items: FormValueItem[],\n  valid: boolean\n}\n\nexport function getValidator(type:string, options:any = null, message:string|null = null):ValidatorItem {\n  return {type, options, message};\n}\n\n\n\nconst MyForm = (props:Props) => {\n  const submitFunction = props.submitFunction;\n  const options = props.options|| defaultOptions;\n\n  const [state, setState] = useState<State>({items:[], valid:false});\n\n  useEffect(() => {\n    initForm(props.items);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[props.items]);\n\n\n  const initForm = (items) => {\n    let model: FormValueItem[] = [];\n    // go thourgh props and generate our model from schema;\n    if(items) { //no schema, do nothing\n      items.forEach((item:FormItem) => {\n        let messages = item.messages;\n        \n        console.log(typeof(messages));\n        if(typeof(messages) === 'string'){\n          console.log('Messages is string');\n        }\n        else if(Array.isArray(messages)){\n          console.log('messages array');\n        }\n        else {\n          messages = [];\n        }\n\n        model.push(validateItem({\n            id: item.id,\n            displayName: item.displayName || item.id, \n            type: item.type,\n            value: item.default||'', \n            messages,\n            errors: [],\n            dirty:false,\n            hasValidation: (Array.isArray(item.validators) && item.validators.length>0)\n        }));\n      });\n      setState({items: model, valid: validateForm(model)});\n      //console.log(state);\n    }\n  }\n\n  //const updateItem = (id:string, displayName: string, type: string, value:any, messages:string[], hasValidation:boolean, touched:boolean) => {\n  const updateItem = (item:FormValueItem) => {\n    //console.log('Update Item, ', item);\n    const items = saveIntoArray(validateItem(item), state.items, 'id')\n    setState({\n      items: items,\n      valid: validateForm(items)\n    });\n  }\n\n\n\n  const validateItem = (item:FormValueItem): FormValueItem => {\n    const errors: string[] = validate(item.id, item.value);\n    //console.log(item)\n    return {...item, ...{errors}}\n  }\n\n  const validate = (id:string, value:any): string[] => {\n    //console.log(typeof(value));\n\n    if(typeof(value) !== 'string') return [];\n    \n    const item:FormItem = findById(id, props.items, 'id');\n    if(!item.validators)\n      item.validators = [];\n\n    const messages: string[] = [];\n    item.validators.forEach((val:ValidatorItem) => {\n      if(val.type === 'isEmpty') {\n        if(validator.isEmpty(value)){\n          messages.push(val.message || 'Value cannot be empty')\n        }\n      }\n      if(val.type === 'isLength'){\n        if(!validator.isLength(value, val.options)){\n          messages.push(val.message || 'Value length is not valid');\n        }\n      }\n      if(val.type === 'isEmail'){\n        if(!validator.isEmail(value, val.options)){\n          messages.push(val.message || 'Valid Email required');\n        }\n      }\n    });\n\n    //lastly check the whole form\n\n    //if(messages.length === 0)\n    //  validateForm();\n\n    return messages;\n  }\n\n\n  const submit = () => {\n    const form = {};\n    state.items.forEach(item => {\n      form[item.id] = { value: item.value };\n    });\n    submitFunction(form);\n    console.log(state);\n  }\n\n  const validateForm = (items = state.items) => {\n    let errors = 0;\n    items.forEach(item => {\n      errors += item.errors.length;\n    });\n\n    return errors === 0;\n  }\n  \n\n  return (\n    <div>\n        { Object.values(state.items).map((i) => (\n          <MyInput key={i.id} data={i} updateFunction={updateItem} />\n        ))}\n          <IonButton  \n            key={'submitButton'}\n            onClick={submit} \n            disabled={!state.valid}\n            color=\"primary\">{options.submitButtonText}</IonButton>\n    </div>\n  )\n\n};\n\nexport default MyForm;\n\n\n\n/*\n  const attachToForm = (component) => {\n    setInputs({...inputs, ...{[component.props.name]: component}});\n    setModel({...model, ...{[component.props.name]: component.state.value}});\n  };\n\n  const detachFromForm = (component) => {\n    const i = Object.assign({}, inputs);\n    delete i[component.props.name]\n    setInputs(i);\n\n    const m = Object.assign({}, model);\n    delete m[component.props.name];\n    setModel(m);\n  }\n\n  const updateModel = () => {\n    const m = Object.assign({}, model);\n    Object.keys(inputs).forEach((name) => {\n      m[name] = inputs[name].state.value;\n    });\n\n    setModel(m);\n  }\n\n  const submit = (event) => {\n    event.preventDefault();\n    updateModel();\n    console.log(model);\n  }\n\n  const getElement = (type) => {\n    if(type === 'string'){\n      return (\n        <div>type</div>\n      )\n    }\n  }\n*/","import React from 'react';\nimport { IonButton } from '@ionic/react';\nimport './auth.css';\nimport { useLocation, useHistory } from 'react-router-dom';\n\n\n\n\n\nconst AuthMenuComponent = ({page}: {page:string}) => {\n  const location = useLocation();\n  const history = useHistory();\n  \n  const push = (url:string) => {\n    if(location.pathname && url !== location.pathname){\n      history.push(url);\n    }\n  }\n\n  return (\n    <div className=\"authMenuParent\" >\n      <IonButton  onClick={() => push('/auth/login')}\n                  size=\"small\"  \n                  color={(page==='login')? 'success':'light'}\n                  fill=\"clear\">\n          Login\n      </IonButton>\n      <IonButton   onClick={() => push('/auth/register')}\n                  size=\"small\"  \n                  color={(page==='register')? 'success':'light'}\n                  fill=\"clear\">\n          Register\n      </IonButton>\n\n    </div>\n  );\n}\nexport default AuthMenuComponent;","import React from 'react';\nimport {\n  IonIcon,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonContent,\n  IonPage\n} from \"@ionic/react\";\nimport { logIn} from 'ionicons/icons';\nimport MyForm, { getValidator, FormItem, getFormOptions } from '../../forms/myForm';\nimport { authService } from '../authService';\nimport { useLocation, useHistory } from 'react-router';\nimport AuthMenuComponent from './auth.menu.component';\nimport './auth.css';\n\nconst LoginPage  = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const options = getFormOptions({\n    submitButtongText: \"Login\"\n  });\n  \n  const form: FormItem[] = [\n    {\n      id: 'id',\n      displayName: 'ID (Username or Email): ',\n      type: 'string',\n      validators: [\n        getValidator('isLength', {min:3, max:50}, 'ID needs to be between 3 to 50 characters')\n  \n      ],\n    },\n    {\n      id: 'password',\n      displayName: \"Password: \",\n      type: 'password',\n      validators: [\n        getValidator('isLength', {min:3, max:50}, 'ID needs to be between 3 to 50 characters')\n      ]\n    },\n    \n  ]\n  \n  const submit = async (form) => {\n    authService.loginAndRedirect(\n        form['id'].value, \n        form['password'].value,\n        history,\n        location);\n  }\n\n\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"primary\">\n          <IonTitle>Login</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <div style={{paddingTop:'50px'}} className=\"ion-text-center\">\n          <IonIcon icon={logIn} color=\"primary\" className=\"iconFormCenter\" />\n        </div>\n        <AuthMenuComponent page=\"login\" />\n        <div style={{padding:'20px'}}>\n          <MyForm  items={form} options={options} submitFunction={submit} /> \n        </div>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default LoginPage;\n","import React, {  } from 'react';\n\nimport {\n  IonIcon,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonContent,\n  IonPage\n} from \"@ionic/react\";\nimport { logIn} from 'ionicons/icons';\nimport MyForm, { getValidator, FormItem, getFormOptions } from '../../forms/myForm';\nimport { authService } from '../authService';\nimport { useLocation, useHistory } from 'react-router';\nimport AuthMenuComponent from './auth.menu.component';\nimport './auth.css';\n\nconst RegisterPage  = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const options = getFormOptions({\n    submitButtongText: \"Login\"\n  });\n  \n  const form: FormItem[] = [\n    {\n      id: 'username',\n      displayName: 'Username: ',\n      type: 'string',\n      validators: [\n        getValidator('isLength', {min:3, max:20}, 'Username needs to be between 3 to 20 characters')\n  \n      ],\n    },\n    {\n      id: 'email',\n      displayName: 'Email: ',\n      type: 'string',\n      validators: [\n        getValidator('isEmail',{}, 'Email is not valid')\n  \n      ],\n    },\n    {\n      id: 'password',\n      displayName: \"Password: \",\n      type: 'password',\n      validators: [\n        getValidator('isLength', {min:3, max:50}, 'Password needs to be between 3 to 50 characters')\n      ]\n    },\n    \n  ]\n  \n  const submit = async (form) => {\n    const res = await authService.register(\n                        form['username'].value, \n                        form['email'].value,\n                        form['password'].value);\n    if(res){\n      authService.loginAndRedirect(\n                        form['username'].value, \n                        form['password'].value,\n                        history,\n                        location)\n    }\n  }\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"primary\">\n          <IonTitle>Register</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <div style={{paddingTop:'50px'}} className=\"ion-text-center\">\n          <IonIcon  color=\"primary\"\n                    icon={logIn} \n                    className=\"iconFormCenter\" />\n        </div>\n        <AuthMenuComponent page=\"register\" />\n        <div style={{padding:'20px'}}>\n          <MyForm  items={form} options={options} submitFunction={submit} /> \n        </div>\n\n        \n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default RegisterPage;\n","import React, { FunctionComponent } from \"react\";\nimport { Route, Redirect, useLocation } from \"react-router-dom\";\nimport LoginPage from './components/login.page';\nimport RegisterPage from './components/register.page';\n\n\nconst UnauthenticatedRoute = ({ exact, path }: \n  { component: FunctionComponent<{}>, exact: boolean, path: string }) => {\n\n  \n  const location = useLocation();\n  // const history = useHistory();\n  // const params = useParams();\n  // const path = location.pathname;\n  \n  // console.log(\"Location:::: \", location);\n  // console.log('HISTORY:::: ', history);\n  // console.log('PARAMS:::: ', params);\n\n\n  const getRoute = () => {\n    if(location.pathname === '/auth/register'){\n      return <Route path={path} \n                    component={RegisterPage} \n                    exact={exact} />;\n    }\n    else if(location.pathname === '/auth/login'){\n      return <Route\n                path='/auth/login'\n                render={() => <LoginPage />}\n              />\n    }\n    else {\n      return <Redirect to={{\n              pathname: \"/auth/login\",\n              state: {prev: location.pathname}\n            }}/>;\n    }\n  }\n  \n\n  return (\n    getRoute()\n  );\n}\n\n\n\n\n\n/*\n\n\n\n\nconst  PrivateRoute = ({ component: Component, ...rest }) => {\n\n  const [authenticated] = useUserFacade();\n  //const location = useLocation();\n\n  //console.log(location);\n\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        authenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: \"/auth/login\"}}\n          />\n        )\n      }\n    />\n  );\n}\n*/\nexport default UnauthenticatedRoute;","\nimport { Habit, habitStage, TYPE_HABBIT } from './models';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { dataService } from '../../modules/data/dataService';\nimport { saveIntoArray, isThisUserProject } from '../../modules/data/utilsData';\nimport { ProjectItem } from '../../modules/data/models';\nimport { gamifyService } from '../../modules/gamify/gamifyService';\nimport _ from 'lodash';\nimport { authService } from '../../modules/auth/authService';\nimport ulog from 'ulog';\n\nconst log = ulog('habits');\n\nexport interface habitsState {\n  selected: Habit | null,\n  habits: Habit[],\n  stageFilter: habitStage\n}\n\nexport const getInitHabitsState = (): habitsState => {\n  return {\n    selected: null,\n    habits: [],\n    stageFilter: habitStage.current\n  }\n}\n\nexport class HabitsService {\n\n  // @ts-ignore:  we force init later on in init function\n  private _project: ProjectItem;\n  public getProject():ProjectItem {return this._project}\n  private _state: habitsState = getInitHabitsState();\n\n  public state$ = new BehaviorSubject(this._state);\n\n  private _docs: Habit[] = [];\n\n  public docs$ = new BehaviorSubject(this._docs);\n\n  private _subscription: Array<Subscription> = [];\n\n  public init(project: ProjectItem) {\n    const dataSub = dataService.getReadySub().subscribe(async (ready) => {\n      if (!ready) return;\n      const equals = _.isEqual(project, this._project);\n      if (equals) return;\n\n      await this._init(project);\n\n      dataSub.unsubscribe();\n    });\n\n  }\n\n  async _init(project: ProjectItem) {\n    if (this._project && this._project.id === project.id) return;\n    this._project = project;\n    this._docs = await dataService.getAllByProject(project.id, TYPE_HABBIT);\n    this.filterhabits();\n\n    //manage changes\n\n    const sub = dataService.subscribeProjectTypeChanges(project.id, TYPE_HABBIT)\n      .subscribe(doc => {\n        if (doc.deleted)\n          this._docs = this._docs.filter(d => d.id !== doc.id);\n        else {\n          this._docs = saveIntoArray(doc, this._docs);\n        }\n        this.filterhabits();\n        //TODO: need to optimize this, maybe start using the view query, see bottom of file\n      });\n    this._subscription.push(sub);\n  }\n\n\n\n  private filterhabits() {\n    const filtered = this._docs.filter(doc => this.filterFunction(doc));\n    this.state = { ...this._state, ...{ habits: filtered } };\n  }\n\n  private filterFunction(doc: Habit) {\n    return (doc.stage === this._state.stageFilter)\n  }\n\n\n\n  public get state(): habitsState {\n    return this._state;\n  }\n  public set state(value: habitsState) {\n    this._state = value;\n    this.state$.next(this._state);\n}\n\n  public get docs(): Habit[] {\n    return this._docs;\n  }\n  public set docs(value: Habit[]) {\n    this._docs = value;\n    this.docs$.next(this._docs);\n  }\n\n\n\n  public save(doc: Habit) {\n    log.info(\"Save: \", doc, this._project, TYPE_HABBIT);\n\n    //check if its new, no id, its noew\n    if (!doc.id) {\n      if(isThisUserProject(this._project.id, authService.getUser().id)){\n        doc = Object.assign(gamifyService.calculateNewHabitRewards(doc));\n        return dataService.save({ ...{ done: false }, ...doc }, TYPE_HABBIT, { projectid: this._project.id });\n      }\n      else {\n\n      }\n    }\n    else\n      dataService.save({ ...{ done: false }, ...doc }, TYPE_HABBIT, { projectid: this._project.id });\n  }\n\n  public remove(id: string) {\n    dataService.remove(id, TYPE_HABBIT);\n  }\n\n  public select(doc: Habit) {\n    this.state = { ...this._state, ...{ selected: doc } };\n  }\n\n  public changeStageFilter(stage: habitStage) {\n    if (stage === this._state.stageFilter) return;\n    this._state = { ...this._state, ...{ stageFilter: stage } };\n    this.filterhabits();\n\n  }\n\n\n  public unsubscribe() {\n    if (!this) return;\n    this._subscription.forEach(sub => {\n      if (sub)\n        sub.unsubscribe();\n    });\n  }\n\n}\n","import React, { useState, useEffect } from 'react';\nimport { IonItem, IonCard, IonCardHeader, IonCardTitle, IonIcon, IonFab, IonFabButton, IonCardContent, IonGrid, IonRow, IonCol, IonNote, IonBadge, IonLabel } from '@ionic/react';\nimport { COLOR_LIGHT, COLOR_DARK, COLOR_SUCCESS, COLOR_DANGER } from '../../colors';\nimport { radioButtonOff, checkmarkCircleOutline, cog } from '../../../node_modules/ionicons/icons';\nimport moment from 'moment';\nimport { Habit, MOMENT_DATE_FORMAT, HabitAction } from './models';\nimport { habitDataFunctions } from './hooks/habits.hook';\nimport './Habit.listitem.component.css';\nimport { calculateCurrentStreak } from './utilsHabits';\nimport { gamifyService } from '../../modules/gamify/gamifyService';\nimport { toastService } from '../../modules/toast/toastService';\n\n\n\nconst HabitListItemComponent = ({habit, dataFunctions, showEditModalFunction}:\n  {habit:Habit, dataFunctions: habitDataFunctions, showEditModalFunction:{(habit: Habit)}}) => {\n\n  const [doc, setDoc] = useState(new Habit(habit));\n\n  useEffect(() => {\n    setDoc(new Habit(habit));\n  }, [habit])\n\n\n  const printDate = (index:number, active = false) => {\n    const day =  moment().subtract(index, 'day');\n    if(active)\n    {\n      return (\n        <IonLabel\n          color=\"primary\"\n        >\n        {day.format('DD')} <br /> {day.format('dd')}\n        </IonLabel>)\n    }\n    return (\n      <>\n      {day.format('DD')} <br /> {day.format('dd')}\n      </>)\n  }\n\n  const printGoal = () => {\n    if(doc.regularityInterval === 'day'){\n      return (\n        <IonItem>\n              <IonNote>\n                Remember, you promised that you will repeat \n                this habit <strong>every day</strong>.\n              </IonNote>\n        </IonItem>\n      )\n    }\n    \n    return (\n      <IonItem>\n        <IonNote>\n          Remember you promised that you will repeat this habit \n          <strong> {doc.regularityIntervalGoal} times {doc.regularityInterval}</strong>\n        </IonNote>\n      </IonItem>\n    )\n  }\n\n\n\n\n  const printDayIcon = (index: number, active=false) => {\n    const day = moment().subtract(index, 'day');\n\n    console.log(doc);\n\n    let action = doc.actions[day.format(MOMENT_DATE_FORMAT)];\n    if(!action)\n      action = {date: day.format(MOMENT_DATE_FORMAT), value: 0};\n\n    console.log(action);\n    if(active){\n      return (<IonIcon  onClick={() => updatehabit({...action, ...{value: 1}})}\n                      size=\"large\" \n                      key={index}\n                      color={ action.value > 0? COLOR_SUCCESS:  COLOR_DARK } \n                      icon={ action.value > 0? checkmarkCircleOutline : radioButtonOff } />)\n    }\n    // @ts-ignore: undefined, but we are forsing assignment just before this\n    return (<IonIcon  \n                      size=\"large\" \n                      key={index}\n                      color={ action.value > 0? COLOR_SUCCESS:  COLOR_DANGER } \n                      icon={ action.value > 0? checkmarkCircleOutline : radioButtonOff } />)\n\n    \n  }\n\n  const updatehabit = (action: HabitAction) => {\n    try {\n      const {habit, rewards} = calculateCurrentStreak(doc, [action])\n      gamifyService.addRewards(rewards);\n      console.log(habit, rewards, action)\n      dataFunctions.save(habit);\n    }\n    catch(e) {\n      toastService.printSimpleError(e.message)\n    }\n  }\n\n  const print = () => {\n    return (\n        <IonCard>\n          <IonCardHeader>\n            {/*<IonCardSubtitle>Card Subtitle</IonCardSubtitle>*/}\n            <IonCardTitle>{doc.name}</IonCardTitle>\n            <IonBadge class=\"habitBadge\" color=\"success\">{doc.currentStreak}</IonBadge>\n            <IonBadge class=\"habitBadge\" color=\"tertiary\">{doc.biggestStreak}</IonBadge>\n          </IonCardHeader>\n          <IonItem>\n            <IonGrid>\n              <IonRow class=\"datecell\">\n                <IonCol>{printDate(6)}</IonCol>\n                <IonCol>{printDate(5)}</IonCol>\n                <IonCol>{printDate(4)}</IonCol>\n                <IonCol>{printDate(3)}</IonCol>\n                <IonCol>{printDate(2)}</IonCol>\n                <IonCol>{printDate(1)}</IonCol>\n                <IonCol>{printDate(0, true)}</IonCol>\n              </IonRow>\n              <IonRow class=\"datecell\">\n                <IonCol>{printDayIcon(6)}</IonCol>\n                <IonCol>{printDayIcon(5)}</IonCol>\n                <IonCol>{printDayIcon(4)}</IonCol>\n                <IonCol>{printDayIcon(3)}</IonCol>\n                <IonCol>{printDayIcon(2)}</IonCol>\n                <IonCol>{printDayIcon(1)}</IonCol>\n                <IonCol>{printDayIcon(0, true)}</IonCol>\n              </IonRow>\n            </IonGrid>\n          </IonItem>\n          <IonCardContent>\n            {printGoal()}\n          </IonCardContent>\n          <IonFab horizontal=\"end\" vertical=\"bottom\" edge>\n            <IonFabButton size=\"small\" color={COLOR_LIGHT} onClick={() => showEditModalFunction(doc)}>\n              <IonIcon size=\"large\" icon={cog} />\n            </IonFabButton>\n          </IonFab>\n        </IonCard>\n    );\n  }\n  \n  return print();\n};\n\nexport default HabitListItemComponent;\n\n","import React, { useState } from 'react';\nimport { IonItem, IonLabel, IonIcon, IonInput, IonTextarea, IonButton, IonHeader, IonTitle, IonToolbar, IonContent, IonFooter, IonButtons, IonSelect, IonSelectOption, IonRange, IonFab, IonFabButton, IonAlert, IonSegment, IonSegmentButton } from '@ionic/react';\nimport { trash } from '../../../node_modules/ionicons/icons';\nimport { Habit, habitIntervals, habitDifficulty, printDifficulty } from './models';\nimport { capitalize } from '../../utils';\nimport { COLOR_DANGER } from '../../colors';\n\n\n\ninterface habitState {\n  regularity: {\n    interval: habitIntervals,\n    min: number,\n    max: number,\n  }\n  doc: Habit,\n  showDeleteWarrning: boolean\n}\n\nconst getRegularityValues = (interval: habitIntervals) => {\n  switch (interval) {\n    case habitIntervals.day:\n      return {interval: interval, min:1, max: 1}\n    case habitIntervals.week:\n      return {interval: interval, min:1, max: 6}\n    case habitIntervals.month:\n      return {interval: interval, min:1, max: 25}\n  }\n}\n\nconst HabitAddComponent = ({habit, dismissFunc}:\n  {habit:Habit, dismissFunc: {(habit:Habit|null, action: 'save'|'remove'|'none')}}) => {\n  \n    const getDefaultRegularityState: habitState = {\n    regularity: getRegularityValues(habit.regularityInterval),\n    doc: new Habit(),\n    showDeleteWarrning: false\n  }\n\n  const [state, setState] = useState<habitState>({...getDefaultRegularityState, ...{doc: habit}});\n\n  const handleChange = (e) => {\n    const newDoc = {...state.doc, ...{[e.target.name]:e.detail.value}}\n    const newState = {...state, ...{doc: newDoc}};\n    setState(newState);\n  }\n\n  const handlerRegularityValue = (e) => {\n    const newDoc = {...state.doc, ...{regularityIntervalGoal: e.detail.value}};\n    setState({...state, ...{doc: newDoc}});\n  }\n\n  const handlerRegularityIntervalChange = (value) => {\n    value = value || 'day';\n    const newDoc = {...state.doc, ...{regularityInterval: value, regularityIntervalGoal: 1}};\n    const newReg = {...state.regularity, ...getRegularityValues(value)};\n    setState({...state, ...{doc:newDoc, regularity: newReg}});\n  }\n\n  const printRegularityLabel = () => {\n\n    const times = (state.doc.regularityIntervalGoal > 1)? ' times a ': ' time a ';\n    if(state.doc.regularityInterval === 'day'){\n      return 'I will repeat this habit every day.'\n    }\n    \n    return 'I will repeat this habit ' +state.doc.regularityIntervalGoal + times + state.doc.regularityInterval\n  }\n\n  const handleDifficultyChange = (e) => {\n    const newDoc = {...state.doc, ...{difficulty: e.detail.value}};\n    setState({...state, ...{doc: newDoc}});\n  }\n\n  const printDifficultyLabel = (hab: habitDifficulty): string => {\n    switch(hab) {\n      case habitDifficulty.trivial:\n        return 'Easy peasy lemon squeezy';\n      case habitDifficulty.easy:\n        return 'Piece of Cake';\n      case habitDifficulty.medium:\n        return \"Let's Rock\";\n      case habitDifficulty.hard:\n        return 'No Pain, No Gain';\n      case habitDifficulty.extreme:\n        return 'Death Wish';\n    }\n  }\n\n  const showRemoveWarrning = () => {\n    setState({...state, ...{showDeleteWarrning: true}});\n  }\n\n  const hideRemoveWarrning = () => {\n    setState({...state, ...{showDeleteWarrning: false}});\n  }\n\n  const removehabit = () => {\n    hideRemoveWarrning();\n    dismissFunc(state.doc, 'remove');\n  }\n\n\n\n  const print = () => {\n      return (\n      <>\n        <IonHeader>\n          <IonToolbar>\n            {/*\n            <IonButtons slot=\"start\">\n              <IonButton> <IonIcon size=\"large\" icon={arrowBack} /></IonButton>\n            </IonButtons>\n            */}\n            <IonTitle>Add Habit</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <IonContent>\n          <IonItem>\n              <IonLabel position=\"floating\">Name</IonLabel>\n              <IonInput \n                  name=\"name\"\n                  placeholder=\"Read book, Go running ...\" \n                  onIonChange={handleChange}\n                  value={state.doc.name} />\n          </IonItem>\n          <IonItem>\n              <IonLabel position=\"floating\">Note</IonLabel>\n              <IonTextarea \n                  placeholder=\"Enter more information here, motivate yourself...\"\n                  name=\"note\"\n                  onIonChange={handleChange}\n                  value={state.doc.note}></IonTextarea>\n          </IonItem>\n          <IonItem>\n            <IonSegment value={state.doc.regularityInterval}\n                        onIonChange={(e) => handlerRegularityIntervalChange(e.detail.value)}>\n              <IonSegmentButton value=\"day\">\n                <IonLabel>Daily</IonLabel>\n              </IonSegmentButton>\n              <IonSegmentButton value=\"week\">\n                <IonLabel>Weekly</IonLabel>\n              </IonSegmentButton>\n              <IonSegmentButton value=\"month\">\n                <IonLabel>Monthly</IonLabel>\n              </IonSegmentButton>\n            </IonSegment>\n          </IonItem>\n\n          {(state.doc.regularityInterval !== 'day')? (\n            <>\n              <IonRange \n                    min={state.regularity.min}\n                    max={state.regularity.max}\n                    debounce={100}\n                    value={state.doc.regularityIntervalGoal}\n                    onIonChange={handlerRegularityValue}\n                    color=\"secondary\" >\n                <IonLabel slot=\"start\">{state.regularity.min}</IonLabel>\n                <IonLabel slot=\"end\">{state.regularity.max}</IonLabel>\n              </IonRange>\n            </>\n          ) : (\n          <></> )}\n          <IonItem>\n            <IonLabel>{printRegularityLabel()}</IonLabel>\n          </IonItem>\n\n          <IonRange min={0} \n                    max={4} \n                    debounce={100}\n                    value={state.doc.difficulty}\n                    onIonChange={handleDifficultyChange}\n                    color=\"secondary\">\n              <IonLabel slot=\"start\">{capitalize(printDifficulty(habitDifficulty.trivial))}</IonLabel>\n              <IonLabel slot=\"end\">{capitalize(printDifficulty(habitDifficulty.extreme))}</IonLabel>\n          </IonRange>\n\n          <IonItem>\n            <IonLabel>{printDifficultyLabel(state.doc.difficulty)}</IonLabel>\n          </IonItem>\n        </IonContent> \n\n        <IonFooter>\n          <IonToolbar>\n            <IonTitle>\n              <IonButton onClick={() => dismissFunc(state.doc, 'save')}>Save</IonButton>\n              <IonButton onClick={() => dismissFunc(null, 'none')}>Cancel</IonButton>\n            </IonTitle>\n          </IonToolbar>\n        </IonFooter>\n        <IonFab horizontal=\"end\" vertical=\"bottom\" >\n          <IonFabButton size=\"small\" color={COLOR_DANGER} onClick={() => showRemoveWarrning()}>\n            <IonIcon size=\"large\" icon={trash} />\n          </IonFabButton>\n        </IonFab>\n        <IonAlert\n          isOpen={state.showDeleteWarrning}\n          onDidDismiss={() => hideRemoveWarrning}\n          header={'Warrning!!!'}\n          message={'Are you sure you want to <strong>delete</strong> this habit?'}\n          buttons={[\n            {\n              text: 'Cancel',\n              role: 'cancel',\n              cssClass: 'secondary',\n              \n            },\n            {\n              text: 'Yes Im Sure',\n              handler: () => removehabit()\n            }\n          ]}\n        />\n      </>\n      );\n  }\n\n  return print();\n};\n\nexport default HabitAddComponent;\n","import React, { useReducer } from 'react';\nimport {\n  IonPage,\n  IonContent,\n  IonList,\n  IonFabButton,\n  IonFab,\n  IonIcon,\n  IonModal} from '@ionic/react';\n\nimport { add } from '../../../node_modules/ionicons/icons';\nimport { useHabitsCollectionFacade } from './hooks/habits.hook';\nimport { Habit } from './models';\nimport HabitListItemComponent from './Habit.listitem.component';\nimport HabitAddComponent from './Habit.add.component';\nimport HeaderWithProgress from '../../components/HeaderWithProgress';\nimport { authService } from '../../modules/auth/authService';\nimport { getDefaultProject } from '../../modules/data/utilsData';\n\n\nexport interface habitPageState {\n  showModal: boolean,\n  modalHabit: Habit|null,\n}\n\nconst reducer = (state, action): habitPageState => {\n  switch(action.type) {\n    case 'showModal':\n      return {...state, ...{showModal: action.data.showModal, modalHabit: action.data.habit} }\n    case 'hideModal':\n      return state;\n    default:\n      return state;\n  }\n}\n\nexport function getAction(todo:'showModal', data = {}){\n  return {type:todo, data:data};\n}\n\n\nconst HabitsPage: React.FC = () => {\n  const [habitsState, dataFunc] = useHabitsCollectionFacade(getDefaultProject(authService.userid));\n  const [state, dispatch] = useReducer(reducer, {\n    showModal:false,\n    modalHabit: null,\n  })\n\n  const { habits } = habitsState;\n\n  const addhabit = (habit:Habit = new Habit()) => {\n    dispatch(getAction('showModal', {showModal: true, habit}));\n  }\n\n  const hidehabitModal = () => {\n    dispatch(getAction('showModal', {showModal: false, habit: null}));\n  }\n\n  const habitDismissFunc = (habit: Habit|null, action:'save'|'remove'|'none') => {\n    dispatch(getAction('showModal', {showModal: false, habit: null}));\n    if(action === 'save' && habit != null){\n      dataFunc.save(habit);\n    }\n    else if(action === 'remove' && habit != null && habit.id){\n      dataFunc.remove(habit.id);\n    }\n  }\n\n\n  return (\n    <IonPage>\n      <HeaderWithProgress title=\"Habits\" />\n      <IonContent>\n        \n      <IonList>\n        {habits.map(habit => (\n              <HabitListItemComponent\n                        habit={habit} \n                        dataFunctions={dataFunc}\n                        key={habit.id} \n                        showEditModalFunction={addhabit}\n              />\n        ))}\n      </IonList>\n      {state.showModal? (\n        <IonModal isOpen={state.showModal} onDidDismiss={() => hidehabitModal()}>\n        <HabitAddComponent habit={state.modalHabit||new Habit()} \n                            dismissFunc = {habitDismissFunc}  />\n        </IonModal>\n      ) : (\n        <></>\n      )}\n      \n\n      <IonFab vertical=\"top\" horizontal=\"end\" slot=\"fixed\" edge>\n        <IonFabButton onClick={()=> addhabit()}>\n          <IonIcon icon={add} />\n        </IonFabButton>\n      </IonFab>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default HabitsPage;\n\n","import { useEffect, useState, useRef } from 'react';\nimport { Subscription } from 'rxjs';\nimport { ProjectItem } from '../../../modules/data/models';\nimport { Habit, habitStage } from '../models';\nimport { habitsState, getInitHabitsState,  HabitsService } from '../habits.service';\nimport _ from 'lodash';\n\nexport interface habitDataFunctions {\n  save: {(doc: Habit)},\n  remove: {(id: string)},\n  select: {(doc: Habit)},\n  changeStageFilter: {(stage: habitStage)}\n}\n\n\n//more simpler then auth hook, just read data\nexport function useHabitsCollectionFacade(project: ProjectItem): \n                                        [habitsState, habitDataFunctions]{\n\n  const [state, setState] = useState(getInitHabitsState());\n\n  const habitsService = useRef(new HabitsService());\n  \n          \n  const dataFunctions = {\n    save: (doc: Habit) => {\n      habitsService.current.save(doc)\n    },\n    remove: (id) => habitsService.current.remove(id), //TODO: allow user to choose, sync or not to sync\n    select: (doc: Habit) => habitsService.current.select(doc),\n    changeStageFilter: (stage: habitStage) => habitsService.current.changeStageFilter(stage),\n  }\n\n  useEffect(() => {\n    if(_.isEqual(habitsService.current.getProject(), project)) \n        return;\n    habitsService.current.init(project)\n\n    return habitsService.current.unsubscribe;\n  }, [project])\n\n  useEffect(() => {\n    const subscriptions: Subscription[] = [\n      habitsService.current.state$.subscribe(state => {\n        setState(state);\n      })\n    ];\n    return () => { subscriptions.map(it => it.unsubscribe()) };\n  },[project]);\n\n\n  return [state, dataFunctions];\n}","import React, {  } from 'react';\nimport { IonHeader } from '@ionic/react';\n\n\n\n\nconst MenuHeaderWithProgress = () => {\n\n  \n  return (\n    <IonHeader className=\"menuHeaderWithAvatar\">\n      \n      <h1>Menu</h1>\n    </IonHeader>\n  )\n}\n\nexport default MenuHeaderWithProgress;","import React, { useState } from 'react';\nimport { IonInput } from '@ionic/react';\nimport { ProjectItem } from '../../modules/data/models';\nimport { generateCollectionId, getProjectChildId } from '../../modules/data/utilsData';\nimport { TYPE_TODO_LIST, TodoList } from './models';\nimport ulog from 'ulog';\nimport { todoService } from './todo.service';\n\nconst log = ulog('todo');\n\n\nconst ListAddInlineComponent = ({projectid}:{projectid: string}) => {\n\n  const [state, setState] = useState({name:''});\n\n  const setNewTitle = (e) => {\n    setState({name: e.detail.value});\n  }\n  \n  const onKeyPress = (e) => {\n    if(e.key === 'Enter'){\n      save();\n      setState({name: ''});\n    }\n  }\n\n  const save = async () => {\n    const id = generateCollectionId(projectid, TYPE_TODO_LIST, encodeURI(state.name));\n    const newList = new TodoList({\n      id,\n      name: state.name,\n      secondaryType: TYPE_TODO_LIST,\n      //folder??\n      project: getProjectChildId(projectid),\n    })\n    newList._new = true;\n\n    log.info('NEW TODO LIST::::::::::::::: ', newList)\n    const res = await todoService.saveList(newList);\n    log.info(res);\n  };\n\n  return (\n    <IonInput\n      className=\"new-todo\"\n      placeholder=\"Add new List?\"\n      onKeyPress={onKeyPress}\n      onIonChange={setNewTitle}\n      value={state.name}\n    />\n  )\n}\n\nexport default ListAddInlineComponent;","import React, { useState } from 'react'\nimport { IonItem } from '@ionic/react'\nimport Lottie from 'react-lottie';\nimport sun from '../../icons/sun.json';\nimport star from '../../icons/star.json';\nimport './todo.menu.css';\n\nexport const waitMS = (ms: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n};\n\nconst TodoMenuItemButtonComponet = ({name, color, icon, actonFunc}:\n  {name: string, icon: string, color:string, actonFunc:Function}) => {\n  \n  const [state, setState] = useState({isStopped:true, isPaused:true})\n  \n  \n  const defaultOptions = {\n    loop: true,\n    autoplay: true, \n    animationData: (icon === 'today')? sun : star,\n    rendererSettings: {\n      clearCanvas: true,\n      scaleMode: 'noScale',\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  }; \n  \n  const actionHandler = async() => {\n    setState({isStopped:false, isPaused:false});\n    actonFunc();\n\n    await waitMS(1000);\n    setState({isStopped:true, isPaused:true});\n  }\n  \n  \n  \n  return (\n    <IonItem  button \n        onClick={() => actionHandler()}\n        color={color}  \n        routerLink={encodeURI('/todos/tag/' + icon)} \n        routerDirection=\"none\"\n        lines=\"none\">\n    <div className =\"lottieicon\">\n      <Lottie  options={defaultOptions}\n          height={25}\n          width={25}\n          isStopped={state.isPaused}\n          isPaused={state.isStopped}/>\n    </div>\n    {name} \n</IonItem>\n  )\n}\n\nexport default TodoMenuItemButtonComponet","import React, { useReducer, useEffect } from 'react';\nimport ListAddInlineComponent from './list.inline.add.component';\nimport ulog from 'ulog';\nimport { TodoTag, TodoList, TYPE_TODO_LIST, TYPE_TODO_TAG } from './models';\nimport { dataService } from '../../modules/data/dataService';\nimport { saveIntoArray } from '../../modules/data/utilsData';\nimport { authService } from '../../modules/auth/authService';\nimport { IonList, IonItem, IonLabel, IonItemDivider, IonItemGroup, IonItemSliding, IonItemOptions, IonItemOption, IonAlert, IonIcon } from '@ionic/react';\nimport { useLocation } from 'react-router';\nimport { todoService } from './todo.service';\nimport TodoMenuItemButtonComponet from './todo.menu.item';\nimport { list } from 'ionicons/icons';\n\nconst log = ulog('todo');\n\nconst initialState:{\n  tags:TodoTag[],\n  tagsOpen: boolean\n  lists:TodoList[],\n  openLists: string[],\n  showDeleteListAlert: boolean,\n  deleteList: TodoList,\n} = {\n  tags:[],\n  tagsOpen: false,\n  lists:[],\n  openLists:[],\n  showDeleteListAlert: false,\n  deleteList: new TodoList(),\n}\n\nconst reducer =  (state = initialState, { type, payload }:{type:string, payload:any}) => {\n  switch (type) {\n\n    case 'hideDeleteAlert':\n      return { ...state, ...{ showDeleteListAlert: false} }\n\n    case 'showDeleteAlert': \n    return { ...state, ...{ showDeleteListAlert: true, deleteList: payload } }\n\n    case 'setTodoList': \n      if(payload.deleted)\n      return { ...state, ...{lists: state.lists.filter(l => l.id !== payload.id)} };\n      else\n        return { ...state, ...{lists: saveIntoArray(payload, state.lists)} };\n\n    case 'setTodoLists':\n      //find todos page\n      return { ...state, ...{ lists: payload } };\n    case 'setTags':\n      return {...state, ...{tags: payload}};\n    case 'setTag': \n      if(payload.deleted)\n        return { ...state, ...{tags: state.tags.filter(t => t.id !== payload.id)} };\n      else\n        return { ...state, ...{tags: saveIntoArray(payload, state.tags)\n                                    .sort((a,b) => (a.name > b.name)? 1 : -1)} };\n\n    default:\n      log.error('REDUCER GOT UNHANDLED TYPE ', type, payload);\n      return state\n  }\n}\n\n\nconst TodoMenuListComponent = ({projectid}: {projectid:string}) => {\n  const location = useLocation();\n  const path = location.pathname;\n  const [state, _dispatch] = useReducer(reducer, initialState)\n\n  const dispatch = (type: 'setTodoLists'|\n                          'setTags'|\n                          'setTag'|\n                          'hideDeleteAlert'|\n                          'showDeleteAlert'|\n                          'setTodoList', payload = {}) => {\n    _dispatch({type, payload});\n  }\n\n\n  useEffect(() => {\n    const subTodoList = dataService.subscribeProjectTypeChanges(\n      projectid, TYPE_TODO_LIST ).subscribe(change => {\n        log.info('Menu Change: ', change);\n        dispatch('setTodoList', change);\n      })\n    loadInitTodoLists(projectid);\n    const tagsList = dataService.subscribeByPropertyChange('type',\n      'todoTag' ).subscribe(change => {\n        log.info('Tags Changed: ', change);\n         dispatch('setTag', change);\n      })\n    loadInitTags();\n    return () => {\n      subTodoList.unsubscribe();\n      tagsList.unsubscribe();\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [authService.userid])\n\n  const loadInitTodoLists = async (projectid:string) => {\n    const todolists = await dataService.getAllByProject(projectid,TYPE_TODO_LIST);\n    log.info(todolists);\n    dispatch('setTodoLists', todolists);\n  }\n\n  const loadInitTags = async () => {\n    const tags = await dataService.queryByProperty('name', 'startsWith', '', TYPE_TODO_TAG);\n    log.info(tags);\n    dispatch('setTags', tags);\n  }\n\n  const deleteList = () => {\n      todoService.deleteList(state.deleteList)\n  }\n\n\n  const tagButtonClickHandler = (tag) => {\n    console.log(tag);\n  }\n\n  return (\n    <IonList>\n      {/*}\n       <IonItem  button \n                color={(path ==='/todos/tag/today'? 'light' : '')}  \n                routerLink={encodeURI('/todos/tag/today')} \n                routerDirection=\"none\"\n                lines=\"none\">\n       \n              <IonIcon\n                size=\"large\"\n                src=\"assets/icons/sun.svg\"></IonIcon>\n            Today\n          </IonItem>\n      */}\n      <IonItemGroup key=\"listsGroup\">\n          <TodoMenuItemButtonComponet \n            name=\"Today\"\n            icon=\"today\"\n            color={(path ==='/todos/tag/today'? 'light' : '')}  \n            actonFunc = {() => tagButtonClickHandler('today')}\n          /> \n          <TodoMenuItemButtonComponet \n            name=\"Important\"\n            icon=\"important\"\n            color={(path ==='/todos/tag/important'? 'light' : '')}  \n            actonFunc = {() => tagButtonClickHandler('important')}\n          /> \n            \n          <IonItemGroup>\n            <h2>Lists</h2>\n          </IonItemGroup>    \n        {state.lists.map( listItem => (\n          <IonItemSliding key={listItem.name+'list'}>\n            <IonItem  button \n                      color={(path ==='/todos/'+listItem.name? 'light' : '')}  \n                      routerLink={encodeURI('/todos/'+listItem.name)} \n                      routerDirection=\"none\"\n                      lines=\"none\">\n              <IonLabel>\n                      <IonIcon  \n                        icon={list}/> \n                {' '+listItem.name}</IonLabel>\n            </IonItem>\n            <IonItemOptions side=\"end\">\n              <IonItemOption  color=\"danger\" \n                              onClick={() => dispatch('showDeleteAlert',list)}>\n                Delete</IonItemOption>\n            </IonItemOptions>\n          </IonItemSliding>\n        ))}\n      </IonItemGroup>\n      <IonItemDivider>\n      </IonItemDivider>\n      <ListAddInlineComponent key=\"addNewItem\" projectid={projectid} />\n\n      <IonItemGroup>\n        <h2>Tags</h2>\n      </IonItemGroup>\n      {state.tags.filter(tag => (tag.name !== 'today' && tag.name !== 'important'))\n        .map( tagItem => (\n          <IonItemSliding key={tagItem.name+'tag'}>\n            <IonItem  button \n                      color={(path ==='/todos/tag/'+tagItem.name? 'light' : '')}  \n                      routerLink={encodeURI('/todos/tag/'+tagItem.name)} \n                      routerDirection=\"none\"\n                      lines=\"none\">\n              <IonLabel>\n                      <IonIcon  \n                        src={\"/assets/icons/tag.svg\"} /> \n                {' '+tagItem.name}</IonLabel>\n            </IonItem>\n            <IonItemOptions side=\"end\">\n              <IonItemOption  color=\"danger\" \n                              onClick={() => {console.log('No delete implemented')} }>\n                Delete</IonItemOption>\n            </IonItemOptions>\n          </IonItemSliding>\n        ))}\n\n      <IonAlert \n        isOpen={state.showDeleteListAlert}\n        onDidDismiss={() => dispatch('hideDeleteAlert')}\n        header={\"Are you sure you want to delete '\" + state.deleteList.name + \"' list?\"}\n        subHeader={'All tasks in this list will be deleted'}\n        buttons={[\n          {\n            text: 'Cancel',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: () => dispatch('hideDeleteAlert')\n          },\n          {\n            text: 'Delete List',\n            handler: () => deleteList()\n          }\n        ]}\n      />\n    </IonList>\n  )\n\n\n\n}\n\nexport default TodoMenuListComponent;","import React, { useReducer, useEffect } from 'react';\nimport { home, apps, sunny, star, heart, basket, construct, bonfire, checkmark, refresh } from 'ionicons/icons';\nimport { getDefaultProject } from '../../data/utilsData';\nimport { authService } from '../../auth/authService';\nimport ulog from 'ulog';\nimport TodoMenuListComponent from '../../../pages/todo/todo.menulist.component';\n\nconst log = ulog('menu');\n\nexport interface AppPage {\n  url: string;\n  icon: any;\n  title: string;\n  lastComponent?: any;\n}\n\n\nexport interface MenuFunctions {\n\n}\n\nexport interface MenuState {\n  projectid: string,\n  appPages: AppPage[];\n}\n\nexport const todoTags: AppPage[] = [\n  {\n    title: 'Today',\n    url: '/todos/today',\n    icon: sunny,\n  },\n  {\n    title: 'Important',\n    url: '/todos/important',\n    icon: star,\n  },\n  {\n    title: 'Important',\n    url: '/todos/tasksmain33mmm',\n    icon: checkmark,\n  },\n  {\n    title: 'Whish List',\n    url: '/todos/whish',\n    icon: heart,\n  },\n  {\n    title: 'Buy',\n    url: '/todos/buy',\n    icon: basket,\n  },\n  {\n    title: 'Projects',\n    url: '/todos/projects',\n    icon: construct,\n  },\n]\n\nexport const getMenuState = (projectid: string): MenuState => {\n  return {\n    projectid,\n    appPages: [\n      {\n        title: 'Home',\n        url: '/home',\n        icon: home,\n      },\n      {\n        title: 'Habits',\n        url: '/habits',\n        icon: refresh,\n      },\n      {\n        title: 'Parties',\n        url: '/parties',\n        icon: bonfire,\n      },\n      {\n        title: 'Todos',\n        url: '/todos',\n        icon: apps,\n        lastComponent: <TodoMenuListComponent projectid={projectid}  />\n      }\n    ]\n  }\n};\n\n\nconst reducer = (state, { type, payload }:{type:string, payload:any}):MenuState => {\n  switch (type) {\n  case 'authChange':\n    return getMenuState(getDefaultProject(authService.userid).id);\n  default:\n    log.error('REDUCER GOT UNHANDLED TYPE ', type, payload);\n    return state\n  }\n}\n\n\n\n//more simpler then auth hook, just read data\nexport function useMenuHookFacade(): [MenuState, MenuFunctions] {\n  const project = getDefaultProject(authService.userid);\n  const [state, _dispatch] = useReducer(reducer, getMenuState(project.id))\n\n  useEffect(() => {\n    const sub = authService.username$.subscribe(name => {\n      _dispatch({type: 'authChange', payload: authService.userid});\n    })\n   \n    return () => {sub.unsubscribe()};\n  }, [])\n          \n  const menuFunctions: MenuFunctions = {\n  }\n\n  \n\n\n  return [state, menuFunctions];\n}","import {\n  IonContent,\n  IonIcon,\n  IonItem,\n  IonLabel,\n  IonMenu,\n  IonMenuToggle,\n  IonGrid,\n  IonCol,\n  IonRow,\n  IonRefresherContent,\n  IonRefresher\n} from '@ionic/react';\nimport React from 'react';\nimport { withRouter, useLocation } from 'react-router-dom';\nimport MenuHeaderWithProgress from './MenuHeaderWithProgress';\nimport { useMenuHookFacade } from '../modules/menu/hooks/menu.hook';\nimport './menu.css';\nimport ulog from 'ulog'\nimport { dataService } from '../modules/data/dataService';\n\nconst log = ulog('menu')\n\nconst Menu = () => {\n\n  const [state,] = useMenuHookFacade();\n  const location = useLocation();\n  const path = location.pathname;\n  log.warn(path);\n  return (\n    <IonMenu key=\"ionmenu_left\" contentId=\"main\" type=\"overlay\">\n      <MenuHeaderWithProgress key=\"menu_header\" />\n      <IonContent key=\"menu_left\" >\n        <IonRefresher slot=\"fixed\" onIonRefresh={(e) => dataService.refresh(e)}>\n            <IonRefresherContent></IonRefresherContent>\n        </IonRefresher>\n        <IonGrid>\n        {state.appPages.map((appPage, index) => {\n          return (\n            <>\n              <IonRow key={appPage.title.replace(' ', '')+appPage.url + index}>\n                <IonCol class=\"leftMenuCol\">\n                <IonMenuToggle  autoHide={false}>\n                  <IonItem\n                        color={(path === appPage.url? 'light' : '')}   \n                        routerLink={appPage.url} routerDirection=\"none\">\n                    <IonIcon slot=\"start\" icon={appPage.icon} />\n                    <IonLabel>{appPage.title}</IonLabel>\n                  </IonItem>\n                </IonMenuToggle>\n                </IonCol>\n              </IonRow>\n              {appPage.lastComponent? (\n                appPage.lastComponent\n              ) : (<></>)}\n            </>\n        )})}\n        </IonGrid>\n      </IonContent>\n    </IonMenu>\n)};\n\nexport default withRouter(Menu);\n","import React, { useState } from 'react';\nimport { PartyProject } from '../models';\nimport { IonHeader, IonToolbar, IonTitle, IonContent, IonItem, \n  IonInput, IonLabel, IonTextarea, IonFooter, IonButton } from '@ionic/react';\n\n\n\n\n\nconst PartyEditComponent = ({party, dismissFunc}:\n    {party: PartyProject| null, dismissFunc:{(party: PartyProject|null, action: 'save'| 'remove' | 'none')}}) => {\n\n  const [state, setState] = useState({party: party||new PartyProject()})\n\n\n  const handleChange = (e) => {\n    const newDoc = {...state.party, ...{[e.target.name]:e.detail.value}}\n    const newState = {...state, ...{party: newDoc}};\n    setState(newState);\n  }\n\n\n  return (\n    <>\n      <IonHeader>\n            <IonToolbar>\n              <IonTitle>Add/Edit Party</IonTitle>\n            </IonToolbar>\n      </IonHeader>\n      <IonContent>\n          <IonItem>\n                <IonLabel position=\"floating\">Name</IonLabel>\n                <IonInput \n                    name=\"name\"\n                    placeholder=\"Your Cool Party Name\" \n                    onIonChange={handleChange}\n                    value={state.party.name} />\n            </IonItem>\n            <IonItem>\n                <IonLabel position=\"floating\">Note</IonLabel>\n                <IonTextarea \n                    placeholder=\"More details for your party members\"\n                    name=\"note\"\n                    onIonChange={handleChange}\n                    value={state.party.note}></IonTextarea>\n            </IonItem>\n            <IonFooter>\n              <IonToolbar>\n                <IonTitle>\n                  <IonButton onClick={() => dismissFunc(state.party, 'save')}>Save</IonButton>\n                  <IonButton onClick={() => dismissFunc(null, 'none')}>Cancel</IonButton>\n                </IonTitle>\n              </IonToolbar>\n            </IonFooter>\n      </IonContent>\n    </>\n  );\n}\n\nexport default PartyEditComponent;","import React, { useState, useEffect } from 'react';\nimport { PartyProject } from '../models';\nimport { IonCard, IonCardHeader, IonCardTitle, IonCardSubtitle, IonBadge } from '@ionic/react';\n\n\nconst PartyListItemComponent = ({partyProject, history,  showEditModalFunction}:\n          {partyProject:PartyProject, history, showEditModalFunction:{(party: PartyProject)}}) => {\n\n  const [state, setState] = useState({party: partyProject})\n\n  useEffect(() => {\n    setState({...state, ...{party:partyProject}});\n  }, [partyProject])\n\n  return(\n    <IonCard>\n      <IonCardHeader onClick={() => history.push('/parties/'+ encodeURI(state.party.id||''))}>\n        <IonCardTitle>{state.party.name} \n              <IonBadge>{state.party.members.length}</IonBadge></IonCardTitle>\n        <IonCardSubtitle>{state.party.note}</IonCardSubtitle>\n      </IonCardHeader>\n    </IonCard>\n  )\n\n\n} \n\nexport default PartyListItemComponent;\n\n\n","import React, { useEffect, useReducer } from 'react';\nimport {\n  IonPage,\n  IonContent,\n  IonList,\n  IonCard,\n  IonCardHeader,\n  IonCardTitle,\n  IonCardSubtitle,\n  IonCardContent,\n  IonLabel,\n  IonButton,\n  IonModal,\n  IonItem,\n  IonRefresher,\n  IonRefresherContent} from '@ionic/react';\nimport HeaderWithProgress from '../../../components/HeaderWithProgress';\nimport { authService } from '../../auth/authService';\nimport { PartyProject } from '../models';\nimport PartyEditComponent from '../components/Party.edit.component';\nimport { partyService } from '../party.service';\nimport PartyListItemComponent from '../components/Party.listitem.component';\nimport { useHistory } from 'react-router-dom';\nimport ulog from 'ulog';\nimport { dataService } from '../../data/dataService';\n\nconst log = ulog('parties');\n\n\n\nexport interface PartiesState {\n  userId: string,\n  showModal: boolean,\n  party: PartyProject|null\n  docs: PartyProject[],\n}\nconst reducer = (state, action:{type:string, data:any}): PartiesState => {\n  switch(action.type) {\n    case 'dismissEdit':\n      return {...state, ...{showModal: false, party: null}}\n    case 'edit':\n      return {...state, ...{showModal: true, party: action.data}}\n    case 'docs':\n      return {...state, ...{docs:action.data}};\n    case 'userid': \n      return {...state, ...{userId: action.data}};\n    default:\n      log.error('ERROR, INCORRECT ACTION TYPE ', action);\n      return state;\n  }\n}\n\n\n\nconst PartiesPage = () => {\n  const history = useHistory();\n  const [state, _dispatch] = useReducer(reducer, {\n    userId: '',\n    showModal: false,\n    party: new PartyProject(),\n    docs: [],\n  })\n\n  const dispatch = (type: 'userid'|\n                          'dismissEdit'|\n                          'edit'|\n                          'docs', data:any = null) => {\n      _dispatch({type, data});                      \n  }\n\n  useEffect(() => {\n    const subs = [\n      authService.username$.subscribe(username => {\n        dispatch('userid', authService.userid);\n      }),\n      partyService.state$.subscribe(changes => {\n        dispatch('docs', changes.docs);\n      }),\n\n    ]\n    return () => {\n      subs.forEach(sub => {\n        if(sub) sub.unsubscribe();\n      });\n    };\n    // eslint-disable-next-line\n  }, [])\n\n  const editParty = (party:PartyProject = new PartyProject()) => {\n    dispatch('edit', party);\n  }\n\n\n  const modalDismissFunc = (party: PartyProject|null, action:'save'|'remove'|'none') => {\n    dispatch('dismissEdit')\n    if(action === 'save' && party != null){\n      partyService.saveParty(party)\n    }\n    else if(action === 'remove' && party != null && party.id){\n      //dataFunc.remove(habit._id);\n    }\n  }\n\n  const hideModal = () => {\n    dispatch('dismissEdit');\n  }\n\n  return (\n    <IonPage>\n      <HeaderWithProgress title=\"Parties\" />\n      <IonContent>\n      <IonRefresher slot=\"fixed\" onIonRefresh={(e) => dataService.refresh(e)}>\n          <IonRefresherContent></IonRefresherContent>\n      </IonRefresher>\n     \n        {state.showModal? (\n          <IonModal isOpen={state.showModal} onDidDismiss={() => hideModal()}>\n            <PartyEditComponent party={state.party} \n                                dismissFunc = {modalDismissFunc}  />\n          </IonModal>\n        ) : (\n          <></>\n        )}\n        <IonCard>\n          <IonCardHeader>\n            <IonCardTitle>\n              Here you can join friends to conquer those tasks together.\n            </IonCardTitle>\n            <IonCardSubtitle>\n              \n            </IonCardSubtitle>\n          </IonCardHeader>\n          <IonCardContent>\n            <IonLabel>\n              Create your party to go on quests and challenge your friends.\n            </IonLabel>\n            <IonButton onClick={() =>editParty()} >Create Party</IonButton>\n            <br></br><br></br><br></br>\n            <IonLabel>\n              Join your friends party, give them your code: <strong>{state.userId}</strong>\n            </IonLabel>\n            \n          </IonCardContent>\n        </IonCard>\n      <IonList>\n        {state.docs.map(party => (\n          <PartyListItemComponent partyProject={party} \n                                  history={history}\n                                  key={party.id}\n                                  showEditModalFunction={editParty} />\n        ))}  \n      </IonList>\n      <IonItem>\n        <IonLabel>To join a party, you can give part leader your id: {state.userId} </IonLabel>\n      </IonItem>\n      \n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default PartiesPage;\n\n","import React from 'react';\nimport { PartyMember, ChallengeMember } from '../models';\nimport { IonBadge } from '@ionic/react';\nimport { COLOR_LIGHT, COLOR_SUCCESS } from '../../../colors';\nimport moment from 'moment';\nimport { MOMENT_DATE_FORMAT } from '../../../pages/habits/models';\nimport './challenge.css';\n\n\nconst ChallengeMemberScoreHistory = ({member}:\n  {member: any}) => {\n\n\n const printDay = (dateString) => {\n  let score;\n  if(member['actions'])\n    score = member['actions'][dateString];\n  else if(member['scoreHistory'])\n    score = member['scoreHistory'][dateString];\n\n  let color = COLOR_LIGHT;\n  let reward = 0;\n  if(score){\n    color = COLOR_SUCCESS;\n    if(score.reward)\n      reward = score.reward.value || score.reward;\n  }\n  if(!Number(reward)) reward = 0;\n\n\n  return <IonBadge class=\"scoreHistoryBadge\"  color={color}>{reward}</IonBadge>\n }\n\n  \n  return (\n    <>\n      {printDay(moment().subtract(6, 'd').format(MOMENT_DATE_FORMAT))}\n      {printDay(moment().subtract(5, 'd').format(MOMENT_DATE_FORMAT))}\n      {printDay(moment().subtract(4, 'd').format(MOMENT_DATE_FORMAT))}\n      {printDay(moment().subtract(3, 'd').format(MOMENT_DATE_FORMAT))}\n      {printDay(moment().subtract(2, 'd').format(MOMENT_DATE_FORMAT))}\n      {printDay(moment().subtract(1, 'd').format(MOMENT_DATE_FORMAT))}\n      {printDay(moment().subtract(0, 'd').format(MOMENT_DATE_FORMAT))}\n    </>\n  )\n\n}\nexport default ChallengeMemberScoreHistory;","import React, { useReducer, useEffect } from 'react';\nimport { PartyProject, PartyMember } from '../models';\nimport { IonCard, IonCardTitle, IonCardHeader, IonCardContent, IonList, IonItem, IonAlert, IonFooter, IonButton, IonLabel, IonBadge } from '@ionic/react';\nimport { partyService } from '../party.service';\nimport  ulog from 'ulog';\nimport { authService } from '../../auth/authService';\nimport { canEditProjectByRights } from '../../data/utilsData';\nimport { COLOR_LIGHT, COLOR_SUCCESS, COLOR_SECONDARY } from '../../../colors';\nimport ChallengeMemberScoreHistory from './Challenge.member.scoreHistory';\nconst log = ulog('memberlist');\n\nexport interface MembersState {\n  showAddModal: boolean,\n  project: PartyProject,\n}\n\n\nconst reducer = (state, action): MembersState => {\n  switch(action.type) {\n    case 'showAddMemberModal':\n      return {...state, ...{showAddModal: true}};\n    case 'hideAddMemberModal':\n      return {...state, ...{showAddModal: false}};\n    case 'setProject':\n      return {...state, project: action.data}\n    default:\n      log.error('Action type is not a match');\n      return state;\n  }\n}\n\nconst PartyMembersListComponent = ({project}:{project:PartyProject}) => {\n  const [state, _dispatch] = useReducer(reducer, {\n    showAddModal: false,\n    project,\n  })\n\n  useEffect(() => {\n    dispatch('setProject', project);\n    \n  }, [project])\n\n  const dispatch = (type: 'showAddMemberModal'|\n                          'hideAddMemberModal'|\n                          'setProject',\n                    data:any = {}) => {\n    _dispatch({type, data});\n  }\n\n  const addMember = () => {\n    dispatch(\"showAddMemberModal\");\n    \n  }\n\n  const hideAddUser = () => {\n    dispatch('hideAddMemberModal');\n  }\n\n  const canEditThisProject = () => {\n    const self = project.members.find(m => m.id === authService.userid);\n    if(!self) return false;\n    return canEditProjectByRights(self.rights);\n  }\n\n  const printScore = (score, index) =>{\n    let color = COLOR_LIGHT;\n    if(index === 0) color = COLOR_SUCCESS;\n    if(index === 1) color = COLOR_SECONDARY;\n    return <IonBadge slot=\"end\" color={color}>{score.reward}</IonBadge>\n  }\n\n  \n  return (\n    <IonCard>\n      <IonCardHeader>\n        <IonCardTitle>Members</IonCardTitle>\n      </IonCardHeader>\n      <IonCardContent>\n        <IonList>\n            {project.members.sort((a,b) => b.score.reward - a.score.reward)\n                            .map((member, i) => (\n          <IonItem key={member.id}>\n            <IonLabel>\n              <h2>{member.username} - \n                  <ChallengeMemberScoreHistory member={member}  />\n              </h2>\n            </IonLabel>\n              {printScore(member.score, i)}\n          </IonItem>\n            ))}\n        </IonList>\n        \n      </IonCardContent>\n      {canEditThisProject()? (\n        <IonFooter>\n          <IonButton onClick={()=>addMember()} fill=\"clear\">Invite</IonButton>\n        </IonFooter>\n      ) : ( <></>)}\n      <IonAlert \n        isOpen={state.showAddModal}\n        onDidDismiss={() => hideAddUser()}\n        header=\"Friend ID:\"\n        subHeader={'Found at bottom of parties page.'}\n        inputs={[\n          {\n            name: 'userid',\n            type: 'text',\n            id: 'adduserid',\n          }\n        ]}\n        buttons={[\n          {\n            text: 'Cancel',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: () => {\n              hideAddUser();\n            }\n          },\n          {\n            text: 'Invite User',\n            handler: (data) => {\n              partyService.addUser(data.userid, project);\n              hideAddUser();\n            }\n          }\n        ]}\n      />\n    </IonCard>\n  )\n\n}\nexport default PartyMembersListComponent;","import React, { useEffect, useReducer } from 'react';\nimport { IonItem, IonLabel, IonList, IonText, IonBadge } from '@ionic/react';\nimport { Challenge } from '../models';\nimport { COLOR_LIGHT, COLOR_SUCCESS, COLOR_SECONDARY } from '../../../colors';\nimport ChallengeMemberScoreHistory from './Challenge.member.scoreHistory';\n\n\nexport interface ChallengeLocalState {\n  challenge: Challenge,\n}\n\nconst reducer = (state, action): ChallengeLocalState => {\n  switch(action.type) {\n    case 'challenge':\n      return {...state, ...{challenge:action.data}}\n\n    default:\n      console.log('ERROR WENT TO DEFAULTS:: ', action);\n      return state;\n  }\n}\n\n\nconst ChallengeMembersItem = ({challenge}:\n  {challenge:Challenge}) => {\n\n  const [state, _dispatch] = useReducer(reducer, {\n    challenge,\n  })\n\n  const dispatch = (type:'challenge', data:any) => {\n    _dispatch({type, data});\n  }\n\n  useEffect(() => {\n    dispatch('challenge', challenge);\n  }, [challenge])\n\n  const printScore = (score, index) =>{\n    if(!score) return;\n    if(!score.reward)return;\n    let color = COLOR_LIGHT;\n    if(index === 0) color = COLOR_SUCCESS;\n    if(index === 1) color = COLOR_SECONDARY;\n    return <IonBadge slot=\"end\" color={color}>{score.reward}</IonBadge>\n  }\n\n  const print = () => {\n    return (\n      <IonList>\n        {state.challenge.members.sort((a,b)=> b.score.reward - a.score.reward)\n          .map((member, i) => (\n            <IonItem key={member.id}>\n              <IonLabel>\n                <h2>{member.username} - - \n                  <ChallengeMemberScoreHistory member={member} />\n                </h2>\n              </IonLabel>\n              {printScore(member.score, i)}\n            </IonItem>\n        ))}\n      </IonList>\n    );\n  }\n  \n  return print();\n};\n\nexport default ChallengeMembersItem;\n\n","import React, { useReducer, useEffect } from 'react';\nimport ulog from 'ulog'\nimport { IonItem, IonHeader, IonToolbar, IonTitle,  IonContent, IonButton, IonTextarea } from '@ionic/react';\nimport { Challenge, ChallengeAction } from '../models';\n\n\nconst log = ulog('challenge');\n\nconst reducer = (state, {type, payload}) => {\n  switch(type) {\n    case 'setState': \n      return payload;\n    case 'setDoc':\n      return {...state, ...{doc: payload}}\n    default:\n      log.error('Incorrect action, ', type, payload);\n      return state;\n      \n  }\n}\n\n\nconst ChallengeAddActionNoteComponent = ({doc, submitFunc, closeFunc}: \n    {doc:ChallengeAction, submitFunc:Function, closeFunc:Function}) => {\n\n  const [state, _dispatch] = useReducer(reducer, {doc,}); \n  const dispatch = (type:   'other'|\n                            'setDoc'|\n                            'setState', payload:any = {}) => {\n  _dispatch({type, payload});\n  }\n\n  useEffect(() => {\n    dispatch('setDoc', doc);\n  }, [doc])\n\n  const handleChange = (e) => {\n    const newDoc = Object.assign(state.doc);\n    newDoc.data.note =  e.detail.value\n    dispatch('setDoc', newDoc);\n  }\n\n  /*\n  const handleNamedChange = (property, value) => {\n    const newDoc = {...state.doc, ...{[property]: value}}\n    dispatch('setDoc', newDoc)\n  }\n  */\n\n  return (\n  <>\n    <IonHeader>\n      <IonToolbar>\n        <IonTitle>Add Note</IonTitle>\n      </IonToolbar>\n    </IonHeader>\n    <IonContent>\n      <IonItem>\n        <IonTextarea \n          name=\"note\"\n          autofocus={true}\n          autoGrow={false}\n          spellCheck={true}\n          onIonChange={handleChange}\n          value={state.doc.data.note}\n          rows={10}\n          placeholder=\"Enter message here...\"></IonTextarea>\n      </IonItem>\n\n    </IonContent>\n    <IonToolbar>\n      <IonButton\n        onClick={()=> submitFunc({...state.doc, ...{value: 1}})}\n        fill=\"clear\">Submit</IonButton>\n      <IonButton\n        onClick={()=> closeFunc()} \n        fill=\"clear\">Cancel</IonButton>\n    </IonToolbar>\n  </>\n  )\n}\n\n\n\n\nexport default ChallengeAddActionNoteComponent;","import React, { useEffect, useReducer } from 'react';\nimport { IonItem, IonCard, IonCardHeader, IonCardTitle, IonCardContent, IonNote, IonFooter, IonButton, IonLabel, \n   IonFab, IonFabButton, IonIcon, IonAlert, IonModal } from '@ionic/react';\nimport { Challenge, ChallengeState, ChallengeType, ChallengeTypeUnit, ChallengeMember, ChallengeAction } from '../models';\nimport ulog from 'ulog';\nimport { partyService } from '../party.service';\nimport { authService } from '../../auth/authService';\nimport ChallengeMembersItem from './Challenge.members.item.component';\nimport { canEditProject } from '../../data/utilsData';\nimport { cog, checkmarkDone, readerOutline, cafeOutline, walkOutline, alarmOutline, timerOutline, rocketOutline, cashOutline } from 'ionicons/icons';\nimport { COLOR_SUCCESS, COLOR_LIGHT } from '../../../colors';\nimport ChallengeAddActionNoteComponent from './Challenge.add.note.action.component';\nimport { MOMENT_DATE_FORMAT } from '../../../pages/habits/models';\nimport moment from 'moment';\n\nconst log = ulog('clubs');\n\nexport interface ChallengeLocalState {\n  challenge: Challenge,\n  showDoneAlert: false,\n  memberDoc: ChallengeMember|undefined,\n  currentDate: string,\n}\n\nconst reducer = (state, action): ChallengeLocalState => {\n  switch(action.type) {\n    case 'setMemberDoc':\n      return {...state, ...{memberDoc: action.data}};\n    case 'challenge':\n      return {...state, ...{challenge:action.data, \n                            memberDoc: action.data.members\n                            .find(m => m.id === authService.userid)}}\n    case 'showDoneAlert':\n        return {...state, ...{showDoneAlert:true, }}\n    case 'hideDoneAlert':\n        return {...state, ...{showDoneAlert:false}}\n  \n\n    default:\n      console.log('ERROR WENT TO DEFAULTS:: ', action);\n      return state;\n  }\n}\n\n\nconst ChallengeListItemComponent = ({challenge, showEditModalFunction}:\n  {challenge:Challenge, showEditModalFunction:{(challenge: Challenge)}}) => {\n\n  const [state, _dispatch] = useReducer(reducer, {\n    challenge,\n    showDoneAlert: false,\n    currentDate: moment().format(MOMENT_DATE_FORMAT),\n    memberDoc: challenge.members.find(m => m.id === authService.userid)\n  })\n\n  const dispatch = (type: 'challenge'|\n                          'setMemberDoc'|\n                          'hideDoneAlert'|\n                          'showDoneAlert', data:any = {}) => {\n    _dispatch({type, data});\n  }\n\n  useEffect(() => {\n    dispatch('challenge', challenge);\n  }, [challenge])\n\n  const printTitle = () => {\n    if(state.challenge.state === ChallengeState.waiting){\n      return <IonCardTitle>{state.challenge.name} - Open to joining</IonCardTitle>\n    }\n    else if(state.challenge.state === ChallengeState.current){\n      return <IonCardTitle>{state.challenge.name} </IonCardTitle>\n    }\n    else if(state.challenge.state === ChallengeState.finished) {\n      return <IonCardTitle>{state.challenge.name} - Finished</IonCardTitle>\n    }\n    else if(state.challenge.state === ChallengeState.future) {\n      return <IonCardTitle>{state.challenge.name} - Preivew of future challenge</IonCardTitle>\n    }\n    return <IonCardTitle>{state.challenge.name}</IonCardTitle>\n  }\n\n  const printInfo = () => {\n    if(state.challenge.regularityInterval === 'day'){\n      return (\n        <IonItem>\n          <IonLabel>\n            <h2>{state.challenge.note}</h2>\n            <IonNote>\n              Challenge goal, for <strong>every day</strong>.\n            </IonNote>\n          </IonLabel>\n        </IonItem>\n      )\n    }\n    \n    return (\n      <IonItem>\n        <IonLabel>\n          <h2>{state.challenge.note}</h2>\n          <IonNote>\n            Challenge goal is for \n            <strong> {state.challenge.regularityIntervalGoal} times {state.challenge.regularityInterval}</strong>\n          </IonNote>\n        </IonLabel>\n      </IonItem>\n    )\n  }\n\n  const challengeSubmitForToday = () => {\n\n    return false;\n  }\n\n\n\n  const printActionButtons = () => {\n    if(state.challenge.state === ChallengeState.waiting && state.memberDoc === undefined){\n      return <IonButton size=\"small\"   fill=\"clear\"\n            onClick={() => partyService.acceptChallenge(state.challenge)} >\n            Accept Challenge</IonButton>\n    }\n    else if(state.challenge.state === ChallengeState.current){\n      if(challengeSubmitForToday()) return;\n      return;\n    }\n    else if(state.challenge.state === ChallengeState.finished) {\n\n    }\n    else if(state.challenge.state === ChallengeState.future) {\n\n    }\n\n  }\n\n  const printSubmitFab = () => {\n    if(state.challenge.state === ChallengeState.current){\n      if(challengeSubmitForToday() && state.challenge.regularityEachDayGoal > 1) return;\n     return <IonFab horizontal=\"end\" vertical=\"top\" >\n              <IonFabButton onClick={() => dispatch('showDoneAlert')}\n                            color={COLOR_SUCCESS}  >\n                {printDoneIcon()}\n              </IonFabButton>\n            </IonFab>\n    }\n  }\n\n  const printEditFabButton = () => {\n    if(!canEditProject(state.challenge.id, authService.getUser())) return;\n    return <IonFab horizontal=\"end\" vertical=\"bottom\" edge>\n              <IonFabButton size=\"small\" \n                            onClick={() => showEditModalFunction(state.challenge)}\n                            color={COLOR_LIGHT}  >\n                <IonIcon size=\"large\" icon={cog} />\n              </IonFabButton>\n            </IonFab>\n  }\n\n  const printAdminActionButtons = () => {\n    if(!canEditProject(state.challenge.id, authService.getUser())) return;\n    if(state.challenge.state === ChallengeState.waiting){\n      return <>\n              <IonButton size=\"small\" fill=\"clear\"\n                onClick={() => partyService.changeChallengeState(state.challenge.id, ChallengeState.current)} >\n                Start Challenge</IonButton>\n              <IonButton size=\"small\" fill=\"clear\"\n                onClick={() => partyService.changeChallengeState(state.challenge.id, ChallengeState.waiting)} >\n                Freeze For Future Use</IonButton>\n            </>\n    }\n    else if(state.challenge.state === ChallengeState.current){\n\n    }\n    else if(state.challenge.state === ChallengeState.finished) {\n\n    }\n    else if(state.challenge.state === ChallengeState.future) {\n\n    }\n\n  }\n\n  const printDoneIcon = () => {\n    if(state.challenge.challengeType === ChallengeType.checkin)\n      return <IonIcon size=\"large\" icon={checkmarkDone} />\n    if(state.challenge.challengeType === ChallengeType.note)\n      return <IonIcon size=\"large\" icon={readerOutline} />\n    if(state.challenge.challengeType === ChallengeType.value &&\n        state.challenge.challengeTypeUnit === ChallengeTypeUnit.Cup)\n      return <IonIcon size=\"large\" icon={cafeOutline} />\n    if(state.challenge.challengeType === ChallengeType.value &&\n        state.challenge.challengeTypeUnit === ChallengeTypeUnit.Kilometer)\n      return <IonIcon size=\"large\" icon={walkOutline} />\n    if(state.challenge.challengeType === ChallengeType.value &&\n        state.challenge.challengeTypeUnit === ChallengeTypeUnit.Hour)\n      return <IonIcon size=\"large\" icon={alarmOutline} />\n    if(state.challenge.challengeType === ChallengeType.value &&\n        state.challenge.challengeTypeUnit === ChallengeTypeUnit.Minute)\n      return <IonIcon size=\"large\" icon={timerOutline} />\n    if(state.challenge.challengeType === ChallengeType.value &&\n        state.challenge.challengeTypeUnit === ChallengeTypeUnit.Dollar)\n      return <IonIcon size=\"large\" icon={cashOutline} />\n\n    return <IonIcon size=\"large\" icon={rocketOutline} />\n  }\n\n\n  const closeModal = () => {\n    log.info('Close modal');\n    dispatch('hideDoneAlert');\n  }\n\n  const submitModal = (action: ChallengeAction)  => {\n    log.info('Submit modal::: ', action);\n    partyService.submitChallengeActions(state.challenge.id, [action])\n    dispatch('hideDoneAlert');\n  }\n\n  const getCurrentAction = () => {\n    if(state.memberDoc === undefined) \n      return {date: state.currentDate, value: 0, data:{}, reward: {value: 0}}\n    const cAction = state.memberDoc.actions[state.currentDate];\n    if(!cAction)\n      return {date: state.currentDate, value: 0, data:{}, reward: {value: 0}}\n    if(!cAction.data) cAction.data = {};\n    return cAction;\n  }\n\n\n\n\n  const print = () => {\n    return (\n        <IonCard>\n          <IonCardHeader>\n            {/*<IonCardSubtitle>Card Subtitle</IonCardSubtitle>*/}\n            {printTitle()}\n          </IonCardHeader>\n          <IonCardContent>\n            <ChallengeMembersItem challenge={state.challenge} />\n            {printInfo()}\n          </IonCardContent>\n          <IonFooter>\n            {printActionButtons()}\n            {printAdminActionButtons()}\n          </IonFooter>\n\n          \n          {printEditFabButton()}\n          {printSubmitFab()}\n\n          <IonModal isOpen={(state.showDoneAlert && \n              state.challenge.challengeType === ChallengeType.note)} \n              onDidDismiss={() => closeModal()}>\n            <ChallengeAddActionNoteComponent \n                  doc={getCurrentAction()} \n                  closeFunc = {() => closeModal()}\n                  submitFunc = {submitModal}  />\n            </IonModal>\n\n          \n            <IonAlert \n            isOpen={(state.showDoneAlert && state.challenge.challengeType === ChallengeType.value)}\n            onDidDismiss={() => dispatch('hideDoneAlert')}\n            header=\"Submit Action:\"\n            inputs={[\n              {\n                name: 'value',\n                type: 'number',\n                min: 0,\n                value: Number(getCurrentAction().value)+1\n              },\n            ]}\n            buttons={[\n              {\n                text: 'Cancel',\n                role: 'cancel',\n                cssClass: 'secondary',\n                handler: () => {\n                  dispatch('hideDoneAlert');\n                }\n              },\n              {\n                text: 'Submit',\n                handler: (data) => {\n                  console.log(data);\n                  dispatch('hideDoneAlert');\n                  submitModal({...getCurrentAction(), ...{value: data.value}})\n                }\n              }\n            ]}\n          />\n\n\n\n          <IonAlert \n            isOpen={(state.showDoneAlert && state.challenge.challengeType === ChallengeType.checkin)}\n            onDidDismiss={() => dispatch('hideDoneAlert')}\n            header=\"Submit Action:\"\n            inputs={[\n              {\n                name: 'checkbox1',\n                id: 'checkbox1',\n                type: 'checkbox',\n                label: 'Check-In',\n                value: '1',\n                checked: false\n              },\n            ]}\n            buttons={[\n              {\n                text: 'Cancel',\n                role: 'cancel',\n                cssClass: 'secondary',\n                handler: () => {\n                  dispatch('hideDoneAlert');\n                }\n              },\n              {\n                text: 'Submit',\n                handler: (data) => {\n                  console.log(data);\n                  if(data[0]){\n                    console.log('Checked in');\n                    dispatch('hideDoneAlert');\n                    submitModal({...getCurrentAction(), ...{value: 1}})\n                  }\n                  else{\n                    console.log('Failed');\n                    dispatch('hideDoneAlert');\n                  }\n                }\n              }\n            ]}\n          />\n\n        </IonCard>\n    );\n  }\n  \n  return print();\n};\n\nexport default ChallengeListItemComponent;\n\n","import React, { useState, useReducer, useEffect } from 'react';\nimport { IonItem, IonLabel, IonIcon, IonInput, IonTextarea, IonButton, \n  IonHeader, IonTitle, IonToolbar, IonContent, IonFooter, \n  IonRange, IonFab, \n  IonFabButton, IonAlert, IonSegment, IonSegmentButton, IonSelectOption, IonSelect, IonCheckbox } from '@ionic/react';\nimport { ChallengeIntervals, Challenge, ChallengeDifficulty, ChallengeType, ChallengeTypeUnit } from '../models';\nimport { capitalize } from '../../../utils';\nimport { COLOR_DANGER, COLOR_SUCCESS, COLOR_SECONDARY } from '../../../colors';\nimport { trash } from 'ionicons/icons';\nimport ulog from 'ulog';\n\nconst log = ulog('party');\n\n\ninterface challengeState {\n  regularity: {\n    interval: ChallengeIntervals,\n    min: number,\n    max: number,\n  }\n  doc: Challenge,\n  showDeleteWarrning: boolean\n}\n\nconst getRegularityValues = (interval: ChallengeIntervals) => {\n  switch (interval) {\n    case ChallengeIntervals.day:\n      return {interval: interval, min:1, max: 1}\n    case ChallengeIntervals.week:\n      return {interval: interval, min:1, max: 6}\n    case ChallengeIntervals.month:\n      return {interval: interval, min:1, max: 25}\n  }\n}\n\n\nconst reducer = (state, {type, payload}): challengeState => {\n  switch(type) {\n    case 'challengeChange':\n      const newDoc = {...state.doc, ...payload}\n      return {...state, ...{doc: newDoc}};\n    case 'stateChange':\n      return payload;\n    case 'showRemoveWarrning':\n      return {...state, ...{showDeleteWarrning: true}};\n    case 'hideRemoveWarrning':\n      return {...state, ...{showDeleteWarrning: false}};\n\n    default:\n      log.error('Action type is not a match');\n      return state;\n  }\n}\n\nconst ChallengeAddComponent = ({challenge, dismissFunc}:\n  {challenge:Challenge|null, dismissFunc: {(challenge:Challenge|null, action: 'save'|'remove'|'none')}}) => {\n  const _challenge = challenge|| new Challenge();\n  const getDefaultRegularityState: challengeState = {\n    regularity: getRegularityValues(_challenge.regularityInterval),\n    doc: _challenge,\n    showDeleteWarrning: false\n  }\n  log.warn('ADDDD', challenge);\n  const [state, _dispatch] = useReducer(reducer, getDefaultRegularityState)\n\n\n  useEffect(() => {\n    log.warn('USE EFFECT ADD:: ', challenge);\n    dispatch('challengeChange', challenge);\n  }, [challenge])\n\n  const dispatch = (type: 'challengeChange'|\n                          'stateChange'|\n                          'showRemoveWarrning'|\n                          'hideRemoveWarrning',\n                    payload:any = {}) => {\n  _dispatch({type, payload});\n  }\n\n\n  const handleChange = (e) => {\n    log.info(e);\n    const newDoc = {...state.doc, ...{[e.target.name]:e.detail.value}}\n    dispatch('challengeChange', newDoc)\n  }\n\n  const handleNamedChange = (property, value) => {\n    const newDoc = {...state.doc, ...{[property]: value}}\n    dispatch('challengeChange', newDoc)\n  }\n\n  const handlerRegularityValue = (e) => {\n    const newDoc = {...state.doc, ...{regularityValue: e.detail.value}};\n    dispatch('challengeChange', newDoc)\n  }\n\n  const handlerRegularityIntervalChange = (value) => {\n    value = value || 'day';\n    const newDoc = {...state.doc, ...{regularityInterval: value, regularityValue: 1}};\n    const newReg = {...state.regularity, ...getRegularityValues(value)};\n    dispatch('stateChange', {...state, ...{doc:newDoc, regularity: newReg}});\n  }\n\n  const printRegularityLabel = () => {\n\n    const times = (state.doc.regularityIntervalGoal > 1)? ' times a ': ' time a ';\n    if(state.doc.regularityInterval === 'day'){\n      return 'I will repeat this task every day.'\n    }\n    \n    return 'I will repeat this task ' + state.doc.regularityIntervalGoal + times + state.doc.regularityInterval\n  }\n\n  const handleDifficultyChange = (e) => {\n    const newDoc = {...state.doc, ...{difficulty: e.detail.value}};\n    dispatch('challengeChange', newDoc)\n  }\n\n  const printDifficultyLabel = (chdiff: ChallengeDifficulty): string => {\n    switch(chdiff) {\n      case ChallengeDifficulty.trivial:\n        return 'Easy peasy lemon squeezy';\n      case ChallengeDifficulty.easy:\n        return 'Piece of Cake';\n      case ChallengeDifficulty.medium:\n        return \"Let's Rock\";\n      case ChallengeDifficulty.hard:\n        return 'No Pain, No Gain';\n      case ChallengeDifficulty.extreme:\n        return 'Death Wish';\n    }\n  }\n\n  const removehabit = () => {\n    dispatch('showRemoveWarrning');\n    dismissFunc(state.doc, 'remove');\n  }\n\n\n\n  const print = () => {\n    return (\n      <>\n        <IonHeader>\n          <IonToolbar>\n            {/*\n            <IonButtons slot=\"start\">\n              <IonButton> <IonIcon size=\"large\" icon={arrowBack} /></IonButton>\n            </IonButtons>\n            */}\n            <IonTitle>Add Challenge</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <IonContent>\n          <IonItem>\n              <IonLabel position=\"floating\">Name</IonLabel>\n              <IonInput \n                  name=\"name\"\n                  placeholder=\"Read book, Go running ...\" \n                  onIonChange={handleChange}\n                  value={state.doc.name} />\n          </IonItem>\n          <IonItem>\n              <IonLabel position=\"floating\">Note</IonLabel>\n              <IonTextarea \n                  placeholder=\"Enter more information here, motivate yourself...\"\n                  name=\"note\"\n                  onIonChange={handleChange}\n                  value={state.doc.note}></IonTextarea>\n          </IonItem>\n          <IonItem>\n            <IonSegment value={state.doc.regularityInterval}\n                        onIonChange={(e) => handlerRegularityIntervalChange(e.detail.value)}>\n              <IonSegmentButton value=\"day\">\n                <IonLabel>Daily</IonLabel>\n              </IonSegmentButton>\n              <IonSegmentButton value=\"week\">\n                <IonLabel>Weekly</IonLabel>\n              </IonSegmentButton>\n              <IonSegmentButton value=\"month\">\n                <IonLabel>Monthly</IonLabel>\n              </IonSegmentButton>\n            </IonSegment>\n          </IonItem>\n\n          {(state.doc.regularityInterval !== 'day')? (\n            <>\n              <IonRange \n                    min={state.regularity.min}\n                    max={state.regularity.max}\n                    debounce={100}\n                    value={state.doc.regularityIntervalGoal}\n                    onIonChange={handlerRegularityValue}\n                    color=\"secondary\" >\n                <IonLabel slot=\"start\">{state.regularity.min}</IonLabel>\n                <IonLabel slot=\"end\">{state.regularity.max}</IonLabel>\n              </IonRange>\n            </>\n          ) : (\n          <></> )}\n          <IonItem>\n            <IonLabel>{printRegularityLabel()}</IonLabel>\n          </IonItem>\n\n          <IonRange min={0} \n                    max={4} \n                    debounce={100}\n                    value={state.doc.difficulty}\n                    onIonChange={handleDifficultyChange}\n                    color=\"secondary\">\n              <IonLabel slot=\"start\">{capitalize(printDifficultyLabel(ChallengeDifficulty.trivial))}</IonLabel>\n              <IonLabel slot=\"end\">{capitalize(printDifficultyLabel(ChallengeDifficulty.extreme))}</IonLabel>\n          </IonRange>\n\n          <IonItem>\n            <IonLabel>{printDifficultyLabel(state.doc.difficulty)}</IonLabel>\n          </IonItem>\n\n          <IonItem>\n            <IonSegment value={state.doc.challengeType}\n                        onIonChange={(e) => handleNamedChange('challengeType', e.detail.value)}>\n              <IonSegmentButton value=\"Check-In\">\n                <IonLabel>Check-in</IonLabel>\n              </IonSegmentButton>\n              <IonSegmentButton value=\"Value\">\n                <IonLabel>Value</IonLabel>\n              </IonSegmentButton>\n              <IonSegmentButton value=\"Note\">\n                <IonLabel>Note</IonLabel>\n              </IonSegmentButton>\n            </IonSegment>\n          </IonItem>\n\n          {(state.doc.challengeType === 'Value')? (\n            <>\n            <IonItem>\n                  <IonLabel>Unit</IonLabel>\n                  <IonSelect  value={state.doc.challengeTypeUnit}\n                              onIonChange={(e) => handleNamedChange('challengeTypeUnit', e.detail.value)}\n                              color={COLOR_SECONDARY}\n                              placeholder=\"Select One\">\n                    <IonSelectOption value=\"Cup\">Cup</IonSelectOption>\n                    <IonSelectOption value=\"Dollar\">Dollar</IonSelectOption>\n                    <IonSelectOption value=\"Page\">Page</IonSelectOption>\n                    <IonSelectOption value=\"Minute\">Minute</IonSelectOption>\n                    <IonSelectOption value=\"Hour\">Hour</IonSelectOption>\n                    <IonSelectOption value=\"Meter\">Meter</IonSelectOption>\n                    <IonSelectOption value=\"Kilometer\">Kilometer</IonSelectOption>\n                    <IonSelectOption value=\"Other\">Other</IonSelectOption>\n                  </IonSelect>               \n            </IonItem>\n            <IonItem>\n                  <IonLabel position=\"floating\">Value</IonLabel>\n                  <IonInput type=\"number\" \n                            name=\"regularityEachDayGoal\"\n                            onIonChange={handleChange}\n                            value={state.doc.regularityEachDayGoal}/>\n            </IonItem>\n            </>\n          ) : (<></>)}\n          {(state.doc.challengeType === 'Value' &&\n            state.doc.challengeTypeUnit === ChallengeTypeUnit.Other)? (\n            <IonItem>\n                  <IonLabel position=\"floating\">Unit</IonLabel>\n                  <IonInput name=\"chalengeTypeOther\"\n                            onIonChange={handleChange}\n                            value={state.doc.chalengeTypeOther}/>\n            </IonItem>\n          ) : (<></>)}\n\n\n\n\n          {(state.doc.challengeType ===  ChallengeType.note)? (\n            <IonItem>\n              <IonLabel>Vote Enabled: </IonLabel>\n              <IonCheckbox  name = \"chalengeTypeNoteVote\"\n                            onIonChange={(e) => handleNamedChange('chalengeTypeNoteVote', e.detail.checked)}\n                            checked={state.doc.chalengeTypeNoteVote} />\n            </IonItem>\n\n          ) : (<></>)}\n        </IonContent> \n\n\n\n\n\n\n\n\n\n\n\n\n        <IonFooter>\n          <IonToolbar>\n            <IonTitle>\n              <IonButton onClick={() => dismissFunc(state.doc, 'save')}>Save</IonButton>\n              <IonButton onClick={() => dismissFunc(null, 'none')}>Cancel</IonButton>\n            </IonTitle>\n          </IonToolbar>\n        </IonFooter>\n        <IonFab horizontal=\"end\" vertical=\"bottom\" >\n          <IonFabButton size=\"small\" color={COLOR_DANGER} onClick={() => dispatch('showRemoveWarrning')}>\n            <IonIcon size=\"large\" icon={trash} />\n          </IonFabButton>\n        </IonFab>\n        <IonAlert\n          isOpen={state.showDeleteWarrning}\n          onDidDismiss={() => dispatch('hideRemoveWarrning')}\n          header={'Warrning!!!'}\n          message={'Are you sure you want to <strong>delete</strong> this habit?'}\n          buttons={[\n            {\n              text: 'Cancel',\n              role: 'cancel',\n              cssClass: 'secondary',\n              \n            },\n            {\n              text: 'Yes Im Sure',\n              handler: () => removehabit()\n            }\n          ]}\n        />\n      </>\n      );\n  }\n  \n  return print();\n};\n\nexport default ChallengeAddComponent;\n","import React, { useReducer, useEffect } from 'react';\nimport { IonList, IonModal, IonCard, \n  IonCardContent, IonCardHeader, IonCardTitle, \n  IonFab, IonFabButton, IonIcon, IonButton, IonFooter } from '@ionic/react';\nimport { Challenge, PartyProject, TYPE_PARTY } from '../models';\nimport ChallengeListItemComponent from './Challenge.listitem.component';\nimport ChallengeAddComponent from './Challenge.add.component';\nimport { add } from 'ionicons/icons';\nimport { dataService } from '../../data/dataService';\nimport { partyService } from '../party.service';\nimport { getProjectChildId, canEditProjectByRights } from '../../data/utilsData';\nimport { saveIntoArray } from '../../../utils';\nimport  ulog from 'ulog';\nimport { authService } from '../../auth/authService';\n\n//ulog.level = 7;\nconst log = ulog('challengelist');\n\n\nexport interface ChallengeListState {\n  showModal: boolean,\n  modalChallenge: Challenge|null,\n  challenges: Challenge[],\n}\n\nconst reducer = (state, action): ChallengeListState => {\n  switch(action.type) {\n    case 'addChallengeModal': \n      return {...state, ...{showModal: true, modalChallenge: action.data}}\n    case 'hideChallengeModal':\n      return {...state, ...{showModal: false, modalChallenge: null}}\n    case 'loadChallenges': \n      return {...state, ...{challenges: action.data}}\n    case 'challengeChange':\n      return {...state, ...{challenges:saveIntoArray(action.data,state.challenges)}};\n    default:\n      return state;\n  }\n}\n\n\n\n\nconst ChallengeListComponent = ({project}:{project: PartyProject}) => {\n  const [state, _dispatch] = useReducer(reducer, {\n    showModal: false,\n    modalChallenge: null,\n    challenges: [],\n  });\n\n  useEffect(() => {\n    const sub = dataService.subscribeByPropertyChange('secondaryType', 'challenge')\n      .subscribe(change => {\n        if(change.id.startsWith(getProjectChildId(project.id)))\n          dispatch('challengeChange', change);\n\n    });\n    if(project.id)\n      loadChallenges(project.id);\n\n    return () => {\n      sub.unsubscribe();\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [project.id])\n\n  const loadChallenges = async (id: string) => {\n    const res = await dataService.queryByProperty(\n        'secondaryType', 'equals', 'challenge', TYPE_PARTY);\n    const challenges = res.filter(doc => doc.id.startsWith(getProjectChildId(id)));\n    dispatch('loadChallenges', challenges);\n  };\n\n  const dispatch = (type: 'addChallengeModal'|\n                          'loadChallenges'|\n                          'challengeChange'|\n                          'hideChallengeModal', data:any) => {\n    _dispatch({type, data});\n  }\n  \n  const addChallenge = (ch:Challenge = new Challenge()) => {\n    log.warn('Add Challenge::: ', ch);\n    dispatch('addChallengeModal', ch);\n  }\n\n  const hideChallengeModal = () => {\n    dispatch('hideChallengeModal', null);\n  }\n\n  const challengeDismissFunc = (challenge: Challenge|null, action:'save'|'remove'|'none') => {\n    hideChallengeModal();\n    if(action === 'save' && challenge != null){\n      partyService.saveChallenge(challenge, project);\n    }\n    else if(action === 'remove' && challenge != null && challenge.id){\n      //dataFunc.remove(habit.id);\n    }\n  }\n\n\n  const canEditThisProject = () => {\n    const self = project.members.find(m => m.id === authService.userid);\n    if(!self) return false;\n    return canEditProjectByRights(self.rights);\n  }\n\n  return (\n    <IonCard>\n      <IonCardHeader>\n        <IonCardTitle>Challenges</IonCardTitle>\n      </IonCardHeader>\n      <IonCardContent>\n        <IonList>\n          {state.challenges.map(challenge => (\n                <ChallengeListItemComponent\n                          challenge={challenge} \n                          key={challenge.id} \n                          showEditModalFunction={addChallenge}/>\n          ))}\n        </IonList>\n          <IonModal isOpen={state.showModal} onDidDismiss={() => hideChallengeModal()}>\n          <ChallengeAddComponent challenge={state.modalChallenge} \n                              dismissFunc = {challengeDismissFunc}  />\n          </IonModal>\n\n      </IonCardContent>\n      <IonFooter>\n        {canEditThisProject()? (\n          <IonButton    onClick={() => addChallenge()}\n            fill=\"clear\">Add New Challenge</IonButton>\n        ) : ( <></>)}\n      </IonFooter>\n    </IonCard>\n  )\n}\n\n\n\nexport default ChallengeListComponent;","import React, { useState, useEffect, useRef } from 'react';\nimport { IonPage, IonContent, IonRefresher, IonRefresherContent} from '@ionic/react';\nimport HeaderWithProgress from '../../../components/HeaderWithProgress';\nimport { PartyProject, TYPE_PARTY } from '../models';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { dataService } from '../../data/dataService';\nimport { HabitsService } from '../../../pages/habits/habits.service';\nimport PartyMembersListComponent from '../components/Members.list.component';\nimport ChallengeListComponent from '../components/Challenge.list.component';\nimport MessagesListComponent from '../../messages/components/Messages.list.component';\nimport { getChannelFromProjectId } from '../../data/utilsData';\n\n\n\ninterface State {\n  party:PartyProject,\n}\n\nconst getInitState = {\n    party: new PartyProject(),\n}\n\n\nconst loadParty = async (id:string, state, setState, history) => {\n\n  const dataSub = dataService.getReadySub().subscribe(async (ready) => {\n    if(!ready) return;\n    const party = await dataService.getDoc(id, TYPE_PARTY);\n    \n    if(!party){\n      dataSub.unsubscribe();\n      history.push('/parties');\n      return\n    }\n    setState({...state, ...{party}})\n    dataSub.unsubscribe();\n  })\n  \n}\n\n//*********** Page Start *************/\nconst PartyViewPage = () => {\n  const {id} = useParams();\n  const history = useHistory();\n  const [state, setState] = useState<State>(getInitState)\n\n  //if(!id) return history.push('/parties');\n  useEffect(() => {\n    if(id)\n      loadParty(id, state, setState, history)\n    else {\n      history.push('/parties');\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id])\n  \n  useEffect(() => {\n    const idd = id || '';\n    console.log(idd, id);\n    const sub = dataService.subscribeDocChanges(idd).subscribe(change => {\n      console.log(change);\n      setState({party: change});\n    });\n    return () => {\n      sub.unsubscribe();\n    };\n  }, [id])\n\n\n\n\n  return (\n    <IonPage>\n      <HeaderWithProgress title={\"Party: \" + state.party.name} />\n      <IonContent>\n        <IonRefresher slot=\"fixed\" onIonRefresh={(e) => dataService.refresh(e)}>\n            <IonRefresherContent></IonRefresherContent>\n        </IonRefresher>\n      {state.party.id? (\n        <>\n          <PartyMembersListComponent  project={state.party} />\n          <ChallengeListComponent project={state.party} />\n          <MessagesListComponent channel={getChannelFromProjectId(state.party.id)} />\n        </>\n      ):(<></>)}\n\n      </IonContent>\n    </IonPage>\n  )\n}\n\nexport default PartyViewPage;","import React, {  } from 'react';\nimport { Redirect, Route, useHistory, useLocation } from 'react-router-dom';\nimport UserPage from './modules/auth/components/user.page';\nimport TodosPage from './pages/todo/Todos.page';\nimport IntroPage from './modules/auth/components/intro.page';\nimport { useAppStatus, AppStatus } from './modules/app/hooks/appStatus.hook';\nimport Home from './pages/Home';\nimport NotFound from './pages/NotFound';\nimport UnauthenticatedRoute from './modules/auth/unauthenticatedRoute';\nimport HabitsPage from './pages/habits/Habits.page';\nimport { IonSplitPane, IonRouterOutlet } from '../node_modules/@ionic/react';\nimport Menu from './components/Menu';\nimport PartiesPage from './modules/parties/pages/Parties.page';\nimport PartyViewPage from './modules/parties/pages/Party.view.page';\n\nexport const Routes = () => {\n  const [appStatus] = useAppStatus();\n  const history = useHistory();\n  const location = useLocation();\n\n  if(appStatus.status === AppStatus.auth && location.pathname.startsWith('/auth/')){\n    if(location.state){\n      const newpath = location.state['prev'] || '/';\n      history.push(newpath);\n    }\n  }\n  \n  const getRoutes = () => {\n    switch(appStatus.status){\n      case AppStatus.auth:\n        return (\n          <IonSplitPane when=\"sm\" contentId=\"main\">\n            <Menu key=\"menumain\"/>\n            <IonRouterOutlet id=\"main\">\n                <Route path=\"/home\" component={Home} exact={true} />           \n                <Route exact path=\"/auth/user\" component={UserPage} />\n                <Route path=\"/todos\" component={TodosPage} exact={true} />\n                <Route path=\"/todos/:list\" component={TodosPage} exact={true} />\n                <Route path=\"/todos/tag/:tag\" component={TodosPage} exact={true} />\n                <Route path=\"/habits\" component={HabitsPage} exact={true} />\n                <Route path=\"/parties\" component={PartiesPage} exact={true} />\n                <Route path=\"/parties/:id\" component={PartyViewPage} exact={true} />\n                <Route path=\"/\" render={() => <Redirect to=\"/home\" />} exact={true} />\n                <Route path=\"/404\" component={NotFound} />\n                <Redirect to=\"/404\" />\n            </IonRouterOutlet>\n        </IonSplitPane>\n        )\n      case AppStatus.guest:\n          return (\n            <IonRouterOutlet>\n              <UnauthenticatedRoute exact path=\"*\" component={Home} />\n            </IonRouterOutlet>\n          );\n      default:\n          return (\n            <IonRouterOutlet>\n              <Route exact path=\"*\"  component={IntroPage} />\n            </IonRouterOutlet>\n          );\n      \n\n    }\n  }\n\n  return getRoutes();\n}","import React, { useState, useEffect } from 'react';\nimport { Subscription } from 'rxjs';\nimport { toastService, ToastMessage } from './toastService';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const Toasts: React.FC = () => {\n  const [message, setMessage] = useState<ToastMessage | null>(null);\n\n  useEffect(() => {\n    const subscriptions: Subscription[] = [\n      toastService.messages$.subscribe((m: ToastMessage) =>{\n        setMessage(m);\n      })\n    ];\n    return () => { subscriptions.map(it => it.unsubscribe()) };\n  },[message]);\n\n  return (\n    <div className='toastDiv' >\n      <ToastContainer\n          position=\"top-right\"\n          autoClose={5000}\n          hideProgressBar\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          draggable\n          pauseOnHover\n          />\n    </div>\n  );\n};","import React from 'react';\nimport { IonApp } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\n\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\nimport './theme/my.css';\n\nimport { Loading } from './modules/loading/loading.component';\nimport { Routes } from './routes';\nimport { Toasts } from './modules/toast/toast.component';\n\n\n\nconst App: React.FC = () => (\n  <IonApp>\n    <IonReactRouter>\n      <Loading /><Toasts />\n      <Routes />\n    </IonReactRouter>\n  </IonApp>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}