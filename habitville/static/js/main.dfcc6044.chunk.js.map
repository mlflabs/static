{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","modules/market/models.ts","modules/loading/loadingService.ts","modules/loading/loading.component.tsx","modules/auth/components/user.page.tsx","modules/data/models.ts","pages/habits/models.ts","env.ts","modules/gamify/utilsGamify.ts","pages/habits/utilsHabits.ts","modules/data/utilsData.ts","pages/todo/models.ts","components/animatedIcon.tsx","modules/parties/models.ts","modules/data/adapters/dexie.ts","modules/localStorage/localStorageService.ts","utils.ts","modules/ajax/ajax.ts","modules/toast/toastService.ts","modules/auth/authService.ts","modules/data/sync.ts","modules/data/dataService.ts","modules/messages/models.ts","modules/social/models.ts","modules/gamify/gamifyService.ts","pages/todo/todo.service.ts","pages/todo/todo.new.component.tsx","colors.ts","pages/todo/todo.edit.inline.component.tsx","pages/todo/Todo.listitem.component.tsx","pages/todo/hooks/todos.hook.ts","pages/habits/habits.service.ts","pages/habits/hooks/habits.hook.ts","components/HeaderWithProgress.tsx","pages/todo/Todos.page.tsx","modules/auth/components/intro.page.tsx","modules/parties/party.service.ts","i18n.ts","modules/app/hooks/appStatus.hook.ts","modules/social/social.service.ts","modules/social/components/Friends.list.component.tsx","modules/messages/components/Messages.list.component.tsx","pages/Home.tsx","pages/NotFound.tsx","modules/forms/myInput.tsx","modules/forms/myForm.tsx","modules/auth/components/auth.menu.component.tsx","modules/auth/components/login.page.tsx","modules/auth/components/register.page.tsx","modules/auth/unauthenticatedRoute.tsx","pages/habits/Habit.listitem.component.tsx","pages/habits/Habit.add.component.tsx","pages/habits/Habits.page.tsx","components/MenuHeaderWithProgress.tsx","pages/todo/list.inline.add.component.tsx","pages/todo/todo.menu.item.tsx","pages/todo/todo.menulist.component.tsx","modules/menu/hooks/menu.hook.tsx","components/Menu.tsx","modules/parties/components/Party.edit.component.tsx","modules/parties/components/Party.listitem.component.tsx","modules/parties/pages/Parties.page.tsx","modules/parties/components/Challenge.member.scoreHistory.tsx","modules/parties/components/Members.list.component.tsx","modules/parties/components/Challenge.members.item.component.tsx","modules/parties/components/Challenge.add.note.action.component.tsx","modules/parties/components/Challenge.listitem.component.tsx","modules/parties/components/Challenge.add.component.tsx","modules/parties/components/Challenge.list.component.tsx","modules/parties/pages/Party.view.page.tsx","pages/Settings.tsx","modules/market/pages/market.tsx","routes.tsx","modules/toast/toast.component.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","MarketItemType","loadingService","_loading","loading$","BehaviorSubject","show","this","msg","next","Loading","useState","state","setState","useEffect","subscriptions","subscribe","res","it","unsubscribe","isOpen","message","UserPage","Doc","String","fromCharCode","values","undefined","name","deleted","created","Date","now","updated","creator","type","dirty","rev","assign","ProjectItem","note","access","habitStage","habitIntervals","habitDifficulty","getMarketItem","itemType","price","difficulty","pic","quantity","defaultSeed","seed","MarketItems","printDifficulty","hab","trivial","easy","medium","hard","extreme","Habit","stage","current","regularityInterval","day","regularityIntervalGoal","regularityEachDayGoal","actions","lastCalculatedDate","currentTimeperiedStreak","currentTimeperiodLastDay","currentStreak","biggestStreak","newRewards","seedItem","plantName","plantLevel","plantExp","plantNextLevelExp","plantDifficultyLevel","ulog","level","TRACE","detail","process","REACT_APP_STAGE","SYNC_SERVER","AUTH_API_URL","env","APP_ID","ACCESS_META_KEY","SERVER_ACCESS_META_KEY","MOMENT_DATE_FORMAT","GAMIFY_HABIT_GOLD_BASE_REWARD","GAMIFY_HABIT_EXPERIENCE_BASE_REWARD","HABIT_REWARDS_GOLD_BASE","HABIT_REWARDS_GOLD_PERCENTAGE_INCREASE","HABIT_REWARDS_EXPERIENCE_BASE","HABIT_REWARDS_EXPERIENCE_PERCENTAGE_INCREASE","HABIT_REWARDS_NEW_GOLD","HABIT_REWARDS_NEW_EXPERIENCE","TODO_NEW_GOLD_REWARDS","TODO_DONE_GOLD_REWARDS","TODO_NEW_EXPERIENCE_REWARDS","TODO_DONE_EXPERIENCE_REWARDS","MESSAGE_DURATION","TOKEN_EXPIRATION","calculateLevelExperience","exp","x","Math","floor","pow","calculatePlantExperience","diff","d","calculateDoneTodoGold","todo","days","date","moment","rew","calculateDoneTodoExperience","getInitGamifyRewards","base","gold","experience","items","sortByDate","a","b","calculateCurrentStreak","habit","r","rewards","sort","forEach","action","isBefore","isSame","isAfter","calculateDailyChallengeStreak","calculateWeeklyChallengeStreak","calculateMonthlyChallengeStreak","rewards1","rewards2","newHabit","addPlantExperience","console","log","h","currentAction","subtract","format","currentDateMoment","add","isSameOrBefore","value","calculateGoldByStreak","calculateExperienceByStreak","analizeDay","nextTimeperiodFirstDay","nextWeekFirstDay","streak","baseXP","exponent","generateUserChannelId","userid","getDefaultProject","uuid","generateProjectUUID","genrateMetaData","generateUUID","ok","shortid","generate","substring","getProjectChildId","length","getChannelFromProjectId","app","generateCollectionId","projectid","collection","replace","waitMS","ms","setTimeout","saveIntoArray","item","ary","idKey","i","getIndexById","slice","getDocumentRights","user","channel","split","getChannelNameFromId","canEditProject","rights","canEditProjectByRights","getDefaultTodoList","project","TodoList","folder","icon","secondaryType","fullname","color","_new","getDefaultTodoTag","TodoTag","animatedIcon","Todo","done","list","tags","parent","subTodos","showSubTodos","showDone","doneRewards","AnimatedIcon","ChallengeState","ChallengeType","ChallengeTypeUnit","ChallengeDifficulty","ChallengeIntervals","iconsvg","actionFunc","isStopped","isPaused","defaultOptions","loop","autoplay","render","animationData","rendererSettings","clearCanvas","scaleMode","preserveAspectRatio","actionHandler","onClick","className","options","height","width","DexieAdapter","scheme","db","_ready","ready$","_subscriptions","changes$","Subject","Dexie","stores","tables","t","columns","version","_init","open","error","sub","get","bulkGet","filter","doc","field","operator","where","equals","toArray","docs","startsWith","notEqual","put","bulkPut","PartyProject","members","moneyTypeSingle","moneyTypeMultiple","moneyColor","Challenge","waiting","challengeType","checkin","challengeTypeUnit","Other","chalengeTypeOther","challengePointMultiplier","chalengeTypeNoteVote","localStorageService","localStorage","getItem","val","JSON","parse","str","stringify","setItem","capitalize","s","charAt","toUpperCase","printDateRelative","timestamp","m","fromNow","getNested","obj","args","reduce","saveIntoDocList","ToastType","getAjaxMessage","success","data","status","errors","getPostRequest","url","form","getErrorMessage","location","post","showLoading","loadingMessage","axios","hideLoading","info","response","AuthStatus","toastService","messages$","default","milliseconds","toast","autoClose","duration","err","showMessage","getUser","username","email","token","token_expiery","expires","isGuest","getGuestUser","authService","_user","_authStatus","authStatus$","username$","loadAuth","User","forceLogout","setAuthStatus","setObject","isEqual","Guest","getObject","updateUser","warn","password","history","prev","push","printServerErrors","organizeData","channels","checkpoints","syncData","props","syncurl","checkpoint","chpoints","types","databaseScheme","sync","dataService","authId","_ready$","addSyncCall$","pipe","throttleTime","_syncRemote","getDoc","getBulk","queryByProperty","getProjectItems","save","remoteSync","oldDoc","_","getToken","gotNewRightsToken","doc2","doctype","channelname","asObservable","change","property","projectChildId","event","complete","authid","syncRemote","dbSub","ready","_createSettingsDoc","getSettingsDocId","ts","red","Number","requestMaxSize","saveFromSync","gamifyService","_userId","_state","maxExperience","userItems","state$","calculateFinishedTodoRewards","addGold","messageReceivedGold","addExperience","messageReceivedExperience","messageLostGold","messageLostExperience","calculateNewTodo","calculateNewHabitRewards","addRewards","dataSub","getReadySub","loadInitDocs","_save","sub2","subscribeDocChanges","getGamifyDocId","find","preMessage","postMessage","equal","initEqual","TodoService","_projectid","selectedTodo","tag","tagDocs","doneTodos","orderFilter","orderAsync","showNewTagFilter","_subscription","listName","tagName","getTags","reloadTodos","subscribeProjectTypeChanges","filterAndSaveTodos","filtered","filterDoneParentFunction","orderFunction","todoId","parentId","parentTodo","concat","saveNewTags","addSubTodoToParent","tagDoc","printSimpleError","saveRes","remove","removeSubTodoFromParent","todoService","TodoNewComp","focus","closeFunc","saveFunc","projectId","useReducer","payload","title","showTags","closeFocus","_dispatch","inputEl","useRef","searchTags$","dispatch","setDelayedFocusOnInput","setFocus","searchTags","getTagsByStartingName","debounceTime","distinctUntilChanged","switchMap","term","regex","tag2","match","otherTags","index","trim","newDoc","onInputFocus","onSubAction","lastIndexOf","closeToolbar","fill","key","size","src","printSmallTagFromName","class","autofocus","ref","placeholder","onKeyPress","onIonChange","onIonBlur","onIonFocus","getDefaultState","showDeleteWarrning","text","mergeText","TodoEditInlineComponent","dataFunctions","hideRemoveWarrning","handleTagChange","newtags","includes","printTag","autoGrow","exec","newState","select","close","trash","onDidDismiss","header","buttons","role","cssClass","handler","reducer","TodoListItemComp","doneHandler","handleSelectTodo","printEdit","button","lines","slot","restart","check","getInitHabitsState","selected","habits","stageFilter","HabitsService","_project","_docs","docs$","getAllByProject","filterhabits","filterFunction","removeUserItem","useHabitsCollectionFacade","habitsService","changeStageFilter","getProject","init","HeaderWithProgress","habitsState","positionArray","getPlantSize","getPlantTop","style","right","alt","top","left","bottom","leaf","trailWidth","percent","strokeWidth","strokeColor","Keyboard","Plugins","Device","TodosPage","useLocation","useTranslation","params","useParams","pathname","selectList","changeDoneFilter","changeOrderFilter","showNewTag","useTodosCollectionFacade","dataFunc","getInfo","devInfo","operatingSystem","addListener","keyboardHeight","setKeyboard","onIonRefresh","refresh","checkmarkCircleOutline","radioButtonOff","arrowDownOutline","arrowUpOutline","lastChild","vertical","horizontal","edge","IntroPage","initPartyState","partyService","sub1","subscribeChanges","party","channelid","partyProject","_createParty","saveNewProject","challenge","_createChallenge","saveSystemDoc","msgId","replied","accepted","newMsg","challengeid","saveFromServer","i18n","use","initReactI18next","Backend","interpolation","escapeValue","lng","fallbackLng","backend","loadPath","react","wait","useSuspense","debug","AppStatus","loadPreferedLanguage","getSettingsDoc","language","Globalization","getPreferredLanguage","changeLanguage","initSocialState","friends","socialService","_userid","showAddModal","FriendsListComponent","hideAddUser","member","inputs","addFriend","messages","MessagesListComponent","loadMsgs","subscribeChannelTypeChanges","getAllByChannel","msgs","printMessageIcon","messageType","mail","peopleCircle","personAdd","messageSubType","documentTextOutline","printReplyStatus","happy","sad","printMessage","from","acceptPartyInvitation","rejectPartyInviation","printClubRequestAcceptRejectButtons","acceptFriendInvitation","rejectFriendInviation","printFriendRequestAcceptRejectButtons","challengeName","dangerouslySetInnerHTML","__html","Home","NotFound","padding","MyInput","updateFunction","position","displayName","hasValidation","target","printErrors","submitButtonText","getFormOptions","settings","getValidator","MyForm","submitFunction","valid","initForm","model","Array","isArray","validateItem","validators","validateForm","updateItem","validate","findById","validator","isEmpty","isLength","isEmail","disabled","AuthMenuComponent","page","useHistory","LoginPage","submitButtongText","min","max","submit","loginAndRedirect","paddingTop","logIn","RegisterPage","register","UnauthenticatedRoute","exact","path","component","to","HabitListItemComponent","showEditModalFunction","setDoc","printDate","active","printDayIcon","updatehabit","cog","getRegularityValues","interval","week","month","HabitAddComponent","dismissFunc","getDefaultRegularityState","regularity","handleChange","handlerRegularityValue","handleDifficultyChange","newReg","handlerRegularityIntervalChange","debounce","times","printRegularityLabel","printDifficultyLabel","getUserSeeds","selectSeed","showModal","modalHabit","getAction","HabitsPage","addhabit","MenuHeaderWithProgress","ListAddInlineComponent","encodeURI","newList","saveList","TodoMenuItemButtonComponet","actonFunc","sun","star","routerLink","routerDirection","initialState","tagsOpen","lists","openLists","showDeleteListAlert","deleteList","l","TodoMenuListComponent","subTodoList","loadInitTodoLists","tagsList","subscribeByPropertyChange","loadInitTags","todolists","tagButtonClickHandler","listItem","side","tagItem","subHeader","getMenuState","appPages","home","ribbon","apps","lastComponent","basket","withRouter","useMenuHookFacade","contentId","appPage","autoHide","PartyEditComponent","PartyListItemComponent","userId","PartiesPage","subs","changes","editParty","saveParty","ChallengeMemberScoreHistory","printDay","dateString","score","reward","PartyMembersListComponent","printScore","self","canEditThisProject","addUser","ChallengeMembersItem","ChallengeAddActionNoteComponent","submitFunc","spellCheck","rows","memberDoc","showDoneAlert","showBiggesLooserAcceptAlert","showBiggesGainerAcceptAlert","ChallengeListItemComponent","currentDate","printDoneIcon","checkmarkDone","readerOutline","Cup","cafeOutline","Kilometer","walkOutline","Hour","alarmOutline","Minute","timerOutline","Dollar","cashOutline","looser","trendingDown","gainer","trendingUp","rocketOutline","closeModal","submitModal","submitChallengeActions","getCurrentAction","cAction","finished","future","acceptChallenge","printActionButtons","changeChallengeState","printAdminActionButtons","printEditFabButton","printSubmitFab","currentValue","label","checked","startingValue","ChallengeAddComponent","_challenge","handleNamedChange","handleMultiplierChange","chdiff","regularityValue","modalChallenge","challenges","ChallengeListComponent","loadChallenges","addChallenge","ch","hideChallengeModal","saveChallenge","getInitState","loadParty","PartyViewPage","idd","settingsId","SettingsPage","loadSettingsDoc","handleDocPropertyChange","view","Market","marketItems","buyItem","Routes","loading","dataReady","appStatus","setAppStatus","setStatusFunction","getIsAuthenticated","renewToken","getUsername","guest","auth","useAppStatus","newpath","when","getRoutes","Toasts","setMessage","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","App","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"m41CAAA,IAAIA,EAAM,CACT,kCAAmC,CAClC,IACA,IAED,iCAAkC,CACjC,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,iCAAkC,CACjC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,gCAAiC,CAChC,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,qBAAsB,CACrB,IACA,IAED,uCAAwC,CACvC,IACA,IAED,sCAAuC,CACtC,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,mCAAoC,CACnC,IACA,IAED,kCAAmC,CAClC,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,kCAAmC,CAClC,IACA,IAED,iCAAkC,CACjC,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,iCAAkC,CACjC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,+BA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","file":"static/js/main.dfcc6044.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet-ios.entry.js\": [\n\t\t374,\n\t\t37\n\t],\n\t\"./ion-action-sheet-md.entry.js\": [\n\t\t375,\n\t\t38\n\t],\n\t\"./ion-alert-ios.entry.js\": [\n\t\t376,\n\t\t21\n\t],\n\t\"./ion-alert-md.entry.js\": [\n\t\t377,\n\t\t22\n\t],\n\t\"./ion-app_8-ios.entry.js\": [\n\t\t378,\n\t\t10\n\t],\n\t\"./ion-app_8-md.entry.js\": [\n\t\t379,\n\t\t11\n\t],\n\t\"./ion-avatar_3-ios.entry.js\": [\n\t\t380,\n\t\t39\n\t],\n\t\"./ion-avatar_3-md.entry.js\": [\n\t\t381,\n\t\t40\n\t],\n\t\"./ion-back-button-ios.entry.js\": [\n\t\t382,\n\t\t41\n\t],\n\t\"./ion-back-button-md.entry.js\": [\n\t\t383,\n\t\t42\n\t],\n\t\"./ion-backdrop-ios.entry.js\": [\n\t\t384,\n\t\t79\n\t],\n\t\"./ion-backdrop-md.entry.js\": [\n\t\t385,\n\t\t80\n\t],\n\t\"./ion-button_2-ios.entry.js\": [\n\t\t386,\n\t\t43\n\t],\n\t\"./ion-button_2-md.entry.js\": [\n\t\t387,\n\t\t44\n\t],\n\t\"./ion-card_5-ios.entry.js\": [\n\t\t388,\n\t\t45\n\t],\n\t\"./ion-card_5-md.entry.js\": [\n\t\t389,\n\t\t46\n\t],\n\t\"./ion-checkbox-ios.entry.js\": [\n\t\t390,\n\t\t47\n\t],\n\t\"./ion-checkbox-md.entry.js\": [\n\t\t391,\n\t\t48\n\t],\n\t\"./ion-chip-ios.entry.js\": [\n\t\t392,\n\t\t49\n\t],\n\t\"./ion-chip-md.entry.js\": [\n\t\t393,\n\t\t50\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t394,\n\t\t81\n\t],\n\t\"./ion-datetime_3-ios.entry.js\": [\n\t\t395,\n\t\t17\n\t],\n\t\"./ion-datetime_3-md.entry.js\": [\n\t\t396,\n\t\t18\n\t],\n\t\"./ion-fab_3-ios.entry.js\": [\n\t\t397,\n\t\t51\n\t],\n\t\"./ion-fab_3-md.entry.js\": [\n\t\t398,\n\t\t52\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t399,\n\t\t82\n\t],\n\t\"./ion-infinite-scroll_2-ios.entry.js\": [\n\t\t400,\n\t\t35\n\t],\n\t\"./ion-infinite-scroll_2-md.entry.js\": [\n\t\t401,\n\t\t36\n\t],\n\t\"./ion-input-ios.entry.js\": [\n\t\t402,\n\t\t53\n\t],\n\t\"./ion-input-md.entry.js\": [\n\t\t403,\n\t\t54\n\t],\n\t\"./ion-item-option_3-ios.entry.js\": [\n\t\t404,\n\t\t55\n\t],\n\t\"./ion-item-option_3-md.entry.js\": [\n\t\t405,\n\t\t56\n\t],\n\t\"./ion-item_8-ios.entry.js\": [\n\t\t406,\n\t\t57\n\t],\n\t\"./ion-item_8-md.entry.js\": [\n\t\t407,\n\t\t58\n\t],\n\t\"./ion-loading-ios.entry.js\": [\n\t\t408,\n\t\t23\n\t],\n\t\"./ion-loading-md.entry.js\": [\n\t\t409,\n\t\t24\n\t],\n\t\"./ion-menu_3-ios.entry.js\": [\n\t\t410,\n\t\t59\n\t],\n\t\"./ion-menu_3-md.entry.js\": [\n\t\t411,\n\t\t60\n\t],\n\t\"./ion-modal-ios.entry.js\": [\n\t\t412,\n\t\t12\n\t],\n\t\"./ion-modal-md.entry.js\": [\n\t\t413,\n\t\t13\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t414,\n\t\t16\n\t],\n\t\"./ion-popover-ios.entry.js\": [\n\t\t415,\n\t\t14\n\t],\n\t\"./ion-popover-md.entry.js\": [\n\t\t416,\n\t\t15\n\t],\n\t\"./ion-progress-bar-ios.entry.js\": [\n\t\t417,\n\t\t61\n\t],\n\t\"./ion-progress-bar-md.entry.js\": [\n\t\t418,\n\t\t62\n\t],\n\t\"./ion-radio_2-ios.entry.js\": [\n\t\t419,\n\t\t63\n\t],\n\t\"./ion-radio_2-md.entry.js\": [\n\t\t420,\n\t\t64\n\t],\n\t\"./ion-range-ios.entry.js\": [\n\t\t421,\n\t\t65\n\t],\n\t\"./ion-range-md.entry.js\": [\n\t\t422,\n\t\t66\n\t],\n\t\"./ion-refresher_2-ios.entry.js\": [\n\t\t423,\n\t\t25\n\t],\n\t\"./ion-refresher_2-md.entry.js\": [\n\t\t424,\n\t\t26\n\t],\n\t\"./ion-reorder_2-ios.entry.js\": [\n\t\t425,\n\t\t33\n\t],\n\t\"./ion-reorder_2-md.entry.js\": [\n\t\t426,\n\t\t34\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t427,\n\t\t83\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t428,\n\t\t67\n\t],\n\t\"./ion-searchbar-ios.entry.js\": [\n\t\t429,\n\t\t27\n\t],\n\t\"./ion-searchbar-md.entry.js\": [\n\t\t430,\n\t\t28\n\t],\n\t\"./ion-segment_2-ios.entry.js\": [\n\t\t431,\n\t\t68\n\t],\n\t\"./ion-segment_2-md.entry.js\": [\n\t\t432,\n\t\t69\n\t],\n\t\"./ion-select_3-ios.entry.js\": [\n\t\t433,\n\t\t70\n\t],\n\t\"./ion-select_3-md.entry.js\": [\n\t\t434,\n\t\t71\n\t],\n\t\"./ion-slide_2-ios.entry.js\": [\n\t\t435,\n\t\t84\n\t],\n\t\"./ion-slide_2-md.entry.js\": [\n\t\t436,\n\t\t85\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t437,\n\t\t31\n\t],\n\t\"./ion-split-pane-ios.entry.js\": [\n\t\t438,\n\t\t86\n\t],\n\t\"./ion-split-pane-md.entry.js\": [\n\t\t439,\n\t\t87\n\t],\n\t\"./ion-tab-bar_2-ios.entry.js\": [\n\t\t440,\n\t\t72\n\t],\n\t\"./ion-tab-bar_2-md.entry.js\": [\n\t\t441,\n\t\t73\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t442,\n\t\t32\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t443,\n\t\t74\n\t],\n\t\"./ion-textarea-ios.entry.js\": [\n\t\t444,\n\t\t75\n\t],\n\t\"./ion-textarea-md.entry.js\": [\n\t\t445,\n\t\t76\n\t],\n\t\"./ion-toast-ios.entry.js\": [\n\t\t446,\n\t\t29\n\t],\n\t\"./ion-toast-md.entry.js\": [\n\t\t447,\n\t\t30\n\t],\n\t\"./ion-toggle-ios.entry.js\": [\n\t\t448,\n\t\t19\n\t],\n\t\"./ion-toggle-md.entry.js\": [\n\t\t449,\n\t\t20\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t450,\n\t\t88\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 193;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t454,\n\t\t96\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 195;\nmodule.exports = webpackAsyncContext;","export const TYPE_MARKET = 'mkt';\n\nexport const DEFAULT_SEED_NAME = 'starter';\n\n\nexport enum MarketItemType {\n  seed = 'seed',\n  building = 'building',\n  clothing = 'clothing'\n}\n\nexport const getMarketItem = (name, \n                              itemType: MarketItemType,\n                              price:number,\n                              difficulty:number = 0,\n                              pic:string = \"default.svg\"):MarketItem => {\n  return {\n    name,\n    id: 'mi.'+name,\n    itemType,\n    price,\n    pic,\n    difficulty,\n    quantity:1\n  }\n}\n\nexport const defaultSeed: MarketItem = \n  getMarketItem(DEFAULT_SEED_NAME, MarketItemType.seed, 1, 0, DEFAULT_SEED_NAME);\n\n\n\nexport const MarketItems: MarketItem[]  = [\n  getMarketItem('plant1', MarketItemType.seed, 1, 1, 'plant1'),\n  getMarketItem('plant2', MarketItemType.seed, 1, 1, 'plant2'),\n  getMarketItem('plant3', MarketItemType.seed, 1, 1, 'plant3'),\n\n]\n\n\n\nexport class MarketItem  {\n  name!: string;\n  id!: string;\n  itemType!: MarketItemType;\n  price!: number;\n  difficulty: number = 0;\n  pic: string = 'default.svg';\n  quantity: number = 0;\n\n  constructor(values: Object = {}) {\n    Object.assign(this, values);\n    if(!values['itemType']) throw new Error('MarketItem Doc item type required');\n    if(!values['id']) throw new Error('MarketItem Doc id required');\n    if(!values['name']) throw new Error('MarketItem Doc name required');\n    if(!values['price']) throw new Error('MarketItem Doc price required');\n  }\n}\n","\nimport { BehaviorSubject } from 'rxjs';\n\n\n\nexport class LoadingService {\n  private _loading: boolean = false;\n  \n\n  public loading$ = new BehaviorSubject({show: this._loading, msg: 'Loading...'});\n\n  showLoading(msg = \"Loading...\") {\n    this._loading = true;\n    this.loading$.next({show:true, msg});\n  }\n\n  hideLoading() {\n    this._loading = false;\n    this.loading$.next({show:false, msg:''});\n  }\n\n  public get loading(): boolean {\n    return this._loading;\n  }\n\n\n  startLoadingTimer() {\n\n  }\n\n}\nexport const loadingService = new LoadingService();\n\n\n","import React, { useState, useEffect } from 'react';\nimport { IonLoading } from '@ionic/react';\nimport { Subscription } from 'rxjs';\nimport { loadingService } from './loadingService';\n\nexport const Loading: React.FC = () => {\n  const [state, setState] = useState({show:false, msg: 'Loading...'});\n\n  useEffect(() => {\n    const subscriptions: Subscription[] = [\n      loadingService.loading$.subscribe(res =>{\n        setState({show: res.show, msg: res.msg});\n      })\n    ];\n    return () => { subscriptions.map(it => it.unsubscribe()) };\n  },[]);\n\n  \n  //onDidDismiss={() => setShowLoading(false)}\n  return (\n      <IonLoading\n        isOpen={state.show}\n        message={state.msg}\n      />\n  );\n};","import React from 'react';\nimport { IonHeader, IonToolbar, IonPage, IonTitle, IonContent, IonLabel } from '@ionic/react';\n\n\n\nconst UserPage: React.FC = () => {\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>User Page</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonLabel>User</IonLabel>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default UserPage;\n","export const PROJECT_SERVICE = '';\nexport const PROJECT_INDEX_SERVICE = 'ch';\nexport const SYSTEM_DOC = 'sys';\n\nexport const LASTCHAR = String.fromCharCode(65535);\nexport const DIV = '.';\nexport const DOUBLE_DIV = '..';\n\nexport class Doc {\n  public id: string|undefined = undefined;\n  name: string = '';\n  public deleted?: boolean;\n  public created?: number = Date.now();\n  public updated?: number = Date.now();\n  public creator?: string;\n  public type: string = 'doc';\n  public dirty?: number = 0;\n  public rev = 1;\n  constructor(values: Object = {}) {\n      Object.assign(this, values);\n  }\n\n}\n\nexport class ProjectItem extends Doc {\n  public id:string;\n  public name: string = '';\n  public note?: string;\n  public access = [];\n\n  constructor(values: Object = {}) {\n    super();\n    Object.assign(this, values);\n    this.id = values['id'];\n    if(!this.id)\n      this.id = ''; \n  }\n}\n\n\n\n\n\n\n\n\n\n","\nimport { Doc } from '../../modules/data/models'\nimport { GamifyRewards } from './utilsHabits'; \nimport { DEFAULT_SEED_NAME, MarketItem } from '../../modules/market/models';\n\nexport const TYPE_HABBIT = 'hab';\nexport const MOMENT_DATE_FORMAT = 'YYYYMMDD';\n\nexport enum habitStage {\n  'finished',\n  'current',\n  'future',\n  'resting'\n}\n\nexport enum habitIntervals {\n  day = 'day',\n  week = 'week',\n  month = 'month'\n}\n\nexport enum habitDifficulty {\n  trivial, easy, medium, hard, extreme\n}\n\nexport const printDifficulty = (hab:habitDifficulty):string => {\n  switch(hab) {\n    case habitDifficulty.trivial:\n      return 'trivial'; // , easy peasy lemon squeezy\n    case habitDifficulty.easy:\n      return 'easy'; //Piece of Cake , Smooth Sailin'\n    case habitDifficulty.medium:\n      return 'medium'; //Let's Go\n    case habitDifficulty.hard:\n      return 'hard'; //No Pain, No Gain\n    case habitDifficulty.extreme:\n      return 'extreme'; //Death Wish\n  }\n}\n\n\nexport interface HabitAction {\n  value: number, \n  date:string, \n  reward?: GamifyRewards,\n}\n\nexport class Habit extends Doc {\n  name: string = 'New habit';\n  note?: string;\n  type:string = TYPE_HABBIT;\n  stage: habitStage = habitStage.current;\n  difficulty:habitDifficulty = habitDifficulty.medium;\n  //regularity\n  regularityInterval:habitIntervals = habitIntervals.day;\n  regularityIntervalGoal: number = 1;\n  regularityEachDayGoal: number = 1;\n\n  actions: {[key: string]: HabitAction } = {};\n  //streaks\n  //member info\n  lastCalculatedDate?:string;\n  currentTimeperiedStreak: number = 0;\n  currentTimeperiodLastDay?: string;\n\n  currentStreak: number = 0;\n  biggestStreak: number = 0;\n\n  newRewards?: GamifyRewards;\n\n  seedItem?: MarketItem;\n  plantName: string = DEFAULT_SEED_NAME;\n  plantLevel: number = 0;\n  plantExp: number = 0;\n  plantNextLevelExp: number = 0;\n  plantDifficultyLevel: number = 0;\n  \n  constructor(values: Object = {}) {\n    super()\n    Object.assign(this, values);\n  }\n}\n\n\n","import  ulog from 'ulog';\nulog.level = ulog.TRACE;\n\nexport const FIRST_DAY_OF_WEEK = 'Monday';\n\n\n\nconst dev = {\n  \n  \n}\n\nconst prod = {\n  SYNC_SERVER: 'https://auth.mlflabs.com',\n  AUTH_API_URL: 'https://auth.mlflabs.com',\n}\nconst detail = process.env.REACT_APP_STAGE === 'production' ? prod: dev;\nexport const env = {...{\n  APP_ID: 'hv',\n  //myenvoy settings\n  ACCESS_META_KEY: 'access',\n  SERVER_ACCESS_META_KEY: 'ch',\n  MOMENT_DATE_FORMAT: 'YYYYMMDD',\n\n  //gamify \n  GAMIFY_HABIT_GOLD_BASE_REWARD:  5,\n  GAMIFY_HABIT_EXPERIENCE_BASE_REWARD:  2,\n\n\n  HABIT_REWARDS_GOLD_BASE: 5,\n  HABIT_REWARDS_GOLD_PERCENTAGE_INCREASE: 0.2,\n  HABIT_REWARDS_EXPERIENCE_BASE: 3,\n  HABIT_REWARDS_EXPERIENCE_PERCENTAGE_INCREASE: 0.2,\n  HABIT_REWARDS_NEW_GOLD: 5,\n  HABIT_REWARDS_NEW_EXPERIENCE: 2,\n\n\n  TODO_NEW_GOLD_REWARDS: 1,\n  TODO_DONE_GOLD_REWARDS: 3,\n  TODO_NEW_EXPERIENCE_REWARDS: 2,\n  TODO_DONE_EXPERIENCE_REWARDS: 5,\n\n\n  //messages\n  MESSAGE_DURATION: 2000,\n\n  //Auth\n  TOKEN_EXPIRATION: 300, // how many days\n  SYNC_SERVER: 'https://auth.mlflabs.com',\n  AUTH_API_URL: 'https://auth.mlflabs.com',\n  //SYNC_SERVER: 'http://localhost:3002',\n  //AUTH_API_URL: 'http://localhost:3002',\n}, ...detail}\n","import { Todo } from \"../../pages/todo/models\";\nimport moment from 'moment';\nimport { env } from \"../../env\";\n\n\nexport const calculateLevelExperience = (level:number): number => {\n  let exp = 0;\n    for(let x = 1; x < level; x++){\n      exp += Math.floor((x+100) * Math.pow(2,(x/7)))\n    }\n  return Math.floor(exp/4);\n}\n\n//diff 1-5\nexport const calculatePlantExperience = (level:number, diff = 0): number => {\n  let exp = 0;\n  const d = diff * diff * 10;\n    for(let x = 1; x < level; x++){\n      exp += Math.floor((x+100+d) * Math.pow(2,(x/7)))\n    }\n  return Math.floor(exp/4) + 2;\n}\n\n\nexport const calculateDoneTodoGold = (todo:Todo): number => {\n  let days = 0;\n  //how many days past\n  if(todo.date)\n    days = moment(todo.date).diff(moment(),'hour');\n  const rew = env.TODO_DONE_GOLD_REWARDS + (env.HABIT_REWARDS_GOLD_PERCENTAGE_INCREASE * days);\n  return Math.floor(rew);\n}\n\nexport const calculateDoneTodoExperience = (todo:Todo): number => {\n  let days = 0;\n  //how many days past\n  if(todo.date)\n    days = moment(todo.date).diff(moment(),'hour');\n  const rew =env.TODO_DONE_EXPERIENCE_REWARDS + \n    (env.HABIT_REWARDS_EXPERIENCE_PERCENTAGE_INCREASE * days);\n  return Math.floor(rew);\n\n\n}\n\n\n","import { Habit, MOMENT_DATE_FORMAT, HabitAction } from './models';\nimport moment from 'moment';\nimport { FIRST_DAY_OF_WEEK, env } from '../../env';\nimport ulog from 'ulog';\nimport { calculatePlantExperience } from '../../modules/gamify/utilsGamify';\n\nconst log = ulog('utils');\n\nexport interface GamifyRewards {\n  gold:number,\n  experience: number,\n  items:any[]\n}\n\nexport const mergeRewards = (rewards1: GamifyRewards, \n                             rewards2: GamifyRewards): GamifyRewards => {\n  return Object.assign({\n    gold: rewards1.gold + rewards2.gold,\n    experience: rewards1.experience + rewards2.experience,\n    items: [...rewards1.items, ...rewards2.items]\n  });\n}\n\n\n\nexport const getInitGamifyRewards =  (base?:GamifyRewards):GamifyRewards =>  {\n  return {...{ gold: 0, experience: 0, items:[] }, ...base};\n}\n\n\nconst sortByDate = (a, b) =>{\n  if(a.date > b.date) return 1;\n  return -1;\n}\n\nexport const calculateCurrentStreak = (habit: Habit, actions: HabitAction[]) => {\n    //loop through actions and add up rewards\n    let r ={habit: Object.assign(habit), rewards: getInitGamifyRewards()};\n    let rewards: GamifyRewards = getInitGamifyRewards();\n    actions.sort(sortByDate).forEach(action => {\n      //make sure we don't have future day, or past last calculated date day\n      if(r.habit.lastCalculatedDate){\n        if(moment(action.date).isBefore(moment(r.habit.lastCalculatedDate)))\n          throw new Error('Action date is too old, can not modify this action');\n        if(moment(action.date).isSame(moment(r.habit.lastCalculatedDate)))\n          throw new Error('Action for this date already submitted.');\n      }\n      if(moment(action.date).isAfter(moment()))\n        throw new Error('Action date is in the future, cannot modify this action');\n      \n      if(r.habit.regularityInterval === 'day')\n        r = calculateDailyChallengeStreak(r.habit, action)\n      else if(habit.regularityInterval === 'week')\n        r = calculateWeeklyChallengeStreak(r.habit, action)\n      else if(r.habit.regularityInterval === 'month')\n        r = calculateMonthlyChallengeStreak(r.habit, action)\n      else {\n        throw new Error('Challenge has incorrect regularityInterval, ' + \n          r.habit.regularityInterval )\n      }\n      rewards = mergeRewards(r.rewards, rewards);\n    });\n    const newHabit = addPlantExperience(r.habit, r.rewards);\n    console.log(rewards, newHabit);\n    return {habit: newHabit, rewards};\n}\n\nconst addPlantExperience = (habit: Habit, rewards: GamifyRewards): Habit => {\n  const h = Object.assign(habit);\n  h.plantExp += rewards.experience;\n  if(h.plantExp >= h.plantNextLevelExp){\n    h.plantLevel++;\n    h.plantExp = h.plantExp - h.plantNextLevelExp;\n    h.plantNextLevelExp = calculatePlantExperience(h.plantLevel,h.plantDifficultyLevel);\n  }\n  return h\n}\n\n\n//from action and back\nconst calculateDailyChallengeStreak = (habit: Habit, action: HabitAction) => {\n  \n\n  if(!habit.lastCalculatedDate) {\n    habit.actions = {};\n    habit.lastCalculatedDate = moment(action.date).subtract(1,'d').format(MOMENT_DATE_FORMAT);\n    habit.biggestStreak = 0;\n    habit.currentStreak = 0;\n  }\n\n  habit.actions[action.date] = action;\n\n  let currentAction;\n  let currentDateMoment = moment(habit.lastCalculatedDate).add(1, 'd');\n\n  //run this after going action/lastcalculateddate logic\n  while(currentDateMoment.isSameOrBefore(moment(action.date))) {\n    currentAction = habit.actions[currentDateMoment.format(MOMENT_DATE_FORMAT)];\n\n    //see if its null, no action or if contains values\n    if(currentAction) {\n      //do we have a value\n      if(currentAction.value >= habit.regularityEachDayGoal){\n        //success\n        habit.currentStreak++;\n      }\n      else {\n        //we have an action, but not a success\n        habit.currentStreak = 0;\n      }\n    }\n    else {\n        //currentAction is null, failed\n        habit.currentStreak = 0;\n    }\n    if(habit.currentStreak > habit.biggestStreak)\n      habit.biggestStreak = habit.currentStreak;\n\n    currentDateMoment.add(1, 'day');\n  }\n\n  habit.lastCalculatedDate = action.date;\n\n  //calculate rewards\n  let rewards = getInitGamifyRewards();\n  if(habit.currentStreak === 0){\n    rewards.gold = Math.floor(env.GAMIFY_HABIT_GOLD_BASE_REWARD * \n                        (action.value / habit.regularityEachDayGoal));\n    rewards.experience = Math.floor(env.GAMIFY_HABIT_EXPERIENCE_BASE_REWARD * \n                        (action.value / habit.regularityEachDayGoal));\n  }\n  else {\n    rewards.gold = calculateGoldByStreak(habit.currentStreak, \n                                          habit.difficulty,\n                                          env.GAMIFY_HABIT_GOLD_BASE_REWARD);\n    rewards.experience = calculateExperienceByStreak(habit.currentStreak,\n                                          habit.difficulty,\n                                          env.GAMIFY_HABIT_EXPERIENCE_BASE_REWARD);\n  }\n  return {habit: Object.assign(habit), rewards};\n}\n\n\n\nconst analizeDay = (currentAction: HabitAction, \n                     habit:Habit):{habit:Habit, \n                                   rewards:GamifyRewards} => {\n   //see if its null, no action or if contains values\n   let rewards = getInitGamifyRewards();\n   if(currentAction) {\n    //do we have a value\n    if(currentAction.value >= habit.regularityEachDayGoal){\n      //success\n      if(habit.currentTimeperiedStreak < habit.regularityIntervalGoal){\n        habit.currentTimeperiedStreak++;\n        habit.currentStreak++;\n        rewards.gold = calculateGoldByStreak(habit.currentStreak, \n          habit.difficulty,\n          env.GAMIFY_HABIT_GOLD_BASE_REWARD);\n        rewards.experience = calculateExperienceByStreak(habit.currentStreak,\n          habit.difficulty,\n          env.GAMIFY_HABIT_EXPERIENCE_BASE_REWARD);\n      }\n      else\n      {\n        //we made it, but we are over the goal value, just give basic bonus\n        //make it half of even a non streak one\n        rewards.gold = Math.floor(env.GAMIFY_HABIT_GOLD_BASE_REWARD/2);\n        rewards.experience = Math.floor(env.GAMIFY_HABIT_EXPERIENCE_BASE_REWARD/1.5);\n      }\n    } \n    else {\n      //we didn't make it this day, just give a basic, fraction of base reward\n      rewards.gold = calculateGoldByStreak(habit.currentStreak, \n        habit.difficulty,\n        env.GAMIFY_HABIT_GOLD_BASE_REWARD);\n      rewards.experience = calculateExperienceByStreak(habit.currentStreak,\n        habit.difficulty,\n        env.GAMIFY_HABIT_EXPERIENCE_BASE_REWARD);\n    }\n  }\n   \n  if(habit.currentStreak > habit.biggestStreak)\n    habit.biggestStreak = habit.currentStreak;\n  \n  return {habit: Object.assign(habit), rewards};\n}\n\n//from action and back\nconst calculateMonthlyChallengeStreak = (h: Habit, action: HabitAction) => {\n  let habit = Object.assign(h);\n  if(!habit.lastCalculatedDate) {\n    habit.actions = {};\n    habit.lastCalculatedDate = moment(action.date).subtract(1,'d').format(MOMENT_DATE_FORMAT);\n    habit.biggestStreak = 0;\n    habit.currentStreak = 0;\n    habit.currentTimeperiedStreak = 0;\n    habit.currentTimeperiodLastDay = moment(habit.lastCalculatedDate).date(1)\n                                        .add(1, 'month').format(MOMENT_DATE_FORMAT);\n  }\n\n  habit.actions[action.date] = action;\n\n  let currentAction;\n\n  let nextTimeperiodFirstDay = moment(habit.currentTimeperiodLastDay);\n  let currentDateMoment = moment(habit.lastCalculatedDate).add(1, 'd');\n  let rewards = getInitGamifyRewards();\n  //run this after going action/lastcalculateddate logic\n  while(currentDateMoment.isSameOrBefore(moment(action.date))) {\n    currentAction = habit.actions[currentDateMoment.format(MOMENT_DATE_FORMAT)];\n\n    //are we in the same week\n    if(currentDateMoment.isBefore(nextTimeperiodFirstDay)) {\n      const res = analizeDay(currentAction, habit)\n      habit = res.habit;\n      rewards = res.rewards;\n\n    }\n    else{ \n      //starting new timeperiod\n      //see if we made it last period\n      if(habit.currentTimeperiedStreak < habit.regularityIntervalGoal){\n        //we didn't make it, clear the streak\n        habit.currentStreak = 0;\n      }\n      nextTimeperiodFirstDay.add(1, 'month');\n      habit.currentTimeperiodLastDay = nextTimeperiodFirstDay.format(MOMENT_DATE_FORMAT);\n      //if we are before action date, its an error, too big of time span\n      if(currentDateMoment.isAfter(nextTimeperiodFirstDay)){\n        throw new Error('Action dates are too much apart.');\n      }\n      habit.currentTimeperiedStreak = 0;\n      const res = analizeDay(currentAction, habit);\n      habit = res.habit;\n      rewards = res.rewards;\n    }\n    currentDateMoment.add(1, 'day');\n  }\n\n  habit.lastCalculatedDate = action.date;\n  return {habit, rewards};\n}\n\n\n\nconst calculateWeeklyChallengeStreak = (h:Habit, action:HabitAction) => {\n  let habit = h;\n  if(!habit.lastCalculatedDate) {\n    habit.lastCalculatedDate = moment(action.date).subtract(1,'d').format(MOMENT_DATE_FORMAT);\n    habit.biggestStreak = 0;\n    habit.currentStreak = 0;\n    habit.currentTimeperiedStreak = 0;\n    habit.currentTimeperiodLastDay = moment(habit.lastCalculatedDate).day(FIRST_DAY_OF_WEEK)\n                                          .add(1, 'week').format(MOMENT_DATE_FORMAT);\n                                          habit.actions = {};\n  }\n\n  habit.actions[action.date] = action;\n\n  let currentAction;\n\n  let nextWeekFirstDay = moment(habit.currentTimeperiodLastDay);\n  let currentDateMoment = moment(habit.lastCalculatedDate).add(1, 'd');\n  let rewards = getInitGamifyRewards();\n  //run this after going action/lastcalculateddate logic\n  while(currentDateMoment.isSameOrBefore(moment(action.date))) {\n    currentAction = habit.actions[currentDateMoment.format(MOMENT_DATE_FORMAT)];\n\n    //are we in the same week\n    if(currentDateMoment.isBefore(nextWeekFirstDay)) {\n      const res = analizeDay(currentAction, habit)\n      rewards = res.rewards;\n      habit = res.habit;\n    }\n    else{ \n      //starting new timeperiod\n      //see if we made it last period\n      if(habit.currentTimeperiedStreak < habit.regularityIntervalGoal){\n        //we didn't make it, clear the streak\n        habit.currentStreak = 0;\n      }\n      nextWeekFirstDay.add(1, 'week');\n      habit.currentTimeperiodLastDay = nextWeekFirstDay.format(MOMENT_DATE_FORMAT);\n      //if we are before action date, its an error, too big of time span\n      if(currentDateMoment.isAfter(nextWeekFirstDay)){\n        throw new Error('Action dates are too much apart.');\n      }\n      habit.currentTimeperiedStreak = 0;\n      const res = analizeDay(currentAction, habit);\n      habit = res.habit;\n      rewards = res.rewards;\n    }\n    currentDateMoment.add(1, 'day');\n  }\n\n  habit.lastCalculatedDate = action.date;\n  return {habit, rewards};\n}\n\n\nconst calculateExperienceByStreak = (streak, difficulty,  baseXP) => {\n  let exponent = 0.7 + difficulty/5;\n  return Math.floor(baseXP + (streak * exponent))\n  \n}\n\nconst calculateGoldByStreak = (streak, difficulty,  baseXP) => {\n  let exponent = 1 + difficulty/5;\n  return Math.floor(baseXP + (streak * exponent))\n  \n}\n\n","import { PROJECT_SERVICE, DIV, PROJECT_INDEX_SERVICE, ProjectItem, Doc } from './models';\nimport shortid from 'shortid';\nimport { env } from '../../env';\n\nexport const TYPE_SETTINGS = 'set';\n\nexport function generateUserChannelId(userid): string {\n  return 'u' + env.APP_ID + userid;\n}\n\nexport function getDefaultProject(userid): ProjectItem {\n  const uuid = 'u' + env.APP_ID + userid;\n  return {\n    id: generateProjectUUID(uuid, ''),\n    rev: 1,\n    name: 'default',\n    access:[],\n    type: TYPE_SETTINGS,\n    updated: 0, //Date.now(),\n    [env.ACCESS_META_KEY]: genrateMetaData(userid), \n  }\n}\n\nexport function generateUUID():string {\n  let id;\n  let ok = false;\n  while (!ok) {\n    id = shortid.generate();\n    if(id.substring(0,1)!== '_' && id.substring(0,1)!== '-')\n      ok = true;\n  }\n\n  return id;\n}\n\nexport function isThisUserProject(id:string|undefined, userid): boolean {\n  return (getChannelFromProjectId(id) === generateUserChannelId(userid));\n}\n\nexport function getChannelNameFromId(id:string|undefined) {\n  if(id === undefined) throw new Error('Id cannot be undefined');\n  return id.split(DIV)[0];\n}\n\nexport function getProjectChildId(id:string|undefined): string {\n  if(id === undefined) throw new Error('Id can not be undefined');\n  let length = PROJECT_INDEX_SERVICE.length + DIV.length;\n  return id.substring(0, id.length-length);\n}\n\nexport function getChannelFromProjectId(id: string|undefined):string {\n  return getProjectChildId(id);\n}\n\nexport function generateProjectUUID(id = generateUUID(), app = env.APP_ID):string {\n  return app + id +  DIV + PROJECT_INDEX_SERVICE;\n}\n\nexport function generateProjectChildId(projectId: string, type: string, id = generateUUID()):string {\n  return PROJECT_SERVICE+ DIV + projectId.split(DIV)[1] + DIV + type +\n          DIV + id;\n}\n\nexport function generateCollectionId(projectid: string, collection, id = generateUUID()): string {\n  //eliminate dots from id, not allowed\n  id = id.replace('.','');\n  \n  if(projectid === undefined) throw new Error(\"Project can't be underfined\");\n  const length = PROJECT_INDEX_SERVICE.length;\n  return projectid.substring(0, projectid.length-length)+collection+ DIV +id; \n}\n\nexport const waitMS = (ms) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n};\n\n\nexport function saveIntoArray(item: Object, ary: Array<any> = [], idKey: string = 'id'): Array<any> {\n  let i = getIndexById(item[idKey], ary, idKey);\n  if (i === -1) {\n    i = ary.length;\n  }\n  return [...ary.slice(0, i),\n  Object.assign({}, item),\n  ...ary.slice(i + 1)];\n}\n\nexport function genrateMetaData(userid:string):string[]{\n    return [ 'u'+ env.APP_ID + userid,]; \n}\n\n\n\nexport function getIndexById(id: string, ary: any, idKey: string = 'id'): number {\n  for (let i = 0; i < ary.length; i++) {\n    if (id === ary[i][idKey]) {\n      return i;\n    }\n  }\n  // if we don't have a match return null\n  return -1;\n}\n\nexport const extractTypeCollectionFromDocId = (id) => {\n  return id.split(DIV)[2];\n}\n\nexport const extractChannelNameFromDocId = (id) => {\n  return id.split(DIV)[0];\n}\n\n\n//rights functions\n/*\n    Rights, each digit represents different right\n    0.  0 - Not admin 1- Admin, can change everything\n    1.  (Project item) 0 - can't see, 1 - can see, 2 - can edit\n    2.  (Project children) 0 - can't see, 1 - can see own, 2 - can see all items\n    3.  (Project children edit) 0 -can't edit, 1 can edit/make own, 2 can edit all \n*/\n\nexport const getDocumentRights = (id: string|undefined, user):string|undefined => {\n  const channel = getChannelNameFromId(id);\n  return user[env.ACCESS_META_KEY][channel];\n}\n\nexport const canEditProject = (id, user): boolean => {\n  const rights = getDocumentRights(id, user);\n  if(!rights) return false;\n  return canEditProjectByRights(rights);\n} \n\nexport const canEditProjectByRights = (rights: string): boolean => {\n  if(rights.substring(0,1) === '1') return true;\n  if(rights.substring(1,2) === '2') return true;\n  return false;\n}\n\n\nexport const canEditDoc= (doc:Doc, user): boolean => {\n  const rights = getDocumentRights(doc.id, user);\n  if(!rights) return false;\n  return canEditItemByRights(rights, doc.creator === user.id);\n} \n\nexport const canEditOwnedItemByRights = (rights: string): boolean => {\n  if(rights.substring(0,1) === '1') return true;\n  if(rights.substring(3,4) === '1') return true;\n  if(rights.substring(3,4) === '2') return true;\n  return false;\n}\n\nexport const canEditOthersItemByRights = (rights: string): boolean => {\n  if(rights.substring(0,1) === '1') return true;\n  if(rights.substring(3,4) === '2') return true;\n  return false;\n}\n\nexport const canEditItemByRights = (rights: string, myItem:boolean): boolean => {\n  return (myItem)? canEditOwnedItemByRights(rights) : canEditOthersItemByRights(rights);\n}\n\n","import { Doc } from '../../modules/data/models'\nimport { GamifyRewards, getInitGamifyRewards } from '../habits/utilsHabits';\nimport { getProjectChildId } from '../../modules/data/utilsData';\n\nexport const TYPE_TODO = 'todo';\nexport const TYPE_TODO_LIST = 'todolist';\nexport const TYPE_TODO_FOLDER = 'todoFolder';\nexport const TYPE_TODO_TAG = 'todoTag';\n\nexport const FOLDER_BASE_POSITION = 'base';\n\nexport const getDefaultTodoList = (name:string = 'tasks', projectid:string):TodoList => {\n  const project = getProjectChildId(projectid);\n  return new TodoList({\n    id: undefined,\n    folder: undefined,\n    type: TYPE_TODO_LIST,\n    icon: 'check',\n    secondaryType: TYPE_TODO_LIST,\n    name,\n    fullname: project + name,\n  })\n}\n\nexport class TodoList extends Doc {\n  folder: string = FOLDER_BASE_POSITION;\n  type: string = TYPE_TODO_LIST;\n  project?: string;\n  icon?:string;\n  color?:string;\n  _new?: boolean;\n  fullname:string;\n  secondaryType:'todolist'|'todoFolder'  = TYPE_TODO_LIST\n\n  constructor(values: Object = {}) {\n    super();\n    Object.assign(this, values);\n    this.fullname = values['fullname'];\n  }\n}\n\nexport const getDefaultTodoTag = (name:string = 'tasks', icon:string ='check'):TodoTag => {\n  return new TodoTag({\n    id: undefined,\n    type: TYPE_TODO_TAG,\n    icon,\n    name,\n  })\n}\n\nexport class TodoTag extends Doc {\n  type: string = TYPE_TODO_TAG;\n  icon?:string;\n  animatedIcon?:any;\n  color?:string;\n  _new?: boolean;\n  constructor(values: Object = {}) {\n    super();\n    Object.assign(this, values);\n    //this.fullname = values['fullname'];\n  }\n}\n\nexport class Todo extends Doc {\n  note?: string;\n  type: string = TYPE_TODO;\n\n  done: boolean;\n  date: number|null;\n  list: string = 'default';\n  tags: string[];\n\n\n  _new?: boolean; // for saving new docs, temp solution\n    //sub tasks\n  parent: string | null;\n  subTodos: string[];\n  showSubTodos: boolean;\n  showDone: boolean;\n\n  newRewards: GamifyRewards;\n  doneRewards: GamifyRewards;\n  \n  constructor(values: Object = {}) {\n    super();\n    this.done = false;\n    this.date = null;\n    this.tags = [];\n    this.parent = null;\n    this.subTodos = [];\n\n    this.showSubTodos = false;\n    this.showDone = false;\n\n    this.newRewards = getInitGamifyRewards();\n    this.doneRewards = getInitGamifyRewards();\n    \n    Object.assign(this, values);\n\n  }\n}","import React, { useState } from 'react'\nimport Lottie from 'react-lottie';\nimport './default.css'\n\nexport const waitMS = (ms: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n};\n\n\nfunction AnimatedIcon({iconsvg, actionFunc}:\n    {iconsvg:any, actionFunc:Function}) {\n  const [state, setState] = useState({isStopped:true, isPaused:true})\n\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: false, \n    render: 'svg',\n    animationData: iconsvg,\n    rendererSettings: {\n      clearCanvas: true,\n      scaleMode: 'noScale',\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  }; \n\n  const actionHandler = async() => {\n    setState({isStopped:false, isPaused:false});\n    \n\n    await waitMS(1000);\n    actionFunc();\n    setState({isStopped:true, isPaused:true});\n  }\n\n  return (\n    <div onClick={() => actionHandler()} className =\"animatedfunction\">\n      <Lottie  options={defaultOptions}\n          height={25}\n          width={25}\n          isStopped={state.isPaused}\n          isPaused={state.isStopped}/>\n    </div>\n  )\n}\n\nexport default AnimatedIcon;\n","import { Doc, ProjectItem } from \"../data/models\";\n\nexport const TYPE_PARTY = 'party';\n\nexport enum ChallengeState {\n  finished = 'finished',\n  current = 'current',\n  future = 'future',\n  waiting = 'waiting',\n  resting = 'resting',\n}\n\nexport enum ChallengeType {\n  checkin = 'Check-In',\n  value = 'Value',\n  note = 'Note',\n  quizz = 'Quizz',\n  looser = 'Biggest Looser',\n  gainer = 'Biggest Gainer'\n}\n\nexport enum ChallengeTypeUnit {\n  Cup = 'Cup',\n  Dollar = \"Dollar\",\n  Page = 'Page',\n  Minute = 'Minute',\n  Hour = 'Hour',\n  Meter = 'Meter',\n  Kilometer = 'Kilometer',\n  Other = 'Other'\n}\n\n\nexport enum ChallengeDifficulty {\n  trivial, easy, medium, hard, extreme\n}\n\nexport enum ChallengeIntervals {\n  day = 'day',\n  week = 'week',\n  month = 'month'\n}\n\nexport interface PartyMember {\n  id: string,\n  username: string,\n  rights: string,\n  score: {reward: number},\n  scoreHistory: {[key:string]: {reward:number}};\n}\n\nexport interface ChallengeRewards {\n  value: number,\n  item?: any,\n}\n\nexport interface ChallengeAction {\n  date: string,\n  value: number, \n  reward: ChallengeRewards,\n  data?: any,\n}\nexport interface ChallengeMember {\n  id: string,\n  username: string,\n  score: {reward: number},\n  joinDate: number,\n  actions: { [key:string]: ChallengeAction },\n  lastCalculatedDate?: string,\n  currentStreak?: number,\n  biggestStreak?: number,\n}\n\n\nexport class PartyProject extends ProjectItem {\n  type: string = TYPE_PARTY\n  secondaryType: string = 'project'\n  creator: string = '';\n  dirty: number = 0;\n  members: PartyMember[]  = []\n\n  moneyTypeSingle: string = 'Ruby';\n  moneyTypeMultiple: string =  'Rubies';\n  moneyColor: string = '#ff0000'\n\n\n  constructor(values: Object = {}) {\n    super()\n    Object.assign(this, values);\n  }\n}\n\nexport class Challenge extends Doc {\n  name: string = 'New Challenge';\n  note?: string;\n  type:string = TYPE_PARTY;\n  access: string = ''\n  secondaryType: string = 'challenge'\n  state: ChallengeState = ChallengeState.waiting;\n  difficulty:ChallengeDifficulty = ChallengeDifficulty.medium;\n  //regularity\n  regularityInterval:ChallengeIntervals = ChallengeIntervals.day;\n  regularityIntervalGoal: number = 1;\n  regularityEachDayGoal: number = 1;\n\n  //type\n  challengeType: ChallengeType = ChallengeType.checkin;\n  challengeTypeUnit: ChallengeTypeUnit = ChallengeTypeUnit.Other;\n  chalengeTypeOther: string = '';\n  challengePointMultiplier: number = 1;\n\n  chalengeTypeNoteVote: boolean = false;\n\n  //members\n  members: ChallengeMember[]  = []\n\n  constructor(values: Object = {}) {\n    super()\n    Object.assign(this, values);\n  }\n}\n","import Dexie from 'dexie';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { DataChangeEvent } from '../dataService';\nimport { Subscription } from 'rxjs';\nimport { env } from '../../../env';\nimport ulog from 'ulog';\n\nconst log = ulog('dexie');\n\nexport interface DatabaseScheme {\n  name: string,\n  version: number,\n  tables: TableScheme[],\n}\n\nexport interface TableScheme {\n  name: string,\n  columns: string,\n  sync: boolean,\n}\n\n\nexport default class DexieAdapter {\n\n  private db;\n  private _ready = false;\n  public ready$ = new BehaviorSubject(this._ready);\n  private _subscriptions:Subscription[] = [];\n\n  public changes$ = new Subject<DataChangeEvent>();\n\n  constructor(scheme: DatabaseScheme) {\n    this.db = new Dexie(env.APP_ID +  scheme.name+ '_dexie');\n    const stores = {};\n    scheme.tables.forEach(t => {\n      stores[t.name] = t.columns;\n    });\n    this.db.version(scheme.version).stores(stores);\n    this._init();\n  }\n\n  private async _init() {\n    try {\n      await this.db.open();\n      this._ready = true;\n      this.ready$.next(true);\n    }\n    catch(e) {\n      log.error(e);\n    }\n  }\n\n  public async destroy() {\n    this._subscriptions.forEach(sub => {\n      if(sub)sub.unsubscribe();\n    })\n  }\n\n  public async getDoc(id: string, collection: string): Promise<any> {\n    //const res = await this.db[collection].where('id').equals(id).first();\n    const res = await this.db[collection].get({id});\n    if(res) return res;\n    return null;\n  }\n\n  public async getBulk(ids: string[], collection: string): Promise<any> {\n    const res = await this.db[collection].bulkGet(ids);\n    return res.filter(doc => doc !== undefined)\n  }\n\n  public async queryByProperty(field: string, operator: string, \n      value: any, collection: string): Promise<any> {\n    switch(operator) {\n      case 'equals':\n        const docs = await this.db[collection].where(field).equals(value).toArray();\n        return docs;\n      case 'startsWith':\n        return await this.db[collection].where(field).startsWith(value).toArray();\n      case 'notEqual':\n        return await this.db[collection].where(field).notEqual(value).toArray();\n      default:\n        throw new Error('Missing proper operator, given: '+ operator);\n    }\n  }\n\n  public async getProjectItems(projectid: string, collection: string) {\n    const res = await this.db[collection].where('id').startsWith(projectid).toArray();\n    return res;\n  }\n\n  public async save(doc: any, collection: string, setDirty = true){\n    if(setDirty)\n      doc.dirty = 1;\n    const res = await this.db[collection].put(doc);\n    if(res) {\n      this.changes$.next({doc});\n      return true\n    }\n    return false;\n  }\n\n  public async saveFromSync(docs: any[], collection: string){\n    const res = await this.db[collection].bulkPut(docs);\n    if(res) {\n      docs.forEach(doc => {\n        this.changes$.next({doc});\n      })\n      return true\n    }\n    return false;\n  }\n\n\n}","\n\nclass LocalStorageService {\n  \n  async getItem(id: string){\n    return localStorage.getItem(id);\n  }\n\n  async getString(id: string):Promise<string>{\n    let val:string;\n    val = localStorage.getItem(id) || '';\n    return val;\n  }\n\n  async getObject(id: string):Promise<object|null> {\n    const val = localStorage.getItem(id);\n    if(!val)return null;\n    return JSON.parse(val);\n\n  }\n\n  async setObject(id: string, val: object):Promise<boolean> {\n    try {\n      const str = JSON.stringify(val);\n      await localStorage.setItem(id, str);\n      return true;\n    }\n    catch(e){\n      console.log(e);\n      return false;\n    }\n    \n\n  }\n\n\n\n  async setString(id: string, val: string) {\n    localStorage.setItem(id, val);\n  }\n  \n}\n\nconst localStorageService = new LocalStorageService();\n\nexport default localStorageService;","import moment from 'moment';\nimport ulog from 'ulog'\n\nconst log = ulog('utils');\n\nexport const capitalize = (s: string) => {\n  if (typeof s !== 'string') return ''\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nexport const printDateRelative = (timestamp: number) => {\n  try {\n    const m = moment(timestamp);\n\n    if(moment().diff(m, 'd') < 3){\n      return m.fromNow();\n    }\n    else {\n      return m.format('DD-MM-YYYY');\n    }\n  }\n  catch(e){\n    log.error(e);\n  }\n}\n\nexport function getNested(obj: any, ...args: string[]) {\n  return args.reduce((obj, level) => obj && obj[level], obj)\n}\n\nexport const waitMS = (ms: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n};\n\nexport function getAction(todo:string, data = {}){\n  return {type:todo, data:data};\n}\n\nexport function printCleanNote(text: string) {\n  const t = text.replace(/(\\r\\n|\\n|\\r)/gm,\" \");\n  if(t.length > 40)\n    return t.substring(0,37)+'...';\n  return t;\n}\n\nexport function saveIntoArray(item: Object, ary: Array<any> = [], idKey: string = 'id'): Array<any> {\n  let i = getIndexById(item[idKey], ary, idKey);\n  if (i === -1) {\n    i = ary.length;\n  }\n  return [...ary.slice(0, i),\n          Object.assign({}, item),\n          ...ary.slice(i + 1)];\n}\n\nexport function saveIntoDocList(item: Object, ary: Array<any> = [], idKey: string = 'id'): Array<any> {\n  if(item['deleted']){\n    return ary.filter(d => d[idKey] !== item[idKey])\n  }\n  let i = getIndexById(item[idKey], ary, idKey);\n  if (i === -1) {\n    i = ary.length;\n  }\n  return [...ary.slice(0, i),\n          Object.assign({}, item),\n          ...ary.slice(i + 1)];\n}\n\nexport function getIndexById(id: string, ary: any, idKey: string = 'id'): number {\n  for (let i = 0; i < ary.length; i++) {\n    if (id === ary[i][idKey]) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nexport function findById(id:any, ary: any[], idKey: string = \"id\"): any {\nfor (let i = 0; i < ary.length; i++) {\n    if (id === ary[i][idKey]) {\n      return ary[i];\n    }\n  }\n  return null;\n}\n\nexport function removeFromArrayById(id: any, ary:Array<any>, idKey = 'id') {\n  return ary.filter(o => o[idKey] !== id);\n}\n\nexport function clamp(val:number, max:number, min:number = 0): number {\n  if(val > max) return max;\n  if(val < min) return min;\n  return val;\n}","import axios from 'axios';\nimport { getNested } from '../../utils';\nimport { loadingService } from '../loading/loadingService';\nimport ulog from 'ulog';\n\nconst log = ulog('ajax');\n\n\nexport interface ajaxResponse {\n  success: boolean,\n  data: any,\n  status?: number,\n  errors?: errorMessage[]\n}\n\n\nexport const getAjaxMessage = (success:boolean, data:any, \n    status:number = 0, errors: errorMessage[] = []): ajaxResponse => {\n  return {success, data, status, errors}\n}\n\nexport const getAjaxErrorMessage = (errorMessage: string, \n  location='system', status:number = 404 ) => {\n    return getAjaxMessage(false, null, status, \n      [{location, msg:errorMessage}])\n}\n\nexport interface errorMessage {\n  location: string,\n  msg: string\n}\n\nexport interface postRequest {\n  url: string,\n  type: string,\n  form: object,\n  options?: object,\n}\n\nexport interface getRequest {\n  url: string,\n  type: string,\n  form: object,\n  options?: object,\n}\n\nexport const getPostRequest = (url:string, form:object, options:object = {}, ) => {\n    return {url, type:'post', form, options};\n}\n\n\n\nexport const getErrorMessage = (msg: string, location:string = \"Server\"):errorMessage => {\n  return {msg, location};\n}\n\nexport const post = async (req: postRequest, showLoading = true, loadingMessage=\"Loading...\"):Promise<ajaxResponse> => {\n  try {\n    if(showLoading)\n      loadingService.showLoading(loadingMessage);\n    const res = await axios.post(req.url, req.form, req.options);\n\n    loadingService.hideLoading();\n    log.info(res);\n    return getAjaxMessage(true, res.data, 200);\n  }\n  catch(err) {\n    loadingService.hideLoading();\n    const response = getNested(err, 'response');\n    if(!response || !response.status) {\n      return getAjaxMessage(false, null, 503, [getErrorMessage(\"Service is temporarly unavailable\")]);\n    }\n    else if(response.status === 422){\n      return getAjaxMessage(false, null, response.data.status, response.data.errors);\n    }\n    else if(response.status === 404) {\n      return getAjaxMessage(false, null, 404, [getErrorMessage(\"Could not connect to server\")]);\n    }\n    else {\n      return getAjaxMessage(false, null, response.status, [getErrorMessage(\"Could not connect to server\")]);\n    }\n  }\n}\n","import { Subject } from 'rxjs';\nimport { ajaxResponse } from '../ajax/ajax';\nimport { toast } from 'react-toastify';\n\nexport interface ToastMessage {\n  message: string,\n  duration: number,\n  key?: number,\n}\n\nexport enum ToastType {\n  default = \"default\", \n  info = \"info\", \n  success = \"success\", \n  warning = \"warning\", \n  error = \"error\"\n}\n\n\nexport class ToastService {\n\n  public messages$ = new Subject<ToastMessage>();\n\n  showMessage(message: string, type:ToastType = ToastType.default, milliseconds: number = 3000) {\n    toast(message, {\n      type: type,\n      autoClose: milliseconds,\n    })\n  }\n\n  printSimpleError (msg:string, duration = 2000) {\n    toast( msg, {type: ToastType.error, autoClose: duration})\n  }\n\n  //TODO: for now only prints the first error\n  printServerErrors (res:ajaxResponse) {\n    const errors = res.errors || [];\n    if(errors.length > 0){\n      errors.forEach(err => this.showMessage(err.msg, ToastType.error))\n    }\n  }\n\n\n\n}\nexport const toastService = new ToastService();\n\n\n","\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport * as moment from 'moment';\nimport { isEqual } from 'lodash';\nimport localStorageService from '../localStorage/localStorageService';\nimport {env} from '../../env';\nimport  { getPostRequest, post, ajaxResponse } from '../ajax/ajax';\nimport { toastService } from '../toast/toastService';\nimport ulog from 'ulog';\n\nconst log =  ulog('auth');\n\nexport enum AuthStatus {\n  Loading, \n  Guest, //not loged in\n  User // loged in\n}\n\nexport const GUEST = 'Guest';\nexport const AUTH_USER_KEY = 'auth-user-key';\nexport interface AuthEvent {\n  success: boolean;\n  code: number;\n  data: any;\n}\n\nexport interface User {\n  id: string,\n  username: string;\n  email: string|null;\n  token: string|null;\n  token_expiery: number|null;\n  access: any[];\n}\n\n\n\nexport const getUser = (values: any):User => {\n  if(values == null)\n    return {\n      id: 'guest',\n      username: GUEST,\n      email: null,\n      token: null,\n      token_expiery: null,\n      access: []\n    }\n\n  return {\n    id: values.id || 'guest',\n    username: values.username || GUEST,\n    email: values.email||null,\n    token: values.token||null,\n    token_expiery: values.token_expiery||values.expires||null,\n    access: values.access || []\n  }\n}\n\nexport const isGuest = (user:User) => {\n  return user.username === GUEST;\n}\n\nexport function getGuestUser(username:string = 'Guest'):User {\n  return getUser({ username });\n}\n\n\nexport class AuthService {\n  private _user:User = getGuestUser('null');\n  private _authStatus = AuthStatus.Loading;\n  public authStatus$ = new BehaviorSubject(this._authStatus);\n  public username$ = new Subject<string>();\n\n  constructor() {\n    this.loadAuth();\n  }\n\n  getIsAuthenticated():boolean { return this._authStatus === AuthStatus.User; }\n  getUsername() { return this._user.username; }\n  getEmail() { return this._user.email;}\n  getUser() { return this._user };\n\n\n  async updateUser(user: User, forceLogout = false) {\n    // log.info('Userupdate: ', user, forceLogout, this._authStatus);\n    log.info('Update User:: ', user);\n    if(!isGuest(user) || this._user.username ==='null') {\n\n      if(this._authStatus !== AuthStatus.User) {\n        this.setAuthStatus(AuthStatus.User);\n      }\n\n      if(user.username !== this._user.username){\n        this._user = user;\n        await localStorageService.setObject(AUTH_USER_KEY, user)\n        this.username$.next(user.username);\n      }\n      if(!isEqual(this._user, user)) {\n        log.info('New user object, save it', user);\n        this._user = user;\n        await localStorageService.setObject(AUTH_USER_KEY, user)\n      }\n      \n      return;\n    }\n\n    if(this._authStatus !== AuthStatus.Guest){\n      this.setAuthStatus(AuthStatus.Guest)\n  \n      if(forceLogout){\n        await localStorageService.setObject(AUTH_USER_KEY, getGuestUser);\n      }\n    }\n  }\n\n\n\n\n  async loadAuth() {\n    try {\n      const user = getUser(await localStorageService.getObject(AUTH_USER_KEY));\n      log.info('LOADED USER', user);\n\n      if(!user.token || !user.token_expiery) {\n        return this.updateUser(getGuestUser());\n      }\n      const exp = moment.unix(user.token_expiery);\n      if(exp.isAfter(moment.now())) {\n        return this.updateUser(user);\n      }\n      else {\n        log.warn('TOKEN is old');\n        return this.updateUser(getGuestUser())\n      }\n    }\n    catch(e) {\n      log.error(e);\n      return this.updateUser(getGuestUser())\n    }\n  }\n\n\n  public async loginAndRedirect(id: string, password: string, history, location) {\n    const res = await post( getPostRequest(env.AUTH_API_URL+'/auth/login',\n      { id, password, app: env.APP_ID },), true,  'Login in, please wait');\n      if(res.success) {\n        this.updateUser(getUser(res.data))\n        let next;\n        if(location && location.state && location.state.prev){\n          next = location.state.prev.startsWith('/auth/')? '/': location.state.prev;\n        }\n\n        history.push(next || '/');\n      }\n      else {\n        toastService.printServerErrors(res);\n      }\n  }\n\n  public async logout() {\n    \n  }\n\n  public async login(id: string, password: string):Promise<ajaxResponse> {\n    const res = await post( getPostRequest(env.AUTH_API_URL+'/auth/login',\n      { username: id, password: password, app: env.APP_ID }, {}), true,  'Login in, please wait');\n\n    return res;\n  }\n\n\n  public async renewToken() {\n    const res = await post(getPostRequest(env.AUTH_API_URL+'/auth/renewToken',\n                          {token: this._user.token}), false);\n    log.info('Renewed Token: ', res);\n    if(res.success){\n      await this.updateUser({...this._user, ...{token: res.data.token, \n                                [env.ACCESS_META_KEY]: res.data[env.SERVER_ACCESS_META_KEY],\n                                token_expiery: res.data.expires}})\n      return true;\n    }\n    else {\n      //is it bad token, or just no internet\n      if(res.status && res.status === 422){\n        await this.updateUser(getGuestUser());\n        return false;\n      }\n    }\n\n\n  }\n\n  public async register(username:string, email: string, password: string): Promise<boolean> {\n    const res = await post( getPostRequest(env.AUTH_API_URL+'/auth/register',\n                      { username, password, email }),\n                      true,  'Registering, please wait');\n    if(res.success) {\n        return true;\n    }\n    else {\n      toastService.printServerErrors(res);\n      return false;\n    }\n  }\n\n  public async forgotPassword() {\n    //const res = await this.http.post(environment.auth_api+'/auth/forgotpassword'\n  }\n\n\n  private setAuthStatus(status:AuthStatus){\n    this._authStatus = status;\n    this.authStatus$.next(status);\n  }\n\n  public getAuthStatus():AuthStatus {\n    return this._authStatus;\n  }\n\n  public getToken():string {\n    return this._user.token || '';\n  }\n\n  public get userid(): string {\n    return this._user.id || '';\n  }\n\n\n\n}\nexport const authService = new AuthService();\n\n","import { post, getPostRequest } from '../ajax/ajax';\nimport { DIV } from './models';\nimport localStorageService from '../localStorage/localStorageService';\nimport ulog from 'ulog';\n\nconst log = ulog('sync');\n\nexport interface SyncDataChannel {\n  name: string,\n  docs: any[],\n}\n\n\nexport const organizeData = async (data: any[]) => {\n  const channels = {};\n  let channel;\n\n  data.forEach(doc => {\n    channel = doc.id.split(DIV)[0];\n    if(!channels[channel]) channels[channel] = [];\n    channels[channel].push({...{}, ...doc});\n\n  });\n  //now load channel checkpoints\n  const checkpoints = await localStorageService.getObject('channel_checkpoints') || {};\n  return {channels: channels, checkpoints};\n}\n\nexport const syncData = async (props:{  data:any[],\n                                        syncurl: string, \n                                        token: string, \n                                        checkpoint: number,\n                                        requestMaxSize:number}) => {\n  //TODO: check our size of docs, if its bigger than max size\n  try {\n    //get checkpoint\n    const data =  await organizeData(props.data);\n    const res = await post(getPostRequest(props.syncurl + '/sync/sync', {\n      token: props.token,\n      checkpoint: props.checkpoint,\n      data,\n    }),false,'');\n\n    if(res) {\n      //merge the 2 checkpoints\n      const chpoints = await localStorageService.getObject('channel_checkpoints') || {};\n      await localStorageService.setObject('channel_checkpoints',{...chpoints, ...res.data.checkpoints})\n      return res.data.types;\n    }\n    return null;\n  }\n  catch(e){\n    log.error(e);\n   }\n}\n\n","import { Observable, Subject, BehaviorSubject } from 'rxjs';\nimport { map, filter, throttleTime } from 'rxjs/operators';\nimport { getProjectChildId, generateCollectionId, \n  TYPE_SETTINGS, waitMS, getChannelFromProjectId, getDefaultProject } from './utilsData';\n\nimport { ProjectItem, DIV } from './models';\nimport _ from 'lodash';\nimport DexieAdapter, { DatabaseScheme } from './adapters/dexie';\nimport { TYPE_HABBIT } from '../../pages/habits/models';\nimport { TYPE_TODO, TYPE_TODO_LIST, TYPE_TODO_TAG } from '../../pages/todo/models';\nimport { TYPE_PARTY } from '../parties/models';\nimport { TYPE_MSG } from '../messages/models';\nimport { env } from '../../env';\nimport { authService } from '../auth/authService';\nimport localStorageService from '../localStorage/localStorageService';\nimport { syncData } from './sync';\nimport { post, getPostRequest } from '../ajax/ajax';\nimport ulog from 'ulog';\nimport { TYPE_SOCIAL } from '../social/models';\nimport { RefresherEventDetail } from '@ionic/core';\n\nconst log = ulog('dataService');\n\nexport interface DataChangeEvent {\n  doc: any,\n  old?: any,\n}\n\nconst databaseScheme: DatabaseScheme =  {\n  name: 'guest_dx',\n  version: 21,\n  tables: [\n    {\n      name: TYPE_SETTINGS,\n      columns: 'id, dirty',\n      sync: true\n    },\n    {\n      name: TYPE_PARTY,\n      columns: 'id, dirty, party, type, secondaryType',\n      sync: true\n    },\n    {\n      name: TYPE_TODO,\n      columns: 'id, *tags, list ,dirty',\n      sync: true\n    },\n    {\n      name: TYPE_TODO_LIST,\n      columns: 'id, dirty, folder, secondaryType, fullname',\n      sync: true\n    },\n    {\n      name: TYPE_TODO_TAG,\n      columns: 'id, name, dirty',\n      sync: true\n    },\n    {\n      name: TYPE_HABBIT,\n      columns: 'id, dirty',\n      sync: true\n    },\n    {\n      name: TYPE_MSG,\n      columns: 'id, messageType, dirty',\n      sync: true\n    },\n    {\n      name: TYPE_SOCIAL,\n      columns: 'id, name, dirty, secondaryType',\n      sync: true\n    },\n  ]\n}\n\n\n\nclass DataService {\n  private db;\n  private authId:string = '';\n  private _ready = false;\n  public _ready$ = new BehaviorSubject(this._ready);\n  public addSyncCall$ = new Subject(); // do we need to sync with server\n  constructor() {\n    //subscriptions\n    this.addSyncCall$.pipe(\n      throttleTime(5000),\n    ).subscribe(() => {\n        log.info('Syncing.......')\n        this._syncRemote();\n      })\n  }\n\n  async getDoc(id: string|undefined,  collection: string): Promise<any> {\n    if(id === undefined){\n      throw new Error('Doc Id cannot be undefined, check logic.');\n    }\n    return await this.db.getDoc(id, collection);\n  }\n\n  async getBulk(ids: string[], collection: string): Promise<any> {\n   return await this.db.getBulk(ids, collection);\n  }\n\n  //operators: equals, startsWith, above, below, notEqual\n  async queryByProperty(field:string, operator: 'equals'|'startsWith'|'notEqual', \n      value: any, collection: string): Promise<any> {\n    return await this.db.queryByProperty(field, operator, value, collection);\n  }\n\n  async getAllByProject(projectid, collection): Promise<any> {\n    return await this.db.getProjectItems(getProjectChildId(projectid) + DIV, collection);\n  }\n\n  async getAllByChannel(channel, collection): Promise<any> {\n    return await this.db.getProjectItems(channel + DIV, collection);\n  }\n\n  //save without making it diryt\n  async saveFromServer(doc:any, type:string) {\n    await this.db.save(doc, type, false);\n  }\n\n  async save(doc:any, collection: string, props:{projectid?: string, \n    oldDoc?: any,remoteSync?:boolean} = {}): Promise<any> {  \n      log.info('SAVING DOC', doc, props, collection);\n      if(!props) props = {remoteSync: true};\n      if(props.remoteSync === undefined) props.remoteSync = true;\n    \n      try {\n        let oldDoc = {};\n        if (doc.id && props.oldDoc == null) {\n          oldDoc = await this.getDoc(doc.id, collection);\n        }\n        if (_.isEqual(oldDoc, doc)) {\n          return false; \n        }\n    \n        if(!doc.id) {\n          console.log(doc, props);\n          if(!props.projectid) throw new Error('Saving new doc requires valid props.project')\n            // @ts-ignore:  we made this check at the begining\n          doc.id = generateCollectionId(props.projectid, collection);\n          doc.created = Date.now();\n        }\n        doc.dirty = true;\n        if(!doc.rev)doc.rev = 1;\n        doc.rev ++;\n        const res = await this.db.save(doc, collection);\n        if (props.remoteSync)\n          this.addSyncCall$.next();\n        if (res.ok)\n          return res;\n        else\n          return false;\n        }\n      catch (e) {\n        log.error('DEXIE error: ', e);\n        return false;\n      }\n  }\n\n  \n\n  \n\n\n  async saveNewProject(project:ProjectItem, collection: string): Promise<any> {\n    const res = await post(getPostRequest(env.AUTH_API_URL +'/channels/addNewChannel',\n                      {token: authService.getToken(), \n                       doc: project,\n                       name: project.name}, {} ),  false) ;\n    log.info('Making new project, ajax result: ', res);\n    if(!res.success)\n      return res;\n\n    const channel = res.data.channel;\n    let gotNewRightsToken = false;\n    while(!gotNewRightsToken){\n      const user = authService.getUser();\n      if(user[env.ACCESS_META_KEY][channel]){\n        gotNewRightsToken = true;\n      }\n      else {\n        await waitMS(2000);\n      }\n    }\n    return await this.db.save(res.data.doc, collection, false);\n  }\n\n  async saveSystemDoc(doc: any, project:ProjectItem, collection: string): Promise<any> {\n    if(doc.id){\n      log.warn('Editing SystemDoc, ', doc);\n      const res = await post(getPostRequest(env.AUTH_API_URL +'/channels/editSystemDoc',\n                            { token: authService.getToken(), doc}, {} ), false) ;\n      if(!res.success)\n        return res;\n  \n      return await this.db.save(res.data.doc, collection, false);\n    }\n    else {\n      log.warn('Saving new SystemDoc, ', doc);\n      const doc2 = {}\n      if(!doc.type) \n        throw new Error('Saving system doc requires doc to have type property');\n      if(doc.secondaryType)\n        doc2['secondaryType'] = doc.secondaryType;\n  \n      const res = await post(getPostRequest(env.AUTH_API_URL +'/channels/addNewSystemDoc',\n                        {...{ token: authService.getToken(), \n                          doctype: doc.type,\n                          channelname: getChannelFromProjectId(project.id),\n                          doc: doc }, ...doc2}, {} ), false) ;\n      if(!res.success)\n        return res;\n  \n      return await this.db.save(res.data.doc, collection, false);\n    }\n    \n\n  }\n\n\n\n\n  public async remove(id: string, collection: string, remoteSync:boolean = true) {\n    try {\n      const doc = await this.getDoc(id, collection);\n      if(!doc) return false;\n      log.warn('Deleting doc: ',id);\n      log.warn(doc);\n      const res =  this.db.save({...doc, ...{deleted: true}}, collection);\n      log.info(res);\n      if (remoteSync)\n        this.addSyncCall$.next();\n      return res;\n    }\n    catch(e) {\n      log.error(e);\n      return null;\n    }\n  }\n\n  public async removeProject() {\n\n    /*\n    try {\n      //load all project children and remove them\n      //TODO, on server side, if notice project deleted, make sure all server children are also deleted\n      const res = await this._pouch.allDocs({\n        include_docs: true,\n        startkey: getProjectChildId(project._id),\n        endkey: getProjectChildId(project._id) + LASTCHAR\n      });\n      const docs = res.rows.map(row => Object.assign(\n        row.doc, { _deleted: true, updated: Date.now() }));\n\n      docs.push(Object.assign(project, { _deleted: true, updated: Date.now() }));\n      const res2 = await this._pouch.bulkDocs(docs);\n\n      if (syncRemote)\n        this.addSyncCall$.next();\n\n      return res2;\n    }\n    catch (e) {\n      console.log('Remove Project Error: ', e);\n    }\n    */ return false;\n  }\n\n\n\n  // streams\n\n  subscribeChanges(): Observable<any> {\n    return this.db.changes$.asObservable().pipe(\n      map((change:DataChangeEvent) => change.doc )\n    );\n  }\n  \n\n  subscribeDocChanges(id: string): Observable<any> {\n    return this.db.changes$.asObservable().pipe(\n      filter((change: DataChangeEvent) => change.doc.id === id),\n      map((change: DataChangeEvent) => change.doc)\n    );\n  }\n\n\n  subscribeByPropertyChange(\n    property: string,\n    value: any): Observable<any> {\n    return this.db.changes$.asObservable().pipe(\n      filter((change: DataChangeEvent) => { \n        return (change.doc[property] === value);\n      }),\n      map((change: DataChangeEvent) => change.doc)\n    ); \n  }\n\n  subscribeProjectTypeChanges(projectid: string|undefined, type: string): Observable<any> {\n    if(projectid === undefined) \n      throw new Error('Project id, can not be undefined, can not subscribe to id') ;\n    const projectChildId = getProjectChildId(projectid);\n    return this.db.changes$.asObservable().pipe(\n      filter((change: DataChangeEvent) => { \n        return change.doc.id.startsWith(projectChildId + DIV + type + DIV);\n      }),\n      map((change: DataChangeEvent) => change.doc)\n    ); \n  }\n\n  //project id and channel only difference is the suffic at end of proejctid\n  subscribeChannelTypeChanges(channel: string|undefined, type: string): Observable<any> {\n    if(channel === undefined) \n      throw new Error('Channel can not be undefined, can not subscribe to id') ;\n    return this.db.changes$.asObservable().pipe(\n      filter((change: DataChangeEvent) => { \n        return change.doc.id.startsWith(channel + DIV + type + DIV);\n      }),\n      map((change: DataChangeEvent) => change.doc)\n    ); \n  }\n\n\n  public get ready() {\n    return this._ready;\n  }\n\n  public getReadySub() {\n    return this._ready$;\n  }\n\n  public set ready(value: boolean) {\n    this._ready = value;\n    if(value)\n      this._ready$.next(value);\n  }\n\n  public async refresh(event: CustomEvent<RefresherEventDetail>) {\n    await this._syncRemote();\n    event.detail.complete();\n  }\n\n  public async init(authid: string , syncRemote = true) {\n    log.info('Init DB', authid)\n    const scheme = databaseScheme;\n    scheme.name = authid;\n    this.db = new DexieAdapter(scheme);\n    const dbSub = this.db.ready$.subscribe(ready => {\n      log.info('Dexie Sub: ', ready);\n      if(!ready) return;\n\n      this.ready = true;\n      if (syncRemote)\n        this.addSyncCall$.next();\n\n      this._createSettingsDoc(authid)\n      dbSub.unsubscribe();\n      \n    });\n  }\n\n  public getSettingsDocId(): string {\n    const defaultProject = getDefaultProject(authService.userid);\n    const id =  generateCollectionId(defaultProject.id, 'settings', '');\n    return id.substring(0, id.length-1);\n  }\n\n  public async getSettingsDoc(): Promise<any> {\n    const id = this.getSettingsDocId();\n    if(id === '')return;\n\n    return await this.getDoc(id, TYPE_SETTINGS);\n  }\n\n\n  private async _createSettingsDoc(userid:string) {\n    log.info('CreateSettingsDoc', userid);\n    try {\n      const id =  this.getSettingsDocId();\n      const s = await dataService.getDoc(id, TYPE_SETTINGS);\n      console.log(s);\n      if(s) return s;\n      const ts = Date.now();   \n      log.info('Compare ids ', userid + ' ' + authService.userid);\n      if(userid === authService.userid){  //half second pased, see if state changed\n        log.info('Saving new Settings Doc::: ', id)\n        const res = await dataService.save({\n          id,\n          type: TYPE_SETTINGS,\n          userid: userid,\n          created: ts,\n          updated: ts\n        }, TYPE_SETTINGS)\n      return res;\n      }\n    }\n    catch(e) {\n      log.error(e.red, userid);\n    }    \n  }\n\n  private async _syncRemote() {\n    console.log('Sync Remote:::')\n    let ck = Number(await localStorageService.getItem('SYNC_CHECKPOINT'));\n    if(!ck) ck = 0; \n    \n    let docs: any[] = [];\n    for(let i = 0; i < databaseScheme.tables.length; i++) {\n      if(!databaseScheme.tables[i].sync){\n        continue;\n      }\n      const res = await this.db.queryByProperty('dirty', 'equals', 1, databaseScheme.tables[i].name);\n      docs.push(...res);\n    }\n    const res = await syncData({  data: docs, \n                                  syncurl: env.SYNC_SERVER,\n                                  token: authService.getToken(),\n                                  checkpoint: 0,\n                                  requestMaxSize: 1000});\n    //save checkpoint\n    if(res) {\n      const keys = Object.keys(res);\n      for(let i = 0; i < keys.length; i++){\n        await this.db.saveFromSync(\n          res[keys[i]].map(doc => Object.assign(doc, {dirty: 0})), \n          keys[i]);\n      }\n    }\n    console.log('Finished sync');\n  }\n\n\n\n}\n\nexport const dataService = new DataService();\n","\n\nexport const TYPE_MSG = 'msg';\n\nexport interface Msg {\n  id:string,\n  to:string, \n  from:string, \n  type:string, \n  messageType: string,\n  message:string, \n  data: any\n  replied?: {accepted: boolean, date:number},\n  deleted?: boolean\n}","import { Doc } from \"../data/models\";\n\nexport const TYPE_SOCIAL = 'social';\n\n\n\nexport class Friend extends Doc {\n  username!: string;\n  id!: string;\n  secondaryType?: string;\n\n\n  constructor(values: Object = {}) {\n    super()\n    Object.assign(this, values);\n    if(!values['username']) throw new Error('Friend Doc username required')\n    if(!values['id']) throw new Error('Friend Doc id required')\n  }\n}\n\n\n","import { BehaviorSubject } from 'rxjs';\nimport { toast } from 'react-toastify';\nimport { Todo } from '../../pages/todo/models';\nimport { Habit } from '../../pages/habits/models';\nimport { dataService } from '../data/dataService';\nimport { calculateLevelExperience, calculateDoneTodoGold, calculateDoneTodoExperience, calculatePlantExperience } from './utilsGamify';\nimport { throttleTime } from '../../../node_modules/rxjs/operators';\nimport { isEqual } from 'lodash';\nimport { getInitGamifyRewards, GamifyRewards } from '../../pages/habits/utilsHabits';\nimport { generateCollectionId, TYPE_SETTINGS, getDefaultProject } from '../data/utilsData';\nimport { env } from '../../env';\nimport { authService } from '../auth/authService';\nimport ulog from 'ulog';\nimport { MarketItem, MarketItemType, DEFAULT_SEED_NAME, defaultSeed } from '../market/models';\nimport { planet } from 'ionicons/icons';\n\nconst log = ulog('gamify');\n\n\n\n\nexport interface GamifyState {\n  experience: number,\n  maxExperience: number,\n  level: number,\n  gold: number,\n\n  userItems: MarketItem[],\n\n}\n\nexport const getInitGamifyState = () => {\n  return {\n    experience: 0,\n    maxExperience: 20,\n    level: 1,\n    gold: 0,\n\n    userItems: [],\n    \n  }\n}\n\nexport class GamifyService {\n\n  private _userId = '';\n  private _subscriptions:any[] = [];\n  private _state: GamifyState = getInitGamifyState();\n\n  public state$ = new BehaviorSubject<GamifyState>(this._state);\n  \n\n  public async init(userid: string) {\n    this.unsubscribe();\n    this._userId = userid;\n    const dataSub = dataService.getReadySub().subscribe(async (ready) => {\n      if(!ready) return;\n      const doc = await this.loadInitDocs(userid);\n      const sub = this.state$.pipe(throttleTime(10000)).subscribe(()=>{\n        this._save();\n      })\n  \n      const sub2 = dataService.subscribeDocChanges(this.getGamifyDocId())\n        .subscribe(doc => {\n          console.log(doc, this.state);\n          const equal = isEqual(this._state, doc.state);\n          if(!equal)\n            this.state = {...this.state, ...doc.state};\n        });\n  \n      this._subscriptions.push(sub);\n      this._subscriptions.push(sub2);\n      //load the init stae\n      console.log(this.state, doc);\n      if(doc)\n        this.state = {...this.state, ...doc.state};\n\n      dataSub.unsubscribe();\n    })\n  }\n\n  public buyItem(item:MarketItem) {\n    if(item.price > this.state.gold) return;\n    this._state.gold -= item.price;\n    const i = this._state.userItems.find(i => i.name === item.name);\n    if(i){\n      i.quantity++;\n    }\n    else{\n      this._state.userItems.push({...item, ...{quantity: 1}});\n    }\n    this.state = Object.assign(this._state);\n  }\n\n  public getUserSeeds(): MarketItem[] {\n    return [...[defaultSeed],\n            ...this.state.userItems.filter(i => i.itemType === MarketItemType.seed)]\n  }\n  \n\n  public calculateFinishedTodoRewards = (todo: Todo): Todo => {\n    if(!todo.doneRewards || !todo.doneRewards.gold){\n      todo.newRewards = getInitGamifyRewards({\n        gold: calculateDoneTodoGold(todo),\n        experience: calculateDoneTodoExperience(todo),\n        items: []\n      });\n    }\n\n    if(todo.done){\n      this.addGold(todo.newRewards.gold);\n      this.messageReceivedGold(todo.newRewards.gold);\n      this.addExperience(todo.newRewards.experience);\n      this.messageReceivedExperience(todo.newRewards.experience)\n    }\n    else {\n      this.addGold(todo.newRewards.gold * -1);\n      this.messageLostGold(todo.newRewards.gold);\n      this.addExperience(todo.newRewards.experience * -1);\n      this.messageLostExperience(todo.newRewards.experience);\n    }\n\n    return {...{}, ...todo};\n  }\n\n  public calculateNewTodo = (todo: Todo): Todo => {\n    todo.newRewards = getInitGamifyRewards({\n      gold: env.TODO_NEW_GOLD_REWARDS,\n      experience: env.TODO_NEW_EXPERIENCE_REWARDS,\n      items: [],\n    });\n\n    this.addGold(todo.newRewards.gold);\n    this.messageReceivedGold(todo.newRewards.gold)\n    this.addExperience(todo.newRewards.experience);\n    this.messageReceivedExperience(todo.newRewards.experience)\n\n    return {...{} ,...todo};\n  }\n\n  public calculateNewHabitRewards = (habit:Habit): Habit => {\n    if(!habit.seedItem) throw new Error('Seed item cannot be undefined');\n    \n    habit.newRewards = getInitGamifyRewards({\n      gold: env.HABIT_REWARDS_NEW_GOLD,\n      experience: env.HABIT_REWARDS_NEW_EXPERIENCE,\n      items: [],\n    });\n\n    habit.plantName = habit.seedItem.name;\n    habit.plantLevel = 1;\n    habit.plantExp = 0;\n    habit.plantDifficultyLevel = habit.seedItem.difficulty;\n    habit.plantNextLevelExp = calculatePlantExperience(habit.plantLevel, habit.plantDifficultyLevel);\n\n    this.addGold(habit.newRewards.gold);\n    this.messageReceivedGold(habit.newRewards.gold)\n    this.addExperience(habit.newRewards.experience);\n    this.messageReceivedExperience(habit.newRewards.experience)\n\n    return {...{}, ...habit};\n  }\n\n  public removeUserItem(name:string) {\n    console.log(name, this._state)\n    if(name === DEFAULT_SEED_NAME) return;\n    const item = this._state.userItems.find(i => i.name === name);\n    if(!item) throw new Error('Item does not exist');\n\n    item.quantity--;\n    console.log('Removing item, ', item);\n    if(item.quantity < 1) {\n      console.log('0 left, so need to filter');\n      this._state.userItems = this._state.userItems.filter(i => i.quantity > 0);\n    }\n    this.state = Object.assign(this._state);\n  }\n\n  private addGold(value:number, save = true) {\n    this._state = {...this._state, ...{gold: this._state.gold + value}};\n    if(save)this.state = this._state;\n  }\n\n  private addExperience(value: number, save = true) {\n    let experience = this._state.experience + value;\n    \n    if(experience > this._state.maxExperience){\n      experience = (this._state.maxExperience - experience) * -1;\n      this._state = {...this._state, \n        ...{maxExperience: calculateLevelExperience(this._state.level+1),\n            level: this._state.level + 1}}\n    }\n    this._state = {...this._state, ...{experience}}\n    if(save) this.state = this._state;\n  }\n\n  public addRewards = (rewards:GamifyRewards) => {\n    if(rewards.gold > 0) {\n      this.messageReceivedGold(rewards.gold);\n      this.addGold(rewards.gold, false);\n    }\n    if(rewards.experience > 0){\n      this.messageReceivedExperience(rewards.experience);\n      this.addExperience(rewards.experience, false)\n    }\n\n    if(rewards.gold > 0 && rewards.experience > 0) {\n      this.state = this._state;\n    }\n  }\n\n  private messageReceivedGold(gold: number, preMessage?:string, postMessage?:string) {\n    if(!preMessage) preMessage = '';\n    if(!postMessage) postMessage = '';\n    toast.success(preMessage+' You have received ' + gold + ' gold '+postMessage,{autoClose: env.MESSAGE_DURATION});\n  }\n\n  private messageLostGold(gold:number, preMessage?:string, postMessage?:string) {\n    if(!preMessage) preMessage = '';\n    if(!postMessage) postMessage = '';\n    toast.error(preMessage+' You have lost ' + gold + ' gold'+postMessage, {autoClose: env.MESSAGE_DURATION});\n  }\n\n  private messageReceivedExperience(exp: number, preMessage?:string, postMessage?:string) {\n    if(!preMessage) preMessage = '';\n    if(!postMessage) postMessage = '';\n    toast.success(preMessage+' You have received ' + exp + ' experience'+postMessage,{autoClose: env.MESSAGE_DURATION});\n  }\n\n  private messageLostExperience(exp:number, preMessage?:string, postMessage?:string) {\n    if(!preMessage) preMessage = '';\n    if(!postMessage) postMessage = '';\n    toast.error(preMessage+' You have lost ' + exp + ' experience'+postMessage, {autoClose: env.MESSAGE_DURATION});\n  }\n  \n  private async _save() {\n    try{\n      const doc = await dataService.getDoc(this.getGamifyDocId(), TYPE_SETTINGS);\n\n      if(!doc){\n        return;\n      }\n\n      const equal = isEqual(this._state, doc.state);\n      //make sure we are not saving the init state\n      const initEqual = isEqual(this.state, getInitGamifyState());\n      if(!equal && !initEqual && doc.userid ===  this._userId) {\n        dataService.save({...doc, ...{state: this._state}}, TYPE_SETTINGS);\n      }\n    }\n    catch(e) {\n      log.error(e);\n    }\n    \n  }\n\n  private getGamifyDocId(): string {\n    const defaultProject = getDefaultProject(authService.userid);\n    const id =  generateCollectionId(defaultProject.id, 'gamify', '');\n    return id.substring(0, id.length-1);\n  }\n\n  private async loadInitDocs(id: string): Promise<any> {\n    try {\n      const s = await dataService.getDoc(this.getGamifyDocId(), TYPE_SETTINGS);\n      if(s) return s;\n      const ts = Date.now();   \n      if(id === this._userId){  //half second pased, see if state changed\n        const res = await dataService.save({\n          id: this.getGamifyDocId(),\n          state: getInitGamifyState(),\n          type: TYPE_SETTINGS,\n          userid: id,\n          created: ts,\n          updated: ts\n        }, TYPE_SETTINGS)\n      return res;\n      }\n    }\n    catch(e) {\n      log.error(e.red, id);\n    }    \n  }\n\n  public get state(): GamifyState {\n    return this._state;\n  }\n  public set state(value: GamifyState) {\n\n    this._state = value;\n    this.state$.next(value);\n  }\n\n  private unsubscribe() {\n    this._subscriptions.forEach(s=>{\n      if(s)s.unsubscribe();\n    })\n  }\n\n\n}\nexport const gamifyService = new GamifyService();\n\n\n","\nimport { Todo, TYPE_TODO, TodoList, TYPE_TODO_LIST, TodoTag, getDefaultTodoList, getDefaultTodoTag, TYPE_TODO_TAG } from './models';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { dataService } from '../../modules/data/dataService';\nimport { waitMS, getProjectChildId } from '../../modules/data/utilsData';\nimport _ from 'lodash';\nimport { gamifyService } from '../../modules/gamify/gamifyService';\nimport ulog from 'ulog';\nimport { toastService } from '../../modules/toast/toastService';\n\n\nconst log = ulog('todo');\n\n\nexport interface TodoState {\n  selectedTodo: Todo|null,\n  list: TodoList|undefined,\n  tag: TodoTag|undefined,\n  docs: Todo[],\n  tagDocs: TodoTag[],\n  doneTodos: boolean,\n  orderFilter: string,\n  orderAsync: number,\n  showNewTagFilter: boolean,\n}\n\nexport const getInitTodoState = (): TodoState => {\n  return {\n    selectedTodo:null,\n    list: undefined,\n    tag: undefined,\n    docs: [],\n    tagDocs: [],\n    doneTodos: false,\n    orderFilter: 'created',\n    orderAsync: 1,\n    showNewTagFilter: false,\n  }\n}\n\nexport class TodoService {\n  \n  // @ts-ignore: it will be initialized in init\n  private _projectid: string;\n  private _state: TodoState = getInitTodoState();\n  public state$ = new BehaviorSubject(this._state);\n  private _subscription: Array<Subscription> = [];\n\n  public init(projectid: string, list:string|undefined, tag:string|undefined) {\n    //first unsubscribe\n    this.unsubscribe();\n    const dataSub = dataService.getReadySub().subscribe( async (ready) => {\n      if(!ready) return;\n      \n      this._init(projectid, list, tag);\n\n      await waitMS(5000);\n      dataSub.unsubscribe();\n    });\n  }\n\n  async _init(projectid: string, listName: string|undefined, tagName: string|undefined) {\n\n    if(this._projectid  === projectid && \n        this._state.list?.fullname === listName && \n        this._state.tag?.name === tagName) return;\n\n    let list, tag\n    if(!listName && !tagName){\n      list = getDefaultTodoList('default', projectid)     \n    }\n    if(listName)\n      list = getDefaultTodoList(listName, projectid)    \n    if(tagName)\n      tag = getDefaultTodoTag(tagName, projectid);\n\n    this._state = {...this.state, ...{\n      tag, \n      list,\n      tagDocs: this.getTags()}};\n    \n      log.warn(this._state);\n    \n    this._projectid = projectid;\n    \n    log.info(this.state);\n\n    this.reloadTodos();\n\n    const sub = dataService.subscribeProjectTypeChanges(projectid,TYPE_TODO)\n      .subscribe((doc: Todo) => {\n        log.log(\"TodoService subscription: \", doc); \n        this.reloadTodos();\n      });\n    this._subscription.push(sub);\n\n  }\n\n  async reloadTodos() {\n    log.info('RELOADING TODOS::: ', this.state)\n      let docs;\n    if(this.state.list){\n        log.info('Todo Query by List')\n        docs = await dataService.queryByProperty(\n          'list', 'equals', this.state.list.fullname, TYPE_TODO);\n    }\n     else if(this.state.tag){\n        log.info('Todo Query by Tags')\n        docs = await dataService.queryByProperty(\n          'tags', 'equals', this.state.tag.name, TYPE_TODO);\n    }\n\n    this.filterAndSaveTodos(docs);\n   \n  }\n\n  public async getTagsByStartingName(value){\n    return await dataService.queryByProperty(\n      'name', 'startsWith', value, TYPE_TODO_TAG); \n  }\n\n  private filterAndSaveTodos(docs: Todo[]):Todo[] {\n    const filtered = docs.filter(doc => this.filterDoneParentFunction(doc))\n                        .sort((a,b) => this.orderFunction(a,b));\n    this.state = {...this.state, ...{docs: filtered}};\n    return filtered;\n  }\n\n  private orderFunction(a:Todo, b:Todo) {\n    return (a[this._state.orderFilter] > b[this._state.orderFilter])?\n     (1 * this._state.orderAsync) : (-1 * this._state.orderAsync)\n  }\n\n\n  private filterDoneParentFunction(doc:Todo) {\n      if (doc.done !== this._state.doneTodos) return false;\n      return true;\n  }\n\n\n \n  public get state(): TodoState {\n    return this._state;\n  }\n  public set state(value: TodoState) {\n    this._state = value;\n    this.state$.next(this._state);\n  }\n\n  public async addSubTodoToParent (todoId: string, parentId: string) {\n    try {\n      const parentTodo: Todo = await dataService.getDoc(parentId, TYPE_TODO);\n      if (parentTodo) {\n        if(!parentTodo.subTodos) parentTodo.subTodos = [];\n        parentTodo.subTodos = _.concat(parentTodo.subTodos, todoId);\n        this.save(parentTodo);\n      }\n    }\n    catch(e) {\n      log.error(e);\n    }\n  }\n\n  public async removeSubTodoFromParent (todoId: string, parentId) {\n    try {\n      const parentTodo: Todo = await dataService.getDoc(parentId, TYPE_TODO);\n      if (parentTodo) {\n        if(!parentTodo.subTodos) parentTodo.subTodos = [];\n        parentTodo.subTodos = _.filter(parentTodo.subTodos, t=>t!== todoId);\n        this.save(parentTodo);\n      }\n    }\n    catch(e) {\n      log.error(e);\n    }\n  }\n\n\n  public async save(doc:Todo, parentId: string|null = null) {\n    log.info(\"Save: \", doc, this._projectid, TYPE_TODO);\n    //see if its new\n    if(doc._new) {\n      delete(doc._new);\n      \n      if(this.state.list)\n        doc.list = this.state.list.fullname;\n      else\n        doc.list = getProjectChildId(this._projectid)+'default'\n      if(!doc.tags){\n        doc.tags = [];\n      }\n      await this.saveNewTags(doc.tags);\n      doc = gamifyService.calculateNewTodo(doc);\n    }\n    const res = await dataService.save({...{done: false}, ...doc}, TYPE_TODO, {projectid: this._projectid});\n    if(parentId && doc.id) {\n      this.addSubTodoToParent(doc.id, parentId)\n    }\n    return res;\n\n  }\n\n  public async saveNewTags(tags:string[]) {\n    console.log('Tags::: ', tags);\n    let tagDoc;\n    for(let i = 0; i < tags.length; i++) {\n      console.log(tags[i]);\n      tagDoc = await dataService.queryByProperty('name', 'equals', tags[i], TYPE_TODO_TAG);\n      console.log(tagDoc);\n      if(tagDoc.length === 0) {\n        //save new tag\n        await dataService.save(new TodoTag({\n          name: tags[i], \n        }), TYPE_TODO_TAG, {projectid: this._projectid, remoteSync:true });\n      }\n    }\n  }\n\n  public async saveList(doc:TodoList) {\n    log.info('Save New TodoList: ', doc);\n    if(doc._new) {\n      //make sure its not a duplicate\n      const res = await dataService.getDoc(doc.id, TYPE_TODO_LIST);\n      if(res){\n        //error, its a duplicate\n        toastService.printSimpleError('List Already Exists');\n        return;\n      }\n      delete doc._new;;\n      const saveRes = await dataService.save(doc, TYPE_TODO_LIST);\n      log.info(saveRes);\n      return saveRes;\n    }\n  }\n\n  public async deleteList(list:TodoList) {\n    //get all docs that are in this list\n    log.warn(list);\n    const docs = await dataService.queryByProperty('list', 'equals', list.fullname,TYPE_TODO);\n    log.warn(docs);\n    //delete all items\n    for(let i = 0; i < docs.length; i ++){\n      dataService.remove(docs[i].id, TYPE_TODO);\n    }\n    if(list.id)\n      dataService.remove(list.id, TYPE_TODO_LIST);\n  }\n\n  public async remove(id: string) {\n    //see if this doc has parent\n    try {\n      const todo: Todo = await dataService.getDoc(id, TYPE_TODO);\n      if (todo) {\n        if(todo.parent) {\n          this.removeSubTodoFromParent(id, todo.parent);\n        }\n      }\n    }\n    catch(e) {\n      log.error(e);\n    }\n    dataService.remove(id, TYPE_TODO);\n  }\n\n  public select(doc:Todo | null) {\n    this.state = {...this._state, ...{ selectedTodo: doc} };\n  }\n\n  public changeDoneFilter(done: boolean) {\n    if(done === this._state.doneTodos) return;\n    this._state = {...this._state, ...{ doneTodos: done} };\n    this.reloadTodos();\n  }\n\n  public showNewTagFilter(show) {\n    this.state = {...this.state, ...{showNewTagFilter: show}};\n  }\n\n  public changeOrderFilter(filter: string) {\n    if(this._state.orderFilter === filter){\n      this._state = {...this._state, ...{ orderFilter: filter, \n        orderAsync: (this._state.orderAsync === 1)? -1:1} };\n    }\n    else {\n      this._state = {...this._state, ...{ orderFilter: filter} };\n    }\n    this.reloadTodos();\n  }\n\n  public getTags():TodoTag[] {\n    const tags =  [\n      new TodoTag({\n        id: undefined,\n        icon: 'sun.svg',\n        name: 'today',\n        fullname: 'today',\n      }),\n      new TodoTag({\n        id: undefined,\n        icon: 'star.svg',\n        name: 'important',\n        fullname: 'important',\n      })\n      //getDefaultTodoTag('today', projectid, 'sun.svg'), \n      //getDefaultTodoTag('important', projectid, 'star.svg')];\n    ]\n    return tags;\n  }\n\n\n  public selectList(list:TodoList) {\n    if(list === this._state.list) return;\n    this._state = {...this._state, ...{ list } };\n    this.reloadTodos();\n  }\n\n  public unsubscribe() {\n    if(!this) return;\n    this._subscription.forEach(sub => {\n      if(sub)\n        sub.unsubscribe();\n    });\n  }\n\n}\n\n\n\nexport  const todoService = new TodoService(); ","import React, { useRef, useReducer, useEffect } from 'react';\nimport { Todo, TYPE_TODO, TodoList, getDefaultTodoList, TodoTag } from './models';\nimport {IonInput, IonButton, IonIcon} from '@ionic/react';\nimport { generateCollectionId } from '../../modules/data/utilsData';\nimport ulog from 'ulog'\nimport { waitMS } from '../../components/animatedIcon';\nimport { todoService } from './todo.service';\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, filter } from 'rxjs/operators';\nimport { COLOR_SECONDARY } from '../../colors';\nimport './todo.component.css';\n\nconst log = ulog('todo');\n\n\n\nconst TodoNewComp = ({list, tag, focus, closeFunc, saveFunc, projectId}:\n  {list:TodoList|undefined, focus: boolean, \n    tag:string|undefined, closeFunc:Function,\n    projectId: string, saveFunc: Function}) => {\n\n  const reducer = (state, {type, payload}) => {\n      switch(type) {\n        case 'setTitle': \n          //see if we have a tag\n          if(payload[payload.length -1] === '#'){\n            return {...state, ...{title:payload, showTags: true}};\n          }\n          if(payload[payload.length -1] === ' ' && state.showTags === true){\n            return {...state, ...{title:payload, showTags: false}};\n          }\n          return {...state, ...{title:payload}};\n        case 'setFocus':\n          return {...state, ...{focus:payload}};\n        case 'setCloseFocus':\n          console.log('setCloseFocus, ', payload);\n          return {...state, ...{closeFocus:payload}};\n        case 'setState':\n          return payload;\n        case 'setTags':\n          return {...state, ...{tags: payload}};\n        default:\n          log.console.error('Incorrect action, ', type, payload);\n          return state;\n          \n      }\n  }\n    \n  \n  \n  \n    const [state, _dispatch] = useReducer(reducer, {title:'', \n                                                  focus, \n                                                  tags: [],\n                                                  showTags:false,\n                                                  closeFocus: false})\n  const inputEl = useRef(null);\n  const searchTags$ = new Subject<string>();\n\n  useEffect(() => {\n    dispatch('setFocus', focus);\n    if(focus){\n      setDelayedFocusOnInput();\n    }\n  }, [focus])\n\n  const setDelayedFocusOnInput = async () => {\n    await waitMS(200);\n    if(inputEl.current){\n      console.log('Setting focus to input')\n      // @ts-ignore: current is pointing to input\n      inputEl.current.setFocus();\n    }\n  }\n\n\n  const dispatch = (type: 'setTitle'|\n                          'setFocus'|\n                          'setTags'|\n                          'setState'|\n                          'setCloseFocus', payload:any = {}) => {\n    _dispatch({type, payload});\n  }\n\n  //TODOS: testing....\n  const setNewTitle = (e) => {\n    dispatch('setTitle', e.detail.value);\n    if(state.showTags) {\n      const index = e.detail.value.lastIndexOf('#');\n      searchTags$.next(e.detail.value.substring(index));\n       \n    }\n  }\n\n\n  const searchTags = async (value) => {\n    console.log('tags searching, ', value);\n    return await todoService.getTagsByStartingName(value);\n    //use todo service to load tags here\n  }\n\n  searchTags$.pipe(\n    debounceTime(300),\n    distinctUntilChanged(),\n    filter(value => value.length > 2),\n    switchMap(term => searchTags(term.substring(1)))\n  ).subscribe(res => {\n    console.log('SEARCH TAGS:::::: ', res);\n    dispatch('setTags', res);\n  });\n\n\n\n  const onKeyPress = (e) => {\n    if(e.key === 'Enter'){\n      save();\n      dispatch('setTitle', '');\n    }\n  }\n\n  const save = async () => {\n    let fullname;\n    if(!list){\n      fullname = getDefaultTodoList('tasks', projectId).fullname;\n    }\n    else {\n      fullname = list.fullname;\n    }\n\n     //do we have tags in the title\n     const regex = /\\#\\w+\\b/\n     let tag2 = state.title.match(regex);\n     let name = state.title;\n     let otherTags = {};\n     while(tag2) {\n       console.log(tag2);\n       otherTags[tag2[0].substring(1)] = '';\n       name = name.substring(0, tag2.index) + name.substring(tag2.index+tag2[0].length).trim();\n       console.log(name);\n       tag2 = name.match(regex);\n     }\n\n     if(tag){\n      otherTags[tag] = ''\n    }\n    \n    const id = generateCollectionId(projectId, TYPE_TODO)\n    const newDoc = new Todo({\n      id, \n      name: name, \n      list: fullname,\n      tags: Object.keys(otherTags),\n      _new: true});\n\n     await saveFunc(newDoc);\n  };\n\n\n\n  const onInputFocus = async(e) => {\n    await waitMS(510);\n    console.log('Focus', e);\n    dispatch('setFocus', true);\n  }\n\n  const onInputBlur = (e) => {\n    closeToolbar();\n    dispatch('setCloseFocus', true);\n    console.log('Blur ', state,  e);\n  }\n\n  const onSubAction = (type:string, payload:any = {}) => {\n    switch(type) {\n      case 'tag':\n        dispatch('setState', {...state, ...{title: state.title+' #',  closeFocus: false}})\n        break;\n      case 'tagString':\n        console.log(payload);\n        const index = state.title.lastIndexOf('#');\n        dispatch('setState', {...state, ...{\n            title: state.title.substring(0, index+1) + payload + ' ',  \n            closeFocus: false}})\n        break;\n      case 'addTag':\n        dispatch('setState', {...state, ...{\n          title: state.title.trim() + ' ' + payload + ' ',  \n          closeFocus: false}})\n        break;\n      \n    }\n    \n    dispatch('setCloseFocus', false);\n    console.log('Action: ', type, inputEl)\n    if(inputEl){\n      console.log('Setting focus to input')\n      // @ts-ignore: current is pointing to input\n      inputEl.current.setFocus();\n    }\n      \n  }\n\n  const closeToolbar = async () => {\n    //wait 1 sec, if nothing is presssed, then \n    await waitMS(500)\n    console.log('CloseToolbar Focus: ', state);\n    if(state.closeFocus)\n      closeFunc()\n    \n     \n  }\n\n\n  const printSmallTagFromName = (tag:TodoTag) => {\n    if(tag.icon) {\n      return <IonIcon  \n                key={tag.name}\n                size=\"small\" \n                color='success' \n                src={\"/assets/icons/\"+tag.icon} />\n    }\n\n    return <IonIcon  \n                key={tag.name}\n                size=\"small\" \n                color='success' \n                src={\"/assets/icons/tag.svg\"} >\n          {tag.name}  \n          </IonIcon>\n  }\n\n\n  return (\n    <>\n    {state.showTags? (\n      <div>\n        {state.tags.map((tag:TodoTag) => (\n          <IonButton \n            fill=\"clear\"\n            color={COLOR_SECONDARY}\n            onClick={() => onSubAction('tagString', tag.name)}\n            key={tag.name} >\n            {printSmallTagFromName(tag)}\n            {tag.name}\n          </IonButton>\n\n        ))}\n      </div>\n    ) : (<></>)}\n    {state.focus? (\n      <div>\n        <IonButton class=\"newTodoCloseButton\" onClick={() => closeToolbar()} fill=\"clear\" >Close</IonButton>\n        <IonButton onClick={() => onSubAction('tag')} fill=\"clear\" >Tag #</IonButton>\n        <IonButton onClick={() => onSubAction('addTag', '#today')} fill=\"clear\" >\n              <IonIcon  \n                  key={'today'}\n                  size=\"small\" \n                  color='success' \n                  src={\"/assets/icons/sun.svg\"} />\n\n        </IonButton>\n        <IonButton onClick={() => onSubAction('addTag', '#important')} fill=\"clear\" >\n              <IonIcon  \n                  key={'important'}\n                  size=\"small\" \n                  color='success' \n                  src={\"/assets/icons/star.svg\"} />\n\n        </IonButton>\n        <IonInput\n            autofocus={true}\n            ref={inputEl}\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onKeyPress={onKeyPress}\n            onIonChange={setNewTitle}\n            value={state.title}\n            onIonBlur={onInputBlur}\n            onIonFocus={onInputFocus}/>\n      </div>\n    ) : (<></>)}\n    \n    </>\n  )\n\n\n}\n\nexport default TodoNewComp;","export const COLOR_PRIMARY = 'primary';\nexport const COLOR_SECONDARY = 'secondary';\nexport const COLOR_TERTIARY = 'tertiary';\nexport const COLOR_SUCCESS = 'success';\nexport const COLOR_WARNING = 'warning';\nexport const COLOR_DANGER = 'danger';\nexport const COLOR_LIGHT = 'light';\nexport const COLOR_MEDIUM = 'medium';\nexport const COLOR_DARK = 'dark';","import React, { useState, useEffect } from 'react';\nimport { Todo, TodoTag } from './models';\nimport { DataFunctions } from './hooks/todos.hook';\nimport _ from 'lodash';\nimport ulog from 'ulog';\nimport { IonLabel, IonTextarea, IonButton, IonIcon, IonAlert } from '@ionic/react';\nimport './todo.edit.component.css';\nimport { trash, close } from '../../../node_modules/ionicons/icons';\n\n\nconst log = ulog('todo');\n\nconst getDefaultState = (todo:Todo, tagDocs:TodoTag[]) =>  {\n  return {\n  todo: todo,\n  tagDocs,\n  showDeleteWarrning: false,\n  text: mergeText(todo.name, todo.note)\n}}\n\nconst mergeText = (name: string|undefined, note: string|undefined): string => {\n  if(!name) name= '';\n  if(!note) \n    note = '';\n  else\n    note = '\\n'+note;\n  return name + note;\n}\n\n\n\nconst TodoEditInlineComponent = ({todo, tagDocs, dataFunctions}: \n        {todo:Todo,  tagDocs:TodoTag[], dataFunctions: DataFunctions}) => {\n  log.warn(\"Edit Todo Render::: \", todo, tagDocs, tagDocs);\n\n  const [state, setState] = useState(getDefaultState(todo, tagDocs));\n\n  useEffect(() => {\n    setState(getDefaultState(todo, tagDocs));\n  }, [todo, tagDocs])\n\n  const handleTitleChange = (e) => {\n    const text = e.detail.value;\n    var match = /\\r|\\n/.exec(text);\n    if(match){\n      const name = text.substring(0, match.index);\n      const note = text.substring(match.index+1);\n      const newDoc = {...state.todo, ...{name: name, note: note}}\n      const newState = {...state, ...{todo: newDoc, text: text}};\n      setState(newState);\n    }\n    else {\n      const newDoc = {...state.todo, ...{name: text, note: ''}}\n      const newState = {...state, ...{todo: newDoc, text: text}};\n      setState(newState);\n    }\n  }\n\n  const handleBlur = () => {\n    dataFunctions.save(state.todo);\n  }\n\n  const showRemoveWarrning = () => {\n    setState({...state, ...{showDeleteWarrning: true}});\n  }\n\n\n  const hideRemoveWarrning = () => {\n    setState({...state, ...{showDeleteWarrning: false}});\n  }\n\n  const remove = () => {\n    hideRemoveWarrning();\n    if(state.todo.id)\n      dataFunctions.remove(state.todo.id);\n  }\n\n  const printTag = (tag: TodoTag) => {\n    let color;\n    if(_.includes(state.todo.tags,tag.name)){\n      color = 'success';\n    }\n    else {\n      color = 'light';\n    }\n    return  <IonButton \n                fill=\"clear\"\n                size=\"default\" \n                color={color} \n                key={tag.name + 'editicon'}  \n                onClick={() => handleTagChange(tag)}>\n              <IonIcon  src={\"/assets/icons/\"+tag.icon} /></IonButton>\n  }\n\n\n  const handleTagChange = (tag: TodoTag) => {\n    log.error(tag, tagDocs);\n    if(!state.todo.tags) state.todo.tags = [];\n    const res = state.todo.tags.find(t=>t===tag.name);\n    let newtags;\n    if(res === undefined){\n      newtags = _.concat(state.todo.tags, tag.name);\n    }\n    else {\n      newtags = _.filter(state.todo.tags, t=>t!==tag.name);\n    }\n    dataFunctions.save(Object.assign(state.todo, {tags: newtags}));\n  }\n\n\n  return (\n\n    <div className=\"\">\n        \n        \n        <div key=\"todoEditInlineIconScrollParent\" className=\"todoEditInlineIconScrollParent\">\n          { tagDocs.map(tag => printTag(tag)) }\n        </div>\n        <IonTextarea \n            placeholder=\"Enter todo title and note here\"\n            name=\"note\"\n            class=\"todoEditInlineTextArea\"\n            autoGrow={true}\n            onIonBlur={handleBlur}\n            onIonChange={handleTitleChange}\n            value={state.text}></IonTextarea>\n        \n        \n        <div>\n          <div className=\"todoButtonsLeftAlign\">\n              <IonButton size=\"small\"  fill=\"clear\" color=\"secondary\" onClick={()=>{dataFunctions.select(null)}}>\n                  <IonIcon  icon={close} /><IonLabel>Close</IonLabel>\n              </IonButton>\n          </div>\n          <div className=\"todoButtonsRightAlign\">\n              <IonButton size=\"small\"  fill=\"clear\" color=\"danger\" onClick={showRemoveWarrning}>\n                  <IonIcon  icon={trash} /><IonLabel>Delete</IonLabel>\n              </IonButton>\n          </div>\n        </div>\n        <div className=\"todoInlineEditPadding\"> </div>   \n\n        <IonAlert\n            isOpen={state.showDeleteWarrning}\n            onDidDismiss={() => hideRemoveWarrning}\n            header={'Warrning!!!'}\n            message={'Are you sure you want to <strong>delete</strong> this task and its sub-tasks?'}\n            buttons={[\n              {\n                text: 'Cancel',\n                role: 'cancel',\n                cssClass: 'secondary',\n                \n              },\n              {\n                text: 'Yes Im Sure',\n                handler: () => remove()\n              }\n            ]}\n          />\n    </div>\n\n  );\n\n}\n\nexport default TodoEditInlineComponent;","import React, { useEffect, useReducer } from 'react';\nimport { IonLabel, IonRow, IonCol, \n        IonIcon, IonGrid, IonItem, IonText, IonAvatar } from '@ionic/react';\nimport { Todo, TodoTag } from './models';\nimport _ from 'lodash';\nimport './todo.component.css'\nimport { DataFunctions } from './hooks/todos.hook';\nimport TodoEditInlineComponent from './todo.edit.inline.component';\nimport { gamifyService } from '../../modules/gamify/gamifyService';\nimport ulog from 'ulog'\nimport check from '../../icons/check.json';\nimport restart from '../../icons/restart.json'\nimport AnimatedIcon from '../../components/animatedIcon';\nimport { COLOR_SUCCESS } from '../../colors';\n\nconst log = ulog('todo');\n\nexport interface TodoState {\n  todo: Todo,\n}\n\n\nconst reducer = (state, {type, payload}): TodoState => {\n  switch(type) {\n    case 'updateTodo':\n      return {...state, ...{todo:payload}};\n    \n    default:\n      return state;\n  }\n}\n\n\n//Component Start\nconst TodoListItemComp = ({todo, tagDocs, selectedTodo, dataFunctions}:\n  {todo:Todo, tagDocs:TodoTag[], lastChild: boolean,  selectedTodo: Todo|null,  dataFunctions: DataFunctions}) => {\n  \n\n  const [state, _dispatch] = useReducer(reducer, \n    {todo: todo, })\n\n  useEffect(() => {\n    dispatch('updateTodo', todo);\n  }, [todo])\n  \n  const dispatch = (type:'updateTodo'|\n                          'any', \n                    payload:any = {}) => {\n    _dispatch({type, payload});\n  }\n  \n  const doneHandler = () => {\n    const newDoc = gamifyService.calculateFinishedTodoRewards(\n        {...state.todo, ...{done: !state.todo.done}});\n    dispatch('updateTodo', newDoc);\n    dataFunctions.save(newDoc);\n  }\n\n  const handleSelectTodo = () => {\n    if(selectedTodo && state.todo.id === selectedTodo.id){\n      dataFunctions.select(null);\n    }\n    else {\n      dataFunctions.select(state.todo);\n    }\n  }\n\n  \n\n  const printSmallTagFromName = (name:string) => {\n    //log.warn(tagDocs);\n    const tag = tagDocs.find(t => t.name === name);\n    if(tag && tag.icon) {\n      return <IonIcon  \n                class=\"todoListItemTagIcon\"\n                key={tag.name}\n                size=\"small\" \n                color='success' \n                src={\"/assets/icons/\"+tag.icon} />\n    }\n\n    return <IonText \n              key={name}\n              class=\"todoListItemTag\"\n              color={COLOR_SUCCESS} >\n              <IonIcon  \n                color='success' \n                src={\"/assets/icons/tag.svg\"} />\n          {name}  \n          </IonText>\n  }\n\n  const printTask = () => (\n    <>\n      <IonItem  button \n            color={((selectedTodo && selectedTodo.id === state.todo.id)? 'light' : '')}   \n            lines=\"full\">\n        \n            <IonAvatar onClick={() => {}} slot=\"start\">\n              {state.todo.done? (\n                <AnimatedIcon  iconsvg={restart} actionFunc={doneHandler} />\n              ) : (\n                <AnimatedIcon  iconsvg={check} actionFunc={doneHandler} />\n              )}\n              \n            </IonAvatar>\n              <IonLabel onClick={handleSelectTodo}>\n              <IonText color=\"primary\">\n                  <h2>{state.todo.name}</h2>\n              </IonText>\n              {state.todo.note? (\n                <IonText color=\"secondary\">\n                  <p>{state.todo.note}</p>\n                </IonText> \n              ) : (<></>)}\n               \n              </IonLabel>\n              {state.todo.tags.sort().map(\n                tag=>printSmallTagFromName(tag)\n              )}\n        </IonItem>\n        {printEdit()}\n    </>\n  )\n\n\n  const printEdit = () => {\n    if(!selectedTodo || selectedTodo.id !== state.todo.id) return;\n    return (\n      <IonGrid>\n        <IonRow>\n            <IonCol class=\"todoTitleColumn\" onClick={() => {}}  >\n              <TodoEditInlineComponent \n                          todo={state.todo}\n                          tagDocs={tagDocs}\n                          dataFunctions={dataFunctions} />\n                        \n            </IonCol>\n        </IonRow>\n      </IonGrid>\n    )\n  }\n  \n\n  return printTask();\n};\n\nexport default TodoListItemComp;\n","import { useEffect, useState, useRef } from 'react';\nimport { Subscription } from 'rxjs';\nimport { Todo, TodoList } from '../models';\nimport { TodoService, TodoState, getInitTodoState } from '../todo.service';\nimport ulog from 'ulog';\n\nconst log = ulog('todo');\n\nexport interface DataFunctions {\n  save: {(doc: Todo, parentId?: string|null):Promise<any>},\n  remove: {(id: string)},\n  select: {(doc: Todo | null)},\n  selectList: {(list: TodoList)},\n  changeDoneFilter: {(done:boolean)}\n  changeOrderFilter: {(type: string)},\n  showNewTag: {(show:boolean)}\n}\n\n\n//more simpler then auth hook, just read data\nexport function useTodosCollectionFacade(\n  projectid: string| undefined, list:string|undefined, tag:string|undefined): \n  [TodoState, DataFunctions]{\n  \n  log.warn(projectid, list, tag);\n                           \n  if(!projectid) throw new Error('Projectid can not be undefined');\n  const [state, setState] = useState(getInitTodoState());\n  const todoService = useRef(new TodoService());\n          \n  const dataFunctions = {\n    save: (doc: Todo, parentId?: string|null):Promise<any> => todoService.current.save(doc, parentId),\n    remove: (id) => todoService.current.remove(id), //TODO: allow user to choose, sync or not to sync\n    select: (doc: Todo | null) => todoService.current.select(doc),\n    selectList: (list: TodoList) => todoService.current.selectList(list),\n    changeDoneFilter: (done:boolean) => todoService.current.changeDoneFilter(done),\n    changeOrderFilter: (filter:string) => todoService.current.changeOrderFilter(filter),\n    showNewTag: (show:boolean) => todoService.current.showNewTagFilter(show),\n  }\n\n  useEffect(() => {\n    todoService.current.init(projectid, list, tag)\n    return todoService.current.unsubscribe;\n  }, [projectid, list, tag])\n\n  useEffect(() => {\n    const subscriptions: Subscription[] = [\n      todoService.current.state$.subscribe(state => {\n        setState(state);\n      })\n    ];\n    return () => { subscriptions.map(it => it.unsubscribe()) };\n  },[projectid]);\n\n\n  return [state, dataFunctions];\n}","\nimport { Habit, habitStage, TYPE_HABBIT } from './models';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { dataService } from '../../modules/data/dataService';\nimport { saveIntoArray, isThisUserProject } from '../../modules/data/utilsData';\nimport { ProjectItem } from '../../modules/data/models';\nimport { gamifyService } from '../../modules/gamify/gamifyService';\nimport _ from 'lodash';\nimport { authService } from '../../modules/auth/authService';\nimport ulog from 'ulog';\n\nconst log = ulog('habits');\n\nexport interface habitsState {\n  selected: Habit | null,\n  habits: Habit[],\n  stageFilter: habitStage\n}\n\nexport const getInitHabitsState = (): habitsState => {\n  return {\n    selected: null,\n    habits: [],\n    stageFilter: habitStage.current\n  }\n}\n\nexport class HabitsService {\n\n  // @ts-ignore:  we force init later on in init function\n  private _project: ProjectItem;\n  public getProject():ProjectItem {return this._project}\n  private _state: habitsState = getInitHabitsState();\n\n  public state$ = new BehaviorSubject(this._state);\n\n  private _docs: Habit[] = [];\n\n  public docs$ = new BehaviorSubject(this._docs);\n\n  private _subscription: Array<Subscription> = [];\n\n  public init(project: ProjectItem) {\n    const dataSub = dataService.getReadySub().subscribe(async (ready) => {\n      if (!ready) return;\n      const equals = _.isEqual(project, this._project);\n      if (equals) return;\n\n      await this._init(project);\n\n      dataSub.unsubscribe();\n    });\n\n  }\n\n  async _init(project: ProjectItem) {\n    if (this._project && this._project.id === project.id) return;\n    this._project = project;\n    this._docs = await dataService.getAllByProject(project.id, TYPE_HABBIT);\n    this.filterhabits();\n\n    //manage changes\n\n    const sub = dataService.subscribeProjectTypeChanges(project.id, TYPE_HABBIT)\n      .subscribe(doc => {\n        if (doc.deleted)\n          this._docs = this._docs.filter(d => d.id !== doc.id);\n        else {\n          this._docs = saveIntoArray(doc, this._docs);\n        }\n        this.filterhabits();\n        //TODO: need to optimize this, maybe start using the view query, see bottom of file\n      });\n    this._subscription.push(sub);\n  }\n\n\n\n  private filterhabits() {\n    const filtered = this._docs.filter(doc => this.filterFunction(doc));\n    this.state = { ...this._state, ...{ habits: filtered } };\n  }\n\n  private filterFunction(doc: Habit) {\n    return (doc.stage === this._state.stageFilter && !doc.deleted)\n  }\n\n\n\n  public get state(): habitsState {\n    return this._state;\n  }\n  public set state(value: habitsState) {\n    this._state = value;\n    this.state$.next(this._state);\n}\n\n  public get docs(): Habit[] {\n    return this._docs;\n  }\n  public set docs(value: Habit[]) {\n    this._docs = value;\n    this.docs$.next(this._docs);\n  }\n\n\n\n  public save(doc: Habit) {\n    log.info(\"Save: \", doc, this._project, TYPE_HABBIT);\n\n    //check if its new, no id, its noew\n    if (!doc.id) {\n      if(isThisUserProject(this._project.id, authService.getUser().id)){\n        doc = Object.assign(gamifyService.calculateNewHabitRewards(doc));\n        gamifyService.removeUserItem(doc.plantName);\n\n        return dataService.save({ ...{ done: false }, ...doc }, TYPE_HABBIT, { projectid: this._project.id });\n      }\n      else {\n\n      }\n    }\n    else\n      dataService.save({ ...{ done: false }, ...doc }, TYPE_HABBIT, { projectid: this._project.id });\n  }\n\n  public remove(id: string) {\n    dataService.remove(id, TYPE_HABBIT);\n  }\n\n  public select(doc: Habit) {\n    this.state = { ...this._state, ...{ selected: doc } };\n  }\n\n  public changeStageFilter(stage: habitStage) {\n    if (stage === this._state.stageFilter) return;\n    this._state = { ...this._state, ...{ stageFilter: stage } };\n    this.filterhabits();\n\n  }\n\n\n  public unsubscribe() {\n    if (!this) return;\n    this._subscription.forEach(sub => {\n      if (sub)\n        sub.unsubscribe();\n    });\n  }\n\n}\n","import { useEffect, useState, useRef } from 'react';\nimport { Subscription } from 'rxjs';\nimport { ProjectItem } from '../../../modules/data/models';\nimport { Habit, habitStage } from '../models';\nimport { habitsState, getInitHabitsState,  HabitsService } from '../habits.service';\nimport _ from 'lodash';\n\nexport interface habitDataFunctions {\n  save: {(doc: Habit)},\n  remove: {(id: string)},\n  select: {(doc: Habit)},\n  changeStageFilter: {(stage: habitStage)}\n}\n\n\n//more simpler then auth hook, just read data\nexport function useHabitsCollectionFacade(project: ProjectItem): \n                                        [habitsState, habitDataFunctions]{\n\n  const [state, setState] = useState(getInitHabitsState());\n\n  const habitsService = useRef(new HabitsService());\n  \n          \n  const dataFunctions = {\n    save: (doc: Habit) => {\n      habitsService.current.save(doc)\n    },\n    remove: (id) => habitsService.current.remove(id), //TODO: allow user to choose, sync or not to sync\n    select: (doc: Habit) => habitsService.current.select(doc),\n    changeStageFilter: (stage: habitStage) => habitsService.current.changeStageFilter(stage),\n  }\n\n  useEffect(() => {\n    if(_.isEqual(habitsService.current.getProject(), project)) \n        return;\n    habitsService.current.init(project)\n\n    return habitsService.current.unsubscribe;\n  }, [project])\n\n  useEffect(() => {\n    const subscriptions: Subscription[] = [\n      habitsService.current.state$.subscribe(state => {\n        setState(state);\n      })\n    ];\n    return () => { subscriptions.map(it => it.unsubscribe()) };\n  },[project]);\n\n\n  return [state, dataFunctions];\n}","import React, { useState, useEffect } from 'react';\nimport { IonHeader, IonIcon, IonBadge } from '@ionic/react';\nimport { Line } from 'rc-progress';\nimport { gamifyService, getInitGamifyState, GamifyState } from '../modules/gamify/gamifyService';\n\n\n\nimport './header.css';\nimport 'rc-progress/assets/index.css';\nimport { heart, leaf } from 'ionicons/icons';\nimport { useHabitsCollectionFacade } from '../pages/habits/hooks/habits.hook';\nimport { getDefaultProject } from '../modules/data/utilsData';\nimport { authService } from '../modules/auth/authService';\nimport { Habit } from '../pages/habits/models';\n\nconst HeaderWithProgress = ({title}:{title:string}) => {\n\n  const [state, setState] = useState<GamifyState>(getInitGamifyState())\n  const [habitsState] = useHabitsCollectionFacade(getDefaultProject(authService.userid));\n  \n  const {experience, maxExperience, level, gold} = state;\n\n  useEffect(() => {\n    const sub = gamifyService.state$.subscribe(s => {\n      setState({...state, ...s});\n\n      //get num of plants\n\n\n\n    })\n    return () => {\n      sub.unsubscribe();\n    };\n  }, [])\n\n  const positionArray = [300, 200, 100, 150, 250, 50, \n      350, 375, 25, 75, 125, 175, 225, 275, 325, 375]\n\n  console.log(habitsState);\n\n  const getPlantSize = (habit:Habit): string => {\n    if(habit.plantLevel < 3) return '5px'\n    if(habit.plantLevel < 6) return '10px';\n\n    return '20px';\n  }\n\n  const getPlantTop = (habit:Habit): string => {\n    if(habit.plantLevel < 3) return '4px'\n    \n    return '10px';\n  }\n\n  return (\n    /*\n        400\n        300，200，100，150，250，50，350，375，25，75，125，175，225，275，325，375\n        400/num\n        380/num\n    */\n    <IonHeader className=\"headerWithAvatar\">\n      <div className=\"cityParent\">\n        <img src=\"/assets/pics/hills.svg\" style={{right:'25px'}} className=\"headerHills\" alt=\"Hills\"/>\n        <img src=\"/assets/pics/hills.svg\" style={{right:'200px'}} className=\"headerHills\" alt=\"Hills\"/>\n        <img src=\"/assets/pics/ground.svg\" className=\"headerGround\" alt=\"Ground\"/>\n        <img src=\"/assets/pics/sun.svg\" style={{right:'130px', top: '10px', width:'5%'}} className=\"headerSkyDetail\" alt=\"Hills\"/>\n        <img src=\"/assets/pics/cloud2.svg\" style={{right:'240px', top: '40px'}} className=\"headerSkyDetail\" alt=\"Hills\"/>\n        <img src=\"/assets/pics/cloud1.svg\" style={{right:'60px', top: '40px'}} className=\"headerSkyDetail\" alt=\"Hills\"/>\n        <img src=\"/assets/pics/cloud2.svg\" style={{right:'140px', top: '15px'}} className=\"headerSkyDetail\" alt=\"Hills\"/>\n\n        {habitsState.habits.map((habit, i )=> (\n          <img  src={'/assets/plants/' + habit.plantName+ '/' + habit.plantLevel + '.svg'}\n                key={habit.id}\n                style={{left: positionArray[i]+'px', bottom: getPlantTop(habit), width: getPlantSize(habit)}} \n                className=\"habitPlant\" alt=\"Plants\"/>\n        \n        ))}\n      \n      \n      \n      </div>\n      <div className=\"statsParent\" >\n        <div className=\"statsBarParent\" >\n  \n        </div>\n        <div className=\"statsBarParent\" >\n        <IonIcon class=\"statsBarIcon\" icon={leaf} style={{color: \"#157F1F\"}} />\n          <Line trailWidth={0}  percent={experience/maxExperience * 100} \n                className=\"statsBarLine\"\n                strokeWidth={4} strokeColor=\"#157F1F\" />\n          <IonBadge class=\"statsBarBadge\" \n                    color=\"success\" >{experience}/{maxExperience}</IonBadge>\n        </div>\n        <div className=\"statsBarMoneyParent\" >\n          <IonBadge class=\"statsBarMoneyBadge\" \n                    color=\"warning\" >Gold: {gold}</IonBadge>\n          <IonBadge class=\"statsBarMoneyBadge\" \n                    color=\"success\" >Level: {level}</IonBadge>\n        </div>\n      </div>\n      <h1>{title}</h1>\n    </IonHeader>\n  )\n}\n\nexport default HeaderWithProgress;","import React from 'react';\nimport {\n  IonPage,\n  IonContent,\n  IonList,\n  IonButton,\n  IonToolbar,\n  IonIcon,\n  IonFab,\n  IonFabButton,\n  IonRefresher,\n  IonRefresherContent} from '@ionic/react';\nimport { Plugins, KeyboardInfo } from '@capacitor/core';\n\nimport TodoNewComp from './todo.new.component';\nimport TodoListItemComp from './Todo.listitem.component';\nimport { useTodosCollectionFacade } from './hooks/todos.hook';\nimport './todos.page.css';\nimport HeaderWithProgress from '../../components/HeaderWithProgress';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { capitalize } from '../../utils';\nimport { getDefaultProject } from '../../modules/data/utilsData';\nimport { authService } from '../../modules/auth/authService';\nimport ulog from 'ulog';\nimport { checkmarkCircleOutline, radioButtonOff, arrowDownOutline, arrowUpOutline, add } from 'ionicons/icons';\nimport { dataService } from '../../modules/data/dataService';\nimport { useTranslation } from 'react-i18next';\n\nconst log = ulog('todo');\nconst { Keyboard, Device } = Plugins;\n\n\nconst TodosPage  = () => {\n\n  const project = getDefaultProject(authService.userid);\n  const location = useLocation();\n  \n  const {t} = useTranslation();\n\n  let list, tag;\n  const params = useParams();\n  log.info(params, location);\n  if(location.pathname.startsWith('/todos/tag/')){\n   tag = params['tag']\n  }\n  else {\n    list = params['list']\n  }\n\n  const [state, dataFunc] = useTodosCollectionFacade(project.id, list, tag)\n  const { docs, selectedTodo, tagDocs } = state;\n\n  const printTitle = ():string => {\n    if(state.list){\n      return 'Todos: ' + capitalize(state.list.name);\n    }\n    return 'Todos';\n  }\n\n  const setKeyboard = async () => {\n    const devInfo = await Device.getInfo();\n    if(devInfo.operatingSystem !== 'ios' &&\n       devInfo.operatingSystem !== 'android') return;\n\n    Keyboard.addListener('keyboardWillShow', (info: KeyboardInfo) => {\n      console.log('keyboard will show with height', info.keyboardHeight);\n    });\n    \n    Keyboard.addListener('keyboardDidShow', (info: KeyboardInfo) => {\n      console.log('keyboard did show with height', info.keyboardHeight);\n    });\n    \n    Keyboard.addListener('keyboardWillHide', () => {\n      console.log('keyboard will hide');\n    });\n    \n    Keyboard.addListener('keyboardDidHide', () => {\n      console.log('keyboard did hide');\n    });\n  }\n\n\n  setKeyboard();\n  \n  return (\n    <IonPage>\n      <HeaderWithProgress title={printTitle()} />\n      <IonContent id=\"todoContent\">\n      <IonRefresher slot=\"fixed\" onIonRefresh={(e) => dataService.refresh(e)}>\n          <IonRefresherContent></IonRefresherContent>\n      </IonRefresher>\n        <div>\n          <IonButton  color={(!state.doneTodos)? 'light':'success'} \n                      class=\"todoHeaderIcons\" \n                      onClick={() => {dataFunc.changeDoneFilter(true)}}\n                      fill=\"clear\">\n                      <IonIcon icon={checkmarkCircleOutline} />\n          </IonButton>\n          <IonButton  color={(state.doneTodos)? 'light':'success'} \n                      class=\"todoHeaderIcons\" \n                      onClick={() => {dataFunc.changeDoneFilter(false)}}\n                      fill=\"clear\">\n                      <IonIcon icon={radioButtonOff} />\n          </IonButton>\n          <IonButton  color={(state.orderFilter!== 'created')? 'light':'success'} \n                      class=\"todoHeaderButtons\" \n                      onClick={() => {dataFunc.changeOrderFilter('created')}}\n                      fill=\"clear\">{t('date')}\n                      {(state.orderFilter === 'created')? (\n                        <IonIcon \n                          icon={((state.orderAsync === -1)? arrowDownOutline : arrowUpOutline)}/>\n                      ) : (<></>) }\n          </IonButton>\n          <IonButton  color={(state.orderFilter !== 'name')? 'light':'success'} \n                      class=\"todoHeaderButtons\" \n                      onClick={() => {dataFunc.changeOrderFilter('name')}}\n                      fill=\"clear\">{t('name')}\n                      {(state.orderFilter === 'name')? (\n                        <IonIcon \n                          icon={((state.orderAsync === -1)? arrowDownOutline : arrowUpOutline)}/>\n                      ) : (<></>) }\n          </IonButton>\n        </div>\n        <IonList>\n            {docs.map(todo => (\n              <TodoListItemComp   todo={todo} \n                                  tagDocs={tagDocs}\n                                  lastChild = {false}\n                                  selectedTodo={selectedTodo}                                 \n                                  dataFunctions={dataFunc}\n                                  key={todo.id} />\n            ))}\n        </IonList>\n        <IonFab vertical=\"top\" horizontal=\"end\" slot=\"fixed\" edge>\n          <IonFabButton onClick={() => dataFunc.showNewTag(true)} >\n            <IonIcon icon={add} />\n          </IonFabButton>\n        </IonFab>\n      </IonContent>\n      <IonToolbar>\n          <TodoNewComp \n            list = {state.list}\n            focus = {state.showNewTagFilter}\n            closeFunc = {() => dataFunc.showNewTag(false)}\n            tag = {tag}\n            projectId={project.id||''} \n            saveFunc={dataFunc.save} />\n      </IonToolbar>\n    </IonPage>\n  );\n};\n\nexport default TodosPage;\n\n","import React from 'react';\nimport { IonHeader, IonToolbar, IonPage, IonTitle, IonContent, IonLabel } from '@ionic/react';\n\n\n\nconst IntroPage: React.FC = () => {\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Loading</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonLabel>Loading.....</IonLabel>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default IntroPage;\n","import { Subscription, BehaviorSubject } from \"rxjs\";\nimport { PartyProject, TYPE_PARTY, Challenge, ChallengeState, ChallengeAction } from \"./models\";\nimport { getPostRequest, post } from '../ajax/ajax';\nimport { env } from \"../../env\";\nimport { loadingService } from \"../loading/loadingService\";\nimport { toastService, ToastType } from \"../toast/toastService\";\nimport { dataService } from \"../data/dataService\";\nimport { waitMS, getChannelFromProjectId } from '../data/utilsData';\nimport { Msg, TYPE_MSG } from \"../messages/models\";\nimport { saveIntoDocList } from \"../../utils\";\nimport ulog from 'ulog';\nimport { authService } from \"../auth/authService\";\n\nconst log = ulog('parties');\n\nexport interface PartyState {\n  docs: PartyProject[],\n}\n\nexport const initPartyState = {\n  docs: []\n}\n\nexport class PartyService {\n  private _subscription: Array<Subscription> = [];\n  \n  private _state: PartyState = initPartyState;\n  public state$ = new BehaviorSubject(this._state);\n  \n  async init(){\n    this.unsubscribe();\n\n\n    const sub1 = dataService.subscribeChanges().subscribe(doc => {\n      if(doc.type === 'party' && doc.secondaryType === 'project'){\n        const docs = saveIntoDocList(doc, this._state.docs);\n        this.state = {...this._state, ...{docs}};\n      }\n    });\n    this._subscription.push(sub1);\n    const docs = await dataService.queryByProperty('secondaryType', 'equals', 'project', TYPE_PARTY);\n    this.state = {...this._state , ...{docs}};\n\n\n  }\n\n  /*\n    Rights, each digit represents different right\n    0.  0 - Not admin 1- Admin, can change everything\n    1.  (Project item) 0 - can't see, 1 - can see, 2 - can edit\n    2.  (Project children) 0 - can't see, 1 - can see own, 2 - can see all items\n    3.  (Project children edit) 0 -can't edit, 1 can edit/make own, 2 can edit all \n  */\n  public async addUser(username:string, party: PartyProject) {\n    try {\n      const res = await post(getPostRequest(env.AUTH_API_URL +'/channels/sendAddMemberRequest',\n                      { token: authService.getToken(), \n                        channelid: getChannelFromProjectId(party.id),\n                        username,\n                        rights: '0121' //see all, edit own items \n                      }), \n                      true, 'Adding member, please wait');\n\n      if(!res.success){\n        return toastService.printServerErrors(res);\n      }\n\n      toastService.showMessage('Member invitation sent', ToastType.success);\n      waitMS(3000);\n      dataService.addSyncCall$.next();\n    }\n    catch (e) {\n      log.error(e);\n    }\n    \n  }\n\n  public saveParty(partyProject: PartyProject){\n    if (!partyProject.id) {\n      this._createParty(partyProject);\n    }\n  }\n\n  //make new party ajax\n  private async _createParty(partyProject: PartyProject) {\n    log.info('Saving party Project::: ', partyProject);\n    loadingService.showLoading('Creating party, please wait, ' +\n                'internet connection required');\n    const res = await dataService.saveNewProject(partyProject, TYPE_PARTY);\n    if(!res.success){\n      return toastService.printServerErrors(res);\n    } \n    loadingService.hideLoading();\n  }\n\n  public saveChallenge(challenge:Challenge, party:PartyProject){\n      this._createChallenge(challenge, party);\n  }\n\n  private async _createChallenge(challenge:Challenge, partyProject: PartyProject) {\n    log.info('Saving System Doc::: ', partyProject);\n    loadingService.showLoading('Adding Challenge, please wait, ' +\n                'internet connection required');\n    const res = await dataService.saveSystemDoc(challenge,partyProject, TYPE_PARTY);\n    if(!res.success){\n      return toastService.printServerErrors(res);\n    }\n    loadingService.hideLoading();\n  }\n\n\n  public async acceptPartyInvitation(msg:Msg){\n    //lets send a request\n    try {\n      const res = await post(getPostRequest(env.AUTH_API_URL +'/channels/acceptChannelInvitation',\n                      { token: authService.getToken(), msgId: msg.id,}, {} ), \n                      true, 'Accept Reply sent, waiting for reply.');\n      if(!res.success){\n        return toastService.printServerErrors(res);\n      }\n\n      toastService.showMessage('Pary Membership request sent. Please wait for app update.', ToastType.success);\n      await waitMS(2000);\n      dataService.addSyncCall$.next();\n      msg.replied = {accepted: true, date: Date.now()};\n      dataService.save(msg, TYPE_MSG);\n    }\n    catch (e) {\n      log.error(e);\n    }\n  }\n\n  public async acceptFriendInvitation(msg:Msg){\n    //lets send a request\n    try {\n      const res = await post(getPostRequest(env.AUTH_API_URL +'/social/acceptFriendInvitation',\n                      { token: authService.getToken(), msgId: msg.id,}, {} ), \n                      true, 'Accept Reply sent, waiting for reply.');\n      if(!res.success){\n        return toastService.printServerErrors(res);\n      }\n\n      toastService.showMessage('Friend acceptance reply sent. Please wait for app update.', \n        ToastType.success);\n\n      await waitMS(2000);\n\n      dataService.addSyncCall$.next();\n\n      msg.replied = {accepted: true, date: Date.now()};\n      dataService.save(msg, TYPE_MSG);\n    }\n    catch (e) {\n      log.error(e);\n    }\n  }\n\n  public async rejectPartyInviation(msg:Msg) {\n    const newMsg = {...msg, ...{replied:{accepted: false, date: Date.now()}}}\n    dataService.save(newMsg, TYPE_MSG);\n  }\n\n  public async rejectFriendInviation(msg:Msg) {\n    const newMsg = {...msg, ...{replied:{accepted: false, date: Date.now()}}}\n    dataService.save(newMsg, TYPE_MSG);\n  }\n\n  public async changeChallengeState(challengeid: string|undefined, state:ChallengeState){\n    if(!challengeid) throw new Error('Challengeid cannot be undefined');\n    try {\n      const res = await post(getPostRequest(env.AUTH_API_URL +'/habits/changeChallengeState',\n                      { token: authService.getToken(), \n                        challengeid, state}, {} ), \n                      true, 'Saving challenge, please wait.');\n      if(!res.success){\n        return toastService.printServerErrors(res);\n      }\n      await dataService.saveFromServer(res.data.doc, TYPE_PARTY);\n\n      toastService.showMessage('Challenge saved.', \n        ToastType.success);\n\n      await waitMS(2000);\n      dataService.addSyncCall$.next();\n      await waitMS(2000);\n      dataService.addSyncCall$.next();\n    }\n    catch (e) {\n      log.error(e);\n    }\n  }\n\n  public async submitChallengeActions(challengeid: string|undefined, actions: ChallengeAction[]){\n    if(!challengeid) throw new Error('Challengeid cannot be undefined');\n    try {\n      const res = await post(getPostRequest(env.AUTH_API_URL +'/habits/submitChallengeActions',\n                      { token: authService.getToken(), \n                        challengeid, actions}, {} ), \n                      true, 'Saving challenge, please wait.');\n      if(!res.success){\n        return toastService.printServerErrors(res);\n      }\n      if(res.data && res.data.challenge)\n        dataService.saveFromServer(res.data.challenge, TYPE_PARTY);\n\n      if(res.data && res.data.rewards >= 0) {\n        log.info('Shwoing rewards::: ', res.data.rewards);\n        toastService.showMessage('You have recieved '+res.data.rewards, \n        ToastType.success);\n      }\n\n      await waitMS(2000);\n      dataService.addSyncCall$.next();\n      await waitMS(2000);\n      dataService.addSyncCall$.next();\n       \n    }\n    catch (e) {\n      log.error(e);\n    }\n  }\n\n  public async acceptChallenge(challenge:Challenge, data:any = {}){\n    //lets send a request\n    try {\n      const res = await post(getPostRequest(env.AUTH_API_URL +'/habits/acceptChallenge',\n                      { token: authService.getToken(), \n                        data,\n                        challengeid: challenge.id}, {} ), \n                      true, 'Accept Reply sent, waiting for reply.');\n      if(!res.success){\n        return toastService.printServerErrors(res);\n      }\n      toastService.showMessage('Challenge acceptance request sent', \n        ToastType.success);\n      await dataService.saveFromServer(res.data.doc, TYPE_PARTY);\n      await waitMS(2000);\n      dataService.addSyncCall$.next();\n    }\n    catch (e) {\n      log.error(e);\n    }\n  }\n\n\n  public get state(): PartyState {\n    return this._state;\n  }\n  public set state(value: PartyState) {\n    console.log('State: ', value);\n    this._state = value;\n    this.state$.next(this._state);\n  }\n\n  public unsubscribe() {\n    if(!this) return;\n    this._subscription.forEach(sub => {\n      if(sub)\n        sub.unsubscribe();\n    });\n  }\n\n}\n\nexport const partyService = new PartyService();","import i18n from 'i18next';\nimport { initReactI18next } from \"react-i18next\";\nimport Backend from 'i18next-xhr-backend';\n//import LanguageDetector from 'i18next-browser-languagedetector';\nimport { Globalization } from '@ionic-native/globalization'\nimport { dataService } from './modules/data/dataService';\n\n\n\nconsole.log();\n\n\ni18n\n  .use(initReactI18next) \n  .use(Backend)\n  //.use(LanguageDetector)\n  .init({\n    interpolation: {  escapeValue: false },  // React already does escaping\n    lng: 'en',   \n    fallbackLng: 'en',                           // language to use\n    backend: {\n      loadPath: '/locales/{{lng}}/{{ns}}.json'\n    },\n    react: {\n      wait: true,\n      useSuspense: false,\n    },\n    debug: true,\n    //defaultNS: 'common',\n    //ns: ['common',],\n    \n    //debug: process.env.NODE_ENV !== 'production',\n});\n\n\nexport const loadPreferedLanguage = async () => {\n  //first\n  //see if we have a settings doc\n  let language;\n  const doc = await dataService.getSettingsDoc();\n  if(!doc || !doc.language){\n    language = await Globalization.getPreferredLanguage()\n    console.log(language);\n    \n  }\n  else {\n    language = doc.language;\n    console.log(doc) \n  }\n  \n  if(!language) return;\n  console.log('Changing to language::: ', language);\n  i18n.changeLanguage(language);\n}\n\nexport default i18n;\n","import { useEffect, useState } from 'react';\nimport { Subscription } from 'rxjs';\nimport { dataService } from '../../data/dataService';\nimport { GUEST, authService } from '../../auth/authService';\nimport { gamifyService } from '../../gamify/gamifyService';\nimport { partyService } from '../../parties/party.service';\nimport ulog from 'ulog';\nimport { loadPreferedLanguage } from '../../../i18n';\n\nconst log = ulog('app');\n\nexport enum AppStatus {\n  loading, auth, guest\n}\n\n\n\n// username, authenticated, login, logout, renewToken\nexport function useAppStatus(): [{status:AppStatus, dataReady:boolean, username:string}] {\n\n  const [appStatus, setAppStatus] = useState({status: AppStatus.loading, dataReady: false, username: GUEST});\n\n\n  log.info('APP Router Status: ', appStatus);\n\n  useEffect(() => {\n    log.info('App Stats Effect::');\n    const subscriptions: Subscription[] = [\n      dataService.getReadySub().subscribe(ready => {\n        if(ready === appStatus.dataReady) return;\n          setStatusFunction();\n      }),\n      authService.username$.subscribe(async (username) => {\n        //renew token\n        if(authService.getIsAuthenticated()){\n          authService.renewToken();\n        }\n        setStatusFunction();\n        const userid = authService.getUser().id;\n        await dataService.init( userid, username !== GUEST);\n        await gamifyService.init(userid);\n        await partyService.init();\n        await loadPreferedLanguage();\n        dataService.addSyncCall$.next();\n      }),\n\n    ];\n    // usersService.loadAll();\n    return () => { subscriptions.map(it => it.unsubscribe()) };\n  },[]);\n\n\n  const setStatusFunction = () => {\n    const dataReady = dataService.ready;\n    const username = authService.getUsername();\n    if(dataReady === appStatus.dataReady && username === appStatus.username)\n      return;\n    log.info('STATUS:', dataReady, username, appStatus);\n    \n    if(dataReady){\n      if(username === GUEST)\n        setAppStatus({ status:AppStatus.guest, username: username, dataReady: dataReady });\n      else\n        setAppStatus({ status:AppStatus.auth, username: username, dataReady: dataReady });\n    }\n    else {\n      setAppStatus({ status:AppStatus.loading, username: username, dataReady: dataReady });\n    }\n  };\n\n  return [ appStatus ];\n}","import { Subscription, BehaviorSubject } from \"rxjs\";\nimport { getPostRequest, post } from '../ajax/ajax';\nimport { env } from \"../../env\";\nimport { authService } from '../auth/authService';\nimport { toastService, ToastType } from \"../toast/toastService\";\nimport { dataService } from \"../data/dataService\";\nimport { waitMS } from '../data/utilsData';\nimport { Friend } from \"./models\";\n\nexport interface SocialState {\n  friends: Friend[],\n}\n\nexport const initSocialState = {\n  friends: []\n}\n\n\n\nexport class SocialService {\n  private _subscription: Array<Subscription> = [];\n  private _userid = ''\n  private _state: SocialState = initSocialState;\n  public state$ = new BehaviorSubject(this._state);\n  \n  async init(userid){\n    if(userid === this._userid) return;\n    this._userid = userid;\n    this.unsubscribe();\n    this._init();\n  }\n\n  private async _init() {\n\n  }\n\n  public async addFriend(username?:string) {\n    try {\n      const res = await post(getPostRequest(env.AUTH_API_URL +'/social/sendAddFriendRequest',\n                      { token: authService.getToken(), \n                        username,\n                      }), \n                      true, 'Sending invitatin request, please wait');\n      if(!res.success){\n        return toastService.printServerErrors(res);\n      }\n\n      toastService.showMessage('Friend invitation sent', ToastType.success);\n\n      waitMS(3000);\n\n      dataService.addSyncCall$.next();\n    }\n    catch (e) {\n      console.log(e);\n    }\n    \n  }\n\n\n  public get state(): SocialState {\n    return this._state;\n  }\n  public set state(value: SocialState) {\n    this._state = value;\n    this.state$.next(this._state);\n  }\n\n\n\n  public unsubscribe() {\n    if(!this) return;\n    this._subscription.forEach(sub => {\n      if(sub)\n        sub.unsubscribe();\n    });\n  }\n\n}\n\nexport const socialService = new SocialService();","import React, { useReducer } from 'react';\nimport { IonCard, IonCardTitle, IonCardHeader, IonCardContent, IonList, IonItem, IonAlert, IonFooter, IonButton, IonLabel } from '@ionic/react';\nimport  ulog from 'ulog';\nimport { Friend } from '../models';\nimport { socialService } from '../social.service';\nimport { useTranslation } from 'react-i18next';\nconst log = ulog('social');\n\nexport interface FriendsState {\n  showAddModal: boolean,\n  friends: Friend[],\n}\n\n\nconst reducer = (state, action): FriendsState => {\n  switch(action.type) {\n    case 'showAddMemberModal':\n      return {...state, ...{showAddModal: true}};\n    case 'hideAddMemberModal':\n      return {...state, ...{showAddModal: false}};\n\n    default:\n      log.error('Action type is not a match');\n      return state;\n  }\n}\n\nconst FriendsListComponent = () => {\n  const [state, _dispatch] = useReducer(reducer, {\n    showAddModal: false,\n    friends: [],\n  })\n\n  const { t } = useTranslation();\n\n  const dispatch = (type: 'showAddMemberModal'|\n                          'hideAddMemberModal', \n                    data:any = {}) => {\n    _dispatch({type, data});\n  }\n\n  const addFriend = () => {\n    dispatch(\"showAddMemberModal\");\n    \n  }\n\n  const hideAddUser = () => {\n    dispatch('hideAddMemberModal');\n  }\n\n  return (\n    <IonCard>\n      <IonCardHeader>\n        <IonCardTitle>{t('Friends')}</IonCardTitle>\n      </IonCardHeader>\n      <IonCardContent>\n        <IonList>\n            {state.friends.map(member => (\n              <IonItem  button \n                        key={member.id}\n                        onClick={() => {}}>\n              <IonLabel>\n                {member.username}\n              </IonLabel>\n            </IonItem>\n            ))}\n        </IonList>\n        \n      </IonCardContent>\n        <IonFooter>\n          <IonButton onClick={()=>addFriend()} fill=\"clear\">{t('Add Friend')}</IonButton>\n        </IonFooter>\n      <IonAlert \n        isOpen={state.showAddModal}\n        onDidDismiss={() => hideAddUser()}\n        header= {t('Friends Username')}\n        inputs={[\n          {\n            name: 'username',\n            type: 'text',\n            id: 'username',\n\n\n          }\n        ]}\n        buttons={[\n          {\n            text: t('Cancel'),\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: () => {\n              hideAddUser();\n            }\n          },\n          {\n            text: t('Invite Friend'),\n            handler: (data) => {\n              socialService.addFriend(data.username);\n              hideAddUser();\n            }\n          }\n        ]}\n      />\n    </IonCard>\n  )\n\n}\nexport default FriendsListComponent;","import React, { useReducer, useEffect } from 'react';\nimport { IonCard, IonCardTitle, IonCardHeader, IonCardContent, IonList, IonItem, IonLabel, IonAvatar, IonIcon, IonText, IonButton } from '@ionic/react';\nimport  ulog from 'ulog';\nimport { Msg } from '../../messages/models';\nimport { dataService } from '../../data/dataService';\nimport { TYPE_MSG } from '../models';\nimport { mail, personAdd, happy, sad, peopleCircle, documentTextOutline } from 'ionicons/icons';\nimport { printDateRelative, saveIntoArray } from '../../../utils';\nimport { partyService } from '../../parties/party.service';\nimport { COLOR_SUCCESS, COLOR_WARNING } from '../../../colors';\nimport './messages.css';\nconst log = ulog('messages');\n\nexport interface MessagesState {\n  messages: Msg[],\n}\n\n\nconst reducer = (state, {type, payload}): MessagesState => {\n  switch(type) {\n    case 'setMessages':\n      return {...state, ...{messages: payload}};\n      case 'updateMessage':\n        return {...state, ...{messages: saveIntoArray(payload, state.messages)}};\n    default:\n      log.error('Action type is not a match');\n      return state;\n  }\n}\n\nconst MessagesListComponent = ({channel}:{channel:string}) => {\n  const [state, _dispatch] = useReducer(reducer, {\n    messages: [],\n  })\n  log.warn('MSSGS:  ', channel);\n  useEffect(() => {\n    loadMsgs()\n    const sub = dataService.subscribeChannelTypeChanges(channel, TYPE_MSG)\n                    .subscribe(doc => {\n                        log.info(doc);\n                        dispatch('updateMessage', doc);\n                    });\n    return () => {\n      sub.unsubscribe();\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [channel])\n\n  const dispatch = (type: 'setMessages'|\n                          'updateMessage', \n                    payload:any = {}) => {\n    _dispatch({type, payload});\n  }\n\n  const loadMsgs = async () => {\n    log.info('Get all by project, type', channel, TYPE_MSG);\n    const msgs = await dataService.getAllByChannel(channel, TYPE_MSG);\n    log.warn(msgs);\n    dispatch('setMessages', msgs.sort((a,b)=>{\n      if(a.updated < b.updated) return 1;\n      return -1;\n    }))\n    log.info(msgs, channel);\n  }\n\n  const printMessageIcon = (msg) => {\n    if(msg.messageType === 'event'){\n      return <IonIcon icon={mail}  slot=\"start\" />\n    }\n    else if(msg.messageType === 'channelinvite') {\n      return <IonIcon icon={peopleCircle}  slot=\"start\" />\n    }\n    else if(msg.messageType === 'friendinvite') {\n      return <IonIcon icon={personAdd}  slot=\"start\" />\n    }\n    else if(msg.messageType === 'action' && msg.messageSubType === 'Note2') {\n      return <IonIcon icon={documentTextOutline}  slot=\"start\" />\n    }\n  }\n\n  const printReplyStatus = (msg:Msg) => {\n    if((msg.messageType === 'channelinvite' || msg.messageType === 'friendinvite')\n        && msg.replied !== undefined) {\n      if(msg.replied) {\n        return <IonIcon icon={happy} size='large' \n                        slot=\"end\"\n                        color={COLOR_SUCCESS} />\n      }\n      else {\n        return <IonIcon icon={sad} size='large' \n                        slot=\"end\"\n                        color={COLOR_WARNING} />\n      }\n    }\n  }\n\n  const printClubRequestAcceptRejectButtons = (msg:Msg) => {\n    if(msg.messageType === 'channelinvite' && msg.replied === undefined){\n      return (\n        <div>\n          <IonButton onClick={() => partyService.acceptPartyInvitation(msg)} >\n            Accept</IonButton>\n          <IonButton onClick={() => partyService.rejectPartyInviation(msg)}> \n            Reject</IonButton>\n        </div>\n      )\n    }\n  }\n\n  const printFriendRequestAcceptRejectButtons = (msg:Msg) => {\n    if(msg.messageType === 'friendinvite' && msg.replied === undefined){\n      return (\n        <div>\n          <IonButton onClick={() => partyService.acceptFriendInvitation(msg)} >\n            Accept</IonButton>\n          <IonButton onClick={() => partyService.rejectFriendInviation(msg)}> \n            Reject</IonButton>\n        </div>\n      )\n    }\n  }\n\n  const printMessage = (msg) => {\n    if(msg.messageType === 'event'){\n      return <IonItem  button \n                key={msg.id}\n                onClick={() => {}}>\n        {printMessageIcon(msg)}\n        <IonLabel className=\"ion-text-wrap\">\n          <h3>{msg.message}</h3>\n          <IonText color=\"secondary\">\n              <p>{printDateRelative(msg.updated)}</p>\n          </IonText>\n        </IonLabel>\n      </IonItem>\n    }\n    else if(msg.messageType === 'channelinvite') {\n      return <IonItem  button \n                key={msg.id}\n                onClick={() => {}}>\n        {printMessageIcon(msg)}\n        <IonLabel className=\"ion-text-wrap\">\n          <h2>{msg.from} has invited you to join his club, \n          <strong>{msg.data.name}</strong></h2>\n          <IonText  color=\"secondary\">\n            {printDateRelative(msg.updated)}\n          </IonText>\n            {printClubRequestAcceptRejectButtons(msg)}\n          \n        </IonLabel>\n        {printReplyStatus(msg)}\n      </IonItem>\n    }\n    else if(msg.messageType === 'friendinvite') {\n      return <IonItem  button \n                key={msg.id}\n                onClick={() => {}}>\n        {printMessageIcon(msg)}\n        <IonLabel className=\"ion-text-wrap\">\n            <h2>You have received friend request from \n            <strong> {msg.from}</strong></h2>\n            <IonText  color=\"secondary\">\n              {printDateRelative(msg.updated)}\n            </IonText>\n              {printFriendRequestAcceptRejectButtons(msg)}\n        </IonLabel>\n        {printReplyStatus(msg)}\n      </IonItem>\n    }  \n    else if(msg.messageType === 'action' && msg.messageSubType === 'Note') {\n      return <IonItem  button \n                key={msg.id}\n                onClick={() => {}}>\n        {printMessageIcon(msg)}\n        <IonLabel className=\"ion-text-wrap, messageActionNote\">\n            <h2 className=\"messageActionNoteHeader\">{msg.challengeName}: <strong>{msg.username}</strong></h2>\n            <h3  dangerouslySetInnerHTML={{__html: msg.data.note.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>')}} />\n             \n            <IonText  color=\"secondary\">\n              {printDateRelative(msg.updated)}\n            </IonText>\n        </IonLabel>\n        {printReplyStatus(msg)}\n      </IonItem>\n    }                                     \n  }\n\n\n  return (\n    <IonCard>\n      <IonCardHeader>\n        <IonCardTitle>Messages</IonCardTitle>\n      </IonCardHeader>\n      <IonCardContent>\n        <IonList>\n            {state.messages.map(msg=> printMessage(msg))}\n        </IonList>\n        \n      </IonCardContent>\n    </IonCard>\n  )\n\n}\nexport default MessagesListComponent;","import {\n  IonPage,\n  IonContent} from '@ionic/react';\nimport React, { useReducer, useEffect } from 'react';\nimport './Home.css';\nimport HeaderWithProgress from '../components/HeaderWithProgress';\nimport FriendsListComponent from '../modules/social/components/Friends.list.component';\nimport MessagesListComponent from '../modules/messages/components/Messages.list.component';\nimport ulog from 'ulog';\nimport { generateUserChannelId } from '../modules/data/utilsData';\nimport { authService } from '../modules/auth/authService';\n\nconst log = ulog('home');\n\n\nexport interface HomeState {\n  userid: string;\n}\n\nconst reducer = (state, {type, payload}:{type:string, payload:any}): HomeState => {\n  switch(type) {\n    case 'setUserid':\n      return {...state, ...{userid: payload}};\n    default:\n      log.error('Action Type is incorrect, default called', type, payload);\n      return state;\n  }\n}\n\nconst Home: React.FC = () => {\n\n  const [state, _dispatch] = useReducer(reducer, {\n    userid:''\n  })\n\n  const dispatch = (type:'setUserid', \n                    payload: any = {}) => {\n    _dispatch({type, payload});\n  }\n\n\n  useEffect(() => {\n    const sub = authService.username$.subscribe(() => {\n      log.info('Userid update, ', authService.userid);\n      dispatch('setUserid', authService.userid);\n    });\n    log.info('HOME, ', authService.userid);\n    dispatch('setUserid', authService.userid);\n    log.info('Home State', authService.userid);\n    return () => {\n      sub.unsubscribe();\n    };\n  }, [])\n\n  return (\n    <IonPage>\n      <HeaderWithProgress title=\"HabitVille\" />\n      <IonContent >\n        <FriendsListComponent />\n        <MessagesListComponent channel={generateUserChannelId(state.userid)} />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Home;\n\n","import {\n  IonPage,\n  IonContent,\n  IonHeader,\n  IonTitle,\n  IonToolbar} from '@ionic/react';\nimport React, {  } from 'react';\nimport HeaderWithProgress from '../components/HeaderWithProgress';\n\n\nconst NotFound: React.FC = () => {\n\n  return (\n    <IonPage>\n      <HeaderWithProgress title=\"I think it was left or was it right?\" />\n      <IonContent >\n        <div style={{padding:'20px'}}>\n          This page does not exist\n        </div>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default NotFound;\n\n","import React from 'react'\nimport {  IonInput, IonLabel, IonItem,\n  IonNote, IonText } from '@ionic/react';\n\n\nconst MyInput = ({data, updateFunction}) => {\n\n\n\n  //const [_data, setData] = useState<FormValueItem>(data); \n\n  /*\n  useEffect(() => {\n    props.attachToForm({name:props.name, value: props.value});\n\n    return props.detachFromForm({name:props.name, value:props.value});\n  },[props]);\n  */\n\n  //console.log(\"MY Input DATA: \", data);\n\n  const handleChange = (event) => {\n    updateFunction({...data, ...{value: event.target.value, dirty: true}});\n  };\n\n  const handleBlur = (event) => {\n    if(data.dirty === true) return;\n    updateFunction({...data, ...{value: event.target.value, dirty: true}});\n  }\n\n  const printErrors = () => {\n    if(data.dirty){\n      const errors =data.errors.map(m => (\n        <IonNote key={m} color=\"danger\">{m}</IonNote>\n      ))\n      return errors;\n    }\n  }\n\n\n  return (\n    <IonItem>\n      <IonLabel position=\"stacked\">\n        {data.displayName}\n        { data.hasValidation?(\n          <IonText color=\"danger\">*</IonText>\n        ):null}\n      </IonLabel>\n      <IonInput \n        name={data.id}\n        value={data.value}\n        type={data.type}\n        onIonBlur={handleBlur}\n        onIonChange={handleChange}></IonInput>\n        {data.messages.map(m => (\n          <IonNote key={m}>{m}</IonNote>\n        ))}\n        {printErrors()}\n    </IonItem>\n  )\n}\n\nexport default MyInput;","import React, { useEffect, useState } from 'react'\nimport MyInput from './myInput';\nimport { saveIntoArray, findById } from '../../utils';\nimport { IonButton } from '@ionic/react';\nimport validator from 'validator';\n\n\n// use to generate form, usually from outside form passed into here\n// so far we can use, ones that have stars have been tested\n// \"text\", \"password\", \"email\", \"number\", \"search\", \"tel\", and \"url\"\nexport interface FormItem { \n  id: string;\n  displayName?: string;\n  type: string;\n  messages?: string[];\n  validators?: any[];  \n  default?: any;\n}\n\nexport interface ValidatorItem {\n  type: string;\n  message?: string|null;\n  options?: any;\n}\n\n\n// use to hold form state\nexport interface FormValueItem {\n  id: string;\n  displayName: string;\n  type: string;\n  value: string;\n  messages: string[];\n  errors: string[];\n  dirty: boolean;\n  hasValidation:boolean;\n  //status: number; //0: untouched, 1: valid, 2: not valid\n}\n\nexport interface OptionsItem {\n  submitButtonText: string;\n}\n\nexport const defaultOptions:OptionsItem = {\n  submitButtonText: \"Submit\",\n}\n\nexport const getFormOptions = (settings:{}) => {\n  return {...defaultOptions, ...settings};\n}\n\nexport interface Props {\n  items: FormItem[],\n  submitFunction: Function,\n  options?: OptionsItem\n}\n\nexport interface State {\n  items: FormValueItem[],\n  valid: boolean\n}\n\nexport function getValidator(type:string, options:any = null, message:string|null = null):ValidatorItem {\n  return {type, options, message};\n}\n\n\n\nconst MyForm = (props:Props) => {\n  const submitFunction = props.submitFunction;\n  const options = props.options|| defaultOptions;\n\n  const [state, setState] = useState<State>({items:[], valid:false});\n\n  useEffect(() => {\n    initForm(props.items);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[props.items]);\n\n\n  const initForm = (items) => {\n    let model: FormValueItem[] = [];\n    // go thourgh props and generate our model from schema;\n    if(items) { //no schema, do nothing\n      items.forEach((item:FormItem) => {\n        let messages = item.messages;\n        \n        console.log(typeof(messages));\n        if(typeof(messages) === 'string'){\n          console.log('Messages is string');\n        }\n        else if(Array.isArray(messages)){\n          console.log('messages array');\n        }\n        else {\n          messages = [];\n        }\n\n        model.push(validateItem({\n            id: item.id,\n            displayName: item.displayName || item.id, \n            type: item.type,\n            value: item.default||'', \n            messages,\n            errors: [],\n            dirty:false,\n            hasValidation: (Array.isArray(item.validators) && item.validators.length>0)\n        }));\n      });\n      setState({items: model, valid: validateForm(model)});\n      //console.log(state);\n    }\n  }\n\n  //const updateItem = (id:string, displayName: string, type: string, value:any, messages:string[], hasValidation:boolean, touched:boolean) => {\n  const updateItem = (item:FormValueItem) => {\n    //console.log('Update Item, ', item);\n    const items = saveIntoArray(validateItem(item), state.items, 'id')\n    setState({\n      items: items,\n      valid: validateForm(items)\n    });\n  }\n\n\n\n  const validateItem = (item:FormValueItem): FormValueItem => {\n    const errors: string[] = validate(item.id, item.value);\n    //console.log(item)\n    return {...item, ...{errors}}\n  }\n\n  const validate = (id:string, value:any): string[] => {\n    //console.log(typeof(value));\n\n    if(typeof(value) !== 'string') return [];\n    \n    const item:FormItem = findById(id, props.items, 'id');\n    if(!item.validators)\n      item.validators = [];\n\n    const messages: string[] = [];\n    item.validators.forEach((val:ValidatorItem) => {\n      if(val.type === 'isEmpty') {\n        if(validator.isEmpty(value)){\n          messages.push(val.message || 'Value cannot be empty')\n        }\n      }\n      if(val.type === 'isLength'){\n        if(!validator.isLength(value, val.options)){\n          messages.push(val.message || 'Value length is not valid');\n        }\n      }\n      if(val.type === 'isEmail'){\n        if(!validator.isEmail(value, val.options)){\n          messages.push(val.message || 'Valid Email required');\n        }\n      }\n    });\n\n    //lastly check the whole form\n\n    //if(messages.length === 0)\n    //  validateForm();\n\n    return messages;\n  }\n\n\n  const submit = () => {\n    const form = {};\n    state.items.forEach(item => {\n      form[item.id] = { value: item.value };\n    });\n    submitFunction(form);\n    console.log(state);\n  }\n\n  const validateForm = (items = state.items) => {\n    let errors = 0;\n    items.forEach(item => {\n      errors += item.errors.length;\n    });\n\n    return errors === 0;\n  }\n  \n\n  return (\n    <div>\n        { Object.values(state.items).map((i) => (\n          <MyInput key={i.id} data={i} updateFunction={updateItem} />\n        ))}\n          <IonButton  \n            key={'submitButton'}\n            onClick={submit} \n            disabled={!state.valid}\n            color=\"primary\">{options.submitButtonText}</IonButton>\n    </div>\n  )\n\n};\n\nexport default MyForm;\n\n\n\n/*\n  const attachToForm = (component) => {\n    setInputs({...inputs, ...{[component.props.name]: component}});\n    setModel({...model, ...{[component.props.name]: component.state.value}});\n  };\n\n  const detachFromForm = (component) => {\n    const i = Object.assign({}, inputs);\n    delete i[component.props.name]\n    setInputs(i);\n\n    const m = Object.assign({}, model);\n    delete m[component.props.name];\n    setModel(m);\n  }\n\n  const updateModel = () => {\n    const m = Object.assign({}, model);\n    Object.keys(inputs).forEach((name) => {\n      m[name] = inputs[name].state.value;\n    });\n\n    setModel(m);\n  }\n\n  const submit = (event) => {\n    event.preventDefault();\n    updateModel();\n    console.log(model);\n  }\n\n  const getElement = (type) => {\n    if(type === 'string'){\n      return (\n        <div>type</div>\n      )\n    }\n  }\n*/","import React from 'react';\nimport { IonButton } from '@ionic/react';\nimport './auth.css';\nimport { useLocation, useHistory } from 'react-router-dom';\n\n\n\n\n\nconst AuthMenuComponent = ({page}: {page:string}) => {\n  const location = useLocation();\n  const history = useHistory();\n  \n  const push = (url:string) => {\n    if(location.pathname && url !== location.pathname){\n      history.push(url);\n    }\n  }\n\n  return (\n    <div className=\"authMenuParent\" >\n      <IonButton  onClick={() => push('/auth/login')}\n                  size=\"small\"  \n                  color={(page==='login')? 'success':'light'}\n                  fill=\"clear\">\n          Login\n      </IonButton>\n      <IonButton   onClick={() => push('/auth/register')}\n                  size=\"small\"  \n                  color={(page==='register')? 'success':'light'}\n                  fill=\"clear\">\n          Register\n      </IonButton>\n\n    </div>\n  );\n}\nexport default AuthMenuComponent;","import React from 'react';\nimport {\n  IonIcon,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonContent,\n  IonPage\n} from \"@ionic/react\"; \nimport { logIn} from 'ionicons/icons';\nimport MyForm, { getValidator, FormItem, getFormOptions } from '../../forms/myForm';\nimport { authService } from '../authService';\nimport { useLocation, useHistory } from 'react-router';\nimport AuthMenuComponent from './auth.menu.component';\nimport './auth.css';\n\nconst LoginPage  = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const options = getFormOptions({\n    submitButtongText: \"Login\"\n  });\n  \n  const form: FormItem[] = [\n    {\n      id: 'id',\n      displayName: 'ID (Username or Email): ',\n      type: 'string',\n      validators: [\n        getValidator('isLength', {min:3, max:50}, 'ID needs to be between 3 to 50 characters')\n  \n      ],\n    },\n    {\n      id: 'password',\n      displayName: \"Password: \",\n      type: 'password',\n      validators: [\n        getValidator('isLength', {min:3, max:50}, 'ID needs to be between 3 to 50 characters')\n      ]\n    },\n    \n  ]\n  \n  const submit = async (form) => {\n    authService.loginAndRedirect(\n        form['id'].value, \n        form['password'].value,\n        history,\n        location);\n  }\n\n\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"primary\">\n          <IonTitle>Login</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <div style={{paddingTop:'50px'}} className=\"ion-text-center\">\n          <IonIcon icon={logIn} color=\"primary\" className=\"iconFormCenter\" />\n        </div>\n        <AuthMenuComponent page=\"login\" />\n        <div style={{padding:'20px'}}>\n          <MyForm  items={form} options={options} submitFunction={submit} /> \n        </div>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default LoginPage;\n","import React, {  } from 'react';\n\nimport {\n  IonIcon,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonContent,\n  IonPage\n} from \"@ionic/react\";\nimport { logIn} from 'ionicons/icons';\nimport MyForm, { getValidator, FormItem, getFormOptions } from '../../forms/myForm';\nimport { authService } from '../authService';\nimport { useLocation, useHistory } from 'react-router';\nimport AuthMenuComponent from './auth.menu.component';\nimport './auth.css';\n\nconst RegisterPage  = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const options = getFormOptions({\n    submitButtongText: \"Login\"\n  });\n  \n  const form: FormItem[] = [\n    {\n      id: 'username',\n      displayName: 'Username: ',\n      type: 'string',\n      validators: [\n        getValidator('isLength', {min:3, max:20}, 'Username needs to be between 3 to 20 characters')\n  \n      ],\n    },\n    {\n      id: 'email',\n      displayName: 'Email: ',\n      type: 'string',\n      validators: [\n        getValidator('isEmail',{}, 'Email is not valid')\n  \n      ],\n    },\n    {\n      id: 'password',\n      displayName: \"Password: \",\n      type: 'password',\n      validators: [\n        getValidator('isLength', {min:3, max:50}, 'Password needs to be between 3 to 50 characters')\n      ]\n    },\n    \n  ]\n  \n  const submit = async (form) => {\n    const res = await authService.register(\n                        form['username'].value, \n                        form['email'].value,\n                        form['password'].value);\n    if(res){\n      authService.loginAndRedirect(\n                        form['username'].value, \n                        form['password'].value,\n                        history,\n                        location)\n    }\n  }\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"primary\">\n          <IonTitle>Register</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <div style={{paddingTop:'50px'}} className=\"ion-text-center\">\n          <IonIcon  color=\"primary\"\n                    icon={logIn} \n                    className=\"iconFormCenter\" />\n        </div>\n        <AuthMenuComponent page=\"register\" />\n        <div style={{padding:'20px'}}>\n          <MyForm  items={form} options={options} submitFunction={submit} /> \n        </div>\n\n        \n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default RegisterPage;\n","import React, { FunctionComponent } from \"react\";\nimport { Route, Redirect, useLocation } from \"react-router-dom\";\nimport LoginPage from './components/login.page';\nimport RegisterPage from './components/register.page';\n\n\nconst UnauthenticatedRoute = ({ exact, path }: \n  { component: FunctionComponent<{}>, exact: boolean, path: string }) => {\n\n  \n  const location = useLocation();\n  // const history = useHistory();\n  // const params = useParams();\n  // const path = location.pathname;\n  \n  // console.log(\"Location:::: \", location);\n  // console.log('HISTORY:::: ', history);\n  // console.log('PARAMS:::: ', params);\n\n\n  const getRoute = () => {\n    if(location.pathname === '/auth/register'){\n      return <Route path={path} \n                    component={RegisterPage} \n                    exact={exact} />;\n    }\n    else if(location.pathname === '/auth/login'){\n      return <Route\n                path='/auth/login'\n                render={() => <LoginPage />}\n              />\n    }\n    else {\n      return <Redirect to={{\n              pathname: \"/auth/login\",\n              state: {prev: location.pathname}\n            }}/>;\n    }\n  }\n  \n\n  return (\n    getRoute()\n  );\n}\n\n\n\n\n\n/*\n\n\n\n\nconst  PrivateRoute = ({ component: Component, ...rest }) => {\n\n  const [authenticated] = useUserFacade();\n  //const location = useLocation();\n\n  //console.log(location);\n\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        authenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: \"/auth/login\"}}\n          />\n        )\n      }\n    />\n  );\n}\n*/\nexport default UnauthenticatedRoute;","import React, { useState, useEffect } from 'react';\nimport { IonItem, IonCard, IonCardHeader, IonCardTitle, IonIcon, IonFab, IonFabButton, IonCardContent, IonGrid, IonRow, IonCol, IonNote, IonBadge, IonLabel } from '@ionic/react';\nimport { COLOR_LIGHT, COLOR_DARK, COLOR_SUCCESS, COLOR_DANGER, COLOR_SECONDARY, COLOR_PRIMARY, COLOR_MEDIUM, COLOR_WARNING } from '../../colors';\nimport { radioButtonOff, checkmarkCircleOutline, cog } from '../../../node_modules/ionicons/icons';\nimport moment from 'moment';\nimport { Habit, MOMENT_DATE_FORMAT, HabitAction } from './models';\nimport { habitDataFunctions } from './hooks/habits.hook';\nimport './Habit.listitem.component.css';\nimport { calculateCurrentStreak } from './utilsHabits';\nimport { gamifyService } from '../../modules/gamify/gamifyService';\nimport { toastService } from '../../modules/toast/toastService';\n\n\n\nconst HabitListItemComponent = ({habit, dataFunctions, showEditModalFunction}:\n  {habit:Habit, dataFunctions: habitDataFunctions, showEditModalFunction:{(habit: Habit)}}) => {\n\n  const [doc, setDoc] = useState(new Habit(habit));\n\n  useEffect(() => {\n    setDoc(new Habit(habit));\n  }, [habit])\n\n\n  const printDate = (index:number, active = false) => {\n    const day =  moment().subtract(index, 'day');\n    if(active)\n    {\n      return (\n        <IonLabel\n          color=\"primary\"\n        >\n        {day.format('DD')} <br /> {day.format('dd')}\n        </IonLabel>)\n    }\n    return (\n      <>\n      {day.format('DD')} <br /> {day.format('dd')}\n      </>)\n  }\n\n  const printGoal = () => {\n    if(doc.regularityInterval === 'day'){\n      return (\n        <IonItem>\n              <IonNote>\n                Remember, you promised that you will repeat \n                this habit <strong>every day</strong>.\n              </IonNote>\n        </IonItem>\n      )\n    }\n    \n    return (\n      <IonItem>\n        <IonNote>\n          Remember you promised that you will repeat this habit \n          <strong> {doc.regularityIntervalGoal} times {doc.regularityInterval}</strong>\n        </IonNote>\n      </IonItem>\n    )\n  }\n\n\n\n\n  const printDayIcon = (index: number, active=false) => {\n    const day = moment().subtract(index, 'day');\n\n    console.log(doc);\n\n    let action = doc.actions[day.format(MOMENT_DATE_FORMAT)];\n    if(!action)\n      action = {date: day.format(MOMENT_DATE_FORMAT), value: 0};\n\n    console.log(action);\n    if(active){\n      return (<IonIcon  onClick={() => updatehabit({...action, ...{value: 1}})}\n                      size=\"large\" \n                      key={index}\n                      color={ action.value > 0? COLOR_SUCCESS:  COLOR_DARK } \n                      icon={ action.value > 0? checkmarkCircleOutline : radioButtonOff } />)\n    }\n    // @ts-ignore: undefined, but we are forsing assignment just before this\n    return (<IonIcon  \n                      size=\"large\" \n                      key={index}\n                      color={ action.value > 0? COLOR_SUCCESS:  COLOR_DANGER } \n                      icon={ action.value > 0? checkmarkCircleOutline : radioButtonOff } />)\n\n    \n  }\n\n  const updatehabit = (action: HabitAction) => {\n    try {\n      const {habit, rewards} = calculateCurrentStreak(doc, [action])\n      gamifyService.addRewards(rewards);\n      console.log(habit, rewards, action)\n      dataFunctions.save(habit);\n    }\n    catch(e) {\n      toastService.printSimpleError(e.message)\n    }\n  }\n\n  const print = () => {\n    return (\n        <IonCard>\n          <IonCardHeader>\n            {/*<IonCardSubtitle>Card Subtitle</IonCardSubtitle>*/}\n            <IonCardTitle>{doc.name}</IonCardTitle>\n            <IonBadge class=\"habitBadge\" color=\"success\">{doc.currentStreak}</IonBadge>\n            <IonBadge class=\"habitBadge\" color=\"tertiary\">{doc.biggestStreak}</IonBadge>\n          </IonCardHeader>\n          <IonItem>\n            <IonGrid>\n              <IonRow class=\"datecell\">\n                <IonCol>{printDate(6)}</IonCol>\n                <IonCol>{printDate(5)}</IonCol>\n                <IonCol>{printDate(4)}</IonCol>\n                <IonCol>{printDate(3)}</IonCol>\n                <IonCol>{printDate(2)}</IonCol>\n                <IonCol>{printDate(1)}</IonCol>\n                <IonCol>{printDate(0, true)}</IonCol>\n              </IonRow>\n              <IonRow class=\"datecell\">\n                <IonCol>{printDayIcon(6)}</IonCol>\n                <IonCol>{printDayIcon(5)}</IonCol>\n                <IonCol>{printDayIcon(4)}</IonCol>\n                <IonCol>{printDayIcon(3)}</IonCol>\n                <IonCol>{printDayIcon(2)}</IonCol>\n                <IonCol>{printDayIcon(1)}</IonCol>\n                <IonCol>{printDayIcon(0, true)}</IonCol>\n              </IonRow>\n            </IonGrid>\n          </IonItem>\n          <IonCardContent>\n            {printGoal()}\n          </IonCardContent>\n          <IonFab horizontal=\"end\" vertical=\"bottom\" edge>\n            <IonFabButton size=\"small\" color={COLOR_MEDIUM} onClick={() => showEditModalFunction(doc)}>\n              <IonIcon size=\"large\" icon={cog} />\n            </IonFabButton>\n          </IonFab>\n\n          <IonFab horizontal=\"end\" vertical=\"top\" >\n            <IonFabButton  color={COLOR_LIGHT} onClick={() => showEditModalFunction(doc)}>\n              <IonIcon \n                class=\"habitPlantIcon\"\n                src={'/assets/plants/' + doc.plantName+ '/' + doc.plantLevel + '.svg'}  />\n            </IonFabButton>\n          </IonFab>\n\n          \n        </IonCard>\n    );\n  }\n  \n  return print();\n};\n\nexport default HabitListItemComponent;\n\n","import React, { useState } from 'react';\nimport { IonItem, IonLabel, IonIcon, IonInput, IonTextarea, IonButton, IonHeader, IonTitle, IonToolbar, IonContent, IonFooter, IonButtons, IonSelect, IonSelectOption, IonRange, IonFab, IonFabButton, IonAlert, IonSegment, IonSegmentButton } from '@ionic/react';\nimport { trash } from '../../../node_modules/ionicons/icons';\nimport { Habit, habitIntervals, habitDifficulty, printDifficulty } from './models';\nimport { capitalize } from '../../utils';\nimport { COLOR_DANGER } from '../../colors';\nimport { gamifyService } from '../../modules/gamify/gamifyService';\n\nimport './habit.css';\nimport { MarketItem } from '../../modules/market/models';\n\n\ninterface habitState {\n  regularity: {\n    interval: habitIntervals,\n    min: number,\n    max: number,\n  }\n  doc: Habit,\n  showDeleteWarrning: boolean\n}\n\nconst getRegularityValues = (interval: habitIntervals) => {\n  switch (interval) {\n    case habitIntervals.day:\n      return {interval: interval, min:1, max: 1}\n    case habitIntervals.week:\n      return {interval: interval, min:1, max: 6}\n    case habitIntervals.month:\n      return {interval: interval, min:1, max: 25}\n  }\n}\n\nconst HabitAddComponent = ({habit, dismissFunc}:\n  {habit:Habit, dismissFunc: {(habit:Habit|null, action: 'save'|'remove'|'none')}}) => {\n  \n    const getDefaultRegularityState: habitState = {\n    regularity: getRegularityValues(habit.regularityInterval),\n    doc: new Habit(),\n    showDeleteWarrning: false\n  }\n\n  const [state, setState] = useState<habitState>({...getDefaultRegularityState, ...{doc: habit}});\n\n  const handleChange = (e) => {\n    const newDoc = {...state.doc, ...{[e.target.name]:e.detail.value}}\n    const newState = {...state, ...{doc: newDoc}};\n    setState(newState);\n  }\n\n  const handlerRegularityValue = (e) => {\n    const newDoc = {...state.doc, ...{regularityIntervalGoal: e.detail.value}};\n    setState({...state, ...{doc: newDoc}});\n  }\n\n  const handlerRegularityIntervalChange = (value) => {\n    value = value || 'day';\n    const newDoc = {...state.doc, ...{regularityInterval: value, regularityIntervalGoal: 1}};\n    const newReg = {...state.regularity, ...getRegularityValues(value)};\n    setState({...state, ...{doc:newDoc, regularity: newReg}});\n  }\n\n  const printRegularityLabel = () => {\n\n    const times = (state.doc.regularityIntervalGoal > 1)? ' times a ': ' time a ';\n    if(state.doc.regularityInterval === 'day'){\n      return 'I will repeat this habit every day.'\n    }\n    \n    return 'I will repeat this habit ' +state.doc.regularityIntervalGoal + times + state.doc.regularityInterval\n  }\n\n  const handleDifficultyChange = (e) => {\n    const newDoc = {...state.doc, ...{difficulty: e.detail.value}};\n    setState({...state, ...{doc: newDoc}});\n  }\n\n  const printDifficultyLabel = (hab: habitDifficulty): string => {\n    switch(hab) {\n      case habitDifficulty.trivial:\n        return 'Easy peasy lemon squeezy';\n      case habitDifficulty.easy:\n        return 'Piece of Cake';\n      case habitDifficulty.medium:\n        return \"Let's Rock\";\n      case habitDifficulty.hard:\n        return 'No Pain, No Gain';\n      case habitDifficulty.extreme:\n        return 'Death Wish';\n    }\n  }\n\n  const showRemoveWarrning = () => {\n    setState({...state, ...{showDeleteWarrning: true}});\n  }\n\n  const hideRemoveWarrning = () => {\n    setState({...state, ...{showDeleteWarrning: false}});\n  }\n\n  const removehabit = () => {\n    hideRemoveWarrning();\n    dismissFunc(state.doc, 'remove');\n  }\n\n  const selectSeed = (item:MarketItem):any => {\n    const newDoc = {...state.doc, ...{plantName: item.name, seedItem: item}};\n    setState({...state, ...{doc: newDoc}});\n  }\n\n\n\n  const print = () => {\n      return (\n      <>\n        <IonHeader>\n          <IonToolbar>\n            {/*\n            <IonButtons slot=\"start\">\n              <IonButton> <IonIcon size=\"large\" icon={arrowBack} /></IonButton>\n            </IonButtons>\n            */}\n            <IonTitle>Add Habit</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <IonContent>\n          <IonItem>\n              <IonLabel position=\"floating\">Name</IonLabel>\n              <IonInput \n                  name=\"name\"\n                  placeholder=\"Read book, Go running ...\" \n                  onIonChange={handleChange}\n                  value={state.doc.name} />\n          </IonItem>\n          <IonItem>\n              <IonLabel position=\"floating\">Note</IonLabel>\n              <IonTextarea \n                  placeholder=\"Enter more information here, motivate yourself...\"\n                  name=\"note\"\n                  onIonChange={handleChange}\n                  value={state.doc.note}></IonTextarea>\n          </IonItem>\n          <IonItem>\n            <IonSegment value={state.doc.regularityInterval}\n                        onIonChange={(e) => handlerRegularityIntervalChange(e.detail.value)}>\n              <IonSegmentButton value=\"day\">\n                <IonLabel>Daily</IonLabel>\n              </IonSegmentButton>\n              <IonSegmentButton value=\"week\">\n                <IonLabel>Weekly</IonLabel>\n              </IonSegmentButton>\n              <IonSegmentButton value=\"month\">\n                <IonLabel>Monthly</IonLabel>\n              </IonSegmentButton>\n            </IonSegment>\n          </IonItem>\n\n          {(state.doc.regularityInterval !== 'day')? (\n            <>\n              <IonRange \n                    min={state.regularity.min}\n                    max={state.regularity.max}\n                    debounce={100}\n                    value={state.doc.regularityIntervalGoal}\n                    onIonChange={handlerRegularityValue}\n                    color=\"secondary\" >\n                <IonLabel slot=\"start\">{state.regularity.min}</IonLabel>\n                <IonLabel slot=\"end\">{state.regularity.max}</IonLabel>\n              </IonRange>\n            </>\n          ) : (\n          <></> )}\n          <IonItem>\n            <IonLabel>{printRegularityLabel()}</IonLabel>\n          </IonItem>\n\n          <IonRange min={0} \n                    max={4} \n                    debounce={100}\n                    value={state.doc.difficulty}\n                    onIonChange={handleDifficultyChange}\n                    color=\"secondary\">\n              <IonLabel slot=\"start\">{capitalize(printDifficulty(habitDifficulty.trivial))}</IonLabel>\n              <IonLabel slot=\"end\">{capitalize(printDifficulty(habitDifficulty.extreme))}</IonLabel>\n          </IonRange>\n\n          <IonItem>\n            <IonLabel>{printDifficultyLabel(state.doc.difficulty)}</IonLabel>\n          </IonItem>\n\n          {(!state.doc.id)? (\n            <IonItem>\n              <IonLabel>Choose Seed</IonLabel>\n            </IonItem>\n          ) : (<></>)}\n\n          {(!state.doc.id)? (\n            <div>\n              {gamifyService.getUserSeeds().map(item => {\n                return  <IonButton  key={item.name} \n                                    fill={(item.name === state.doc.plantName)?'outline':'clear'} \n                                    onClick={() => selectSeed(item)}>\n                            <IonIcon  class=\"seedSize\" src={'assets/market/'+ item.pic + '.svg'} />\n                            <h3> {item.name} ({item.quantity})</h3>\n                        </IonButton>\n              })}\n            </div>\n          ) : (<></>)}\n          \n              \n        </IonContent> \n\n        <IonFooter>\n          <IonToolbar>\n            <IonTitle>\n              <IonButton onClick={() => dismissFunc(state.doc, 'save')}>Save</IonButton>\n              <IonButton onClick={() => dismissFunc(null, 'none')}>Cancel</IonButton>\n            </IonTitle>\n          </IonToolbar>\n        </IonFooter>\n        <IonFab horizontal=\"end\" vertical=\"bottom\" >\n          <IonFabButton size=\"small\" color={COLOR_DANGER} onClick={() => showRemoveWarrning()}>\n            <IonIcon size=\"large\" icon={trash} />\n          </IonFabButton>\n        </IonFab>\n        <IonAlert\n          isOpen={state.showDeleteWarrning}\n          onDidDismiss={() => hideRemoveWarrning}\n          header={'Warrning!!!'}\n          message={'Are you sure you want to <strong>delete</strong> this habit?'}\n          buttons={[\n            {\n              text: 'Cancel',\n              role: 'cancel',\n              cssClass: 'secondary'\n            },\n            {\n              text: 'Yes Im Sure',\n              handler: () => removehabit()\n            }\n          ]}\n        />\n      </>\n      );\n  }\n\n  return print();\n};\n\nexport default HabitAddComponent;\n","import React, { useReducer } from 'react';\nimport {\n  IonPage,\n  IonContent,\n  IonList,\n  IonFabButton,\n  IonFab,\n  IonIcon,\n  IonModal} from '@ionic/react';\n\nimport { add } from '../../../node_modules/ionicons/icons';\nimport { useHabitsCollectionFacade } from './hooks/habits.hook';\nimport { Habit } from './models';\nimport HabitListItemComponent from './Habit.listitem.component';\nimport HabitAddComponent from './Habit.add.component';\nimport HeaderWithProgress from '../../components/HeaderWithProgress';\nimport { authService } from '../../modules/auth/authService';\nimport { getDefaultProject } from '../../modules/data/utilsData';\n\n\nexport interface habitPageState {\n  showModal: boolean,\n  modalHabit: Habit|null,\n}\n\nconst reducer = (state, action): habitPageState => {\n  switch(action.type) {\n    case 'showModal':\n      return {...state, ...{showModal: action.data.showModal, modalHabit: action.data.habit} }\n    case 'hideModal':\n      return state;\n    default:\n      return state;\n  }\n}\n\nexport function getAction(todo:'showModal', data = {}){\n  return {type:todo, data:data};\n}\n\n\nconst HabitsPage: React.FC = () => {\n  const [habitsState, dataFunc] = useHabitsCollectionFacade(getDefaultProject(authService.userid));\n  const [state, dispatch] = useReducer(reducer, {\n    showModal:false,\n    modalHabit: null,\n  })\n\n  const { habits } = habitsState;\n\n  const addhabit = (habit:Habit = new Habit()) => {\n    dispatch(getAction('showModal', {showModal: true, habit}));\n  }\n\n  const hidehabitModal = () => {\n    dispatch(getAction('showModal', {showModal: false, habit: null}));\n  }\n\n  const habitDismissFunc = (habit: Habit|null, action:'save'|'remove'|'none') => {\n    dispatch(getAction('showModal', {showModal: false, habit: null}));\n    if(action === 'save' && habit != null){\n      dataFunc.save(habit);\n    }\n    else if(action === 'remove' && habit != null && habit.id){\n      dataFunc.remove(habit.id);\n    }\n  }\n\n  console.log(habits);\n\n  return (\n    <IonPage>\n      <HeaderWithProgress title=\"Habits\" />\n      <IonContent>\n        \n      <IonList>\n        {habits.map(habit => (\n              <HabitListItemComponent\n                        habit={habit} \n                        dataFunctions={dataFunc}\n                        key={habit.id} \n                        showEditModalFunction={addhabit}\n              />\n        ))}\n      </IonList>\n      {state.showModal? (\n        <IonModal isOpen={state.showModal} onDidDismiss={() => hidehabitModal()}>\n        <HabitAddComponent habit={state.modalHabit||new Habit()} \n                            dismissFunc = {habitDismissFunc}  />\n        </IonModal>\n      ) : (\n        <></>\n      )}\n      \n\n      <IonFab vertical=\"top\" horizontal=\"end\" slot=\"fixed\" edge>\n        <IonFabButton onClick={()=> addhabit()}>\n          <IonIcon icon={add} />\n        </IonFabButton>\n      </IonFab>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default HabitsPage;\n\n","import React, {  } from 'react';\nimport { IonHeader } from '@ionic/react';\nimport { useTranslation } from 'react-i18next';\n\n\n\n\n\nconst MenuHeaderWithProgress = () => {\n\n  const {t} = useTranslation();\n  \n  return (\n    <IonHeader className=\"menuHeaderWithAvatar\">\n      <h1>{t('menu')}</h1>\n    </IonHeader>\n  )\n}\n\nexport default MenuHeaderWithProgress;","import React, { useState } from 'react';\nimport { IonInput } from '@ionic/react';\nimport { ProjectItem } from '../../modules/data/models';\nimport { generateCollectionId, getProjectChildId } from '../../modules/data/utilsData';\nimport { TYPE_TODO_LIST, TodoList } from './models';\nimport ulog from 'ulog';\nimport { todoService } from './todo.service';\n\nconst log = ulog('todo');\n\n\nconst ListAddInlineComponent = ({projectid}:{projectid: string}) => {\n\n  const [state, setState] = useState({name:''});\n\n  const setNewTitle = (e) => {\n    setState({name: e.detail.value});\n  }\n  \n  const onKeyPress = (e) => {\n    if(e.key === 'Enter'){\n      save();\n      setState({name: ''});\n    }\n  }\n\n  const save = async () => {\n    const id = generateCollectionId(projectid, TYPE_TODO_LIST, encodeURI(state.name));\n    const newList = new TodoList({\n      id,\n      name: state.name,\n      secondaryType: TYPE_TODO_LIST,\n      //folder??\n      project: getProjectChildId(projectid),\n    })\n    newList._new = true;\n\n    log.info('NEW TODO LIST::::::::::::::: ', newList)\n    const res = await todoService.saveList(newList);\n    log.info(res);\n  };\n\n  return (\n    <IonInput\n      className=\"new-todo\"\n      placeholder=\"Add new List?\"\n      onKeyPress={onKeyPress}\n      onIonChange={setNewTitle}\n      value={state.name}\n    />\n  )\n}\n\nexport default ListAddInlineComponent;","import React, { useState } from 'react'\nimport { IonItem } from '@ionic/react'\nimport Lottie from 'react-lottie';\nimport sun from '../../icons/sun.json';\nimport star from '../../icons/star.json';\nimport './todo.menu.css';\n\nexport const waitMS = (ms: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n};\n\nconst TodoMenuItemButtonComponet = ({name, color, icon, actonFunc}:\n  {name: string, icon: string, color:string, actonFunc:Function}) => {\n  \n  const [state, setState] = useState({isStopped:true, isPaused:true})\n  \n  \n  const defaultOptions = {\n    loop: true,\n    autoplay: true, \n    animationData: (icon === 'today')? sun : star,\n    rendererSettings: {\n      clearCanvas: true,\n      scaleMode: 'noScale',\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  }; \n  \n  const actionHandler = async() => {\n    setState({isStopped:false, isPaused:false});\n    actonFunc();\n\n    await waitMS(1000);\n    setState({isStopped:true, isPaused:true});\n  }\n  \n  \n  \n  return (\n    <IonItem  button \n        onClick={() => actionHandler()}\n        color={color}  \n        routerLink={encodeURI('/todos/tag/' + icon)} \n        routerDirection=\"none\"\n        lines=\"none\">\n    <div className =\"lottieicon\">\n      <Lottie  options={defaultOptions}\n          height={25}\n          width={25}\n          isStopped={state.isPaused}\n          isPaused={state.isStopped}/>\n    </div>\n    {name} \n</IonItem>\n  )\n}\n\nexport default TodoMenuItemButtonComponet","import React, { useReducer, useEffect } from 'react';\nimport ListAddInlineComponent from './list.inline.add.component';\nimport ulog from 'ulog';\nimport { TodoTag, TodoList, TYPE_TODO_LIST, TYPE_TODO_TAG } from './models';\nimport { dataService } from '../../modules/data/dataService';\nimport { saveIntoArray } from '../../modules/data/utilsData';\nimport { authService } from '../../modules/auth/authService';\nimport { IonList, IonItem, IonLabel, IonItemDivider, IonItemGroup, IonItemSliding, IonItemOptions, IonItemOption, IonAlert, IonIcon } from '@ionic/react';\nimport { useLocation } from 'react-router';\nimport { todoService } from './todo.service';\nimport TodoMenuItemButtonComponet from './todo.menu.item';\nimport { list } from 'ionicons/icons';\n\nconst log = ulog('todo');\n\nconst initialState:{\n  tags:TodoTag[],\n  tagsOpen: boolean\n  lists:TodoList[],\n  openLists: string[],\n  showDeleteListAlert: boolean,\n  deleteList: TodoList,\n} = {\n  tags:[],\n  tagsOpen: false,\n  lists:[],\n  openLists:[],\n  showDeleteListAlert: false,\n  deleteList: new TodoList(),\n}\n\nconst reducer =  (state = initialState, { type, payload }:{type:string, payload:any}) => {\n  switch (type) {\n\n    case 'hideDeleteAlert':\n      return { ...state, ...{ showDeleteListAlert: false} }\n\n    case 'showDeleteAlert': \n    return { ...state, ...{ showDeleteListAlert: true, deleteList: payload } }\n\n    case 'setTodoList': \n      if(payload.deleted)\n      return { ...state, ...{lists: state.lists.filter(l => l.id !== payload.id)} };\n      else\n        return { ...state, ...{lists: saveIntoArray(payload, state.lists)} };\n\n    case 'setTodoLists':\n      //find todos page\n      return { ...state, ...{ lists: payload } };\n    case 'setTags':\n      return {...state, ...{tags: payload}};\n    case 'setTag': \n      if(payload.deleted)\n        return { ...state, ...{tags: state.tags.filter(t => t.id !== payload.id)} };\n      else\n        return { ...state, ...{tags: saveIntoArray(payload, state.tags)\n                                    .sort((a,b) => (a.name > b.name)? 1 : -1)} };\n\n    default:\n      log.error('REDUCER GOT UNHANDLED TYPE ', type, payload);\n      return state\n  }\n}\n\n\nconst TodoMenuListComponent = ({projectid}: {projectid:string}) => {\n  const location = useLocation();\n  const path = location.pathname;\n  const [state, _dispatch] = useReducer(reducer, initialState)\n\n  const dispatch = (type: 'setTodoLists'|\n                          'setTags'|\n                          'setTag'|\n                          'hideDeleteAlert'|\n                          'showDeleteAlert'|\n                          'setTodoList', payload = {}) => {\n    _dispatch({type, payload});\n  }\n\n\n  useEffect(() => {\n    const subTodoList = dataService.subscribeProjectTypeChanges(\n      projectid, TYPE_TODO_LIST ).subscribe(change => {\n        log.info('Menu Change: ', change);\n        dispatch('setTodoList', change);\n      })\n    loadInitTodoLists(projectid);\n    const tagsList = dataService.subscribeByPropertyChange('type',\n      'todoTag' ).subscribe(change => {\n        log.info('Tags Changed: ', change);\n         dispatch('setTag', change);\n      })\n    loadInitTags();\n    return () => {\n      subTodoList.unsubscribe();\n      tagsList.unsubscribe();\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [authService.userid])\n\n  const loadInitTodoLists = async (projectid:string) => {\n    const todolists = await dataService.getAllByProject(projectid,TYPE_TODO_LIST);\n    log.info(todolists);\n    dispatch('setTodoLists', todolists);\n  }\n\n  const loadInitTags = async () => {\n    const tags = await dataService.queryByProperty('name', 'startsWith', '', TYPE_TODO_TAG);\n    log.info(tags);\n    dispatch('setTags', tags);\n  }\n\n  const deleteList = () => {\n      todoService.deleteList(state.deleteList)\n  }\n\n\n  const tagButtonClickHandler = (tag) => {\n    console.log(tag);\n  }\n\n  return (\n    <IonList>\n      {/*}\n       <IonItem  button \n                color={(path ==='/todos/tag/today'? 'light' : '')}  \n                routerLink={encodeURI('/todos/tag/today')} \n                routerDirection=\"none\"\n                lines=\"none\">\n       \n              <IonIcon\n                size=\"large\"\n                src=\"assets/icons/sun.svg\"></IonIcon>\n            Today\n          </IonItem>\n      */}\n      <IonItemGroup key=\"listsGroup\">\n          <TodoMenuItemButtonComponet \n            name=\"Today\"\n            icon=\"today\"\n            color={(path ==='/todos/tag/today'? 'light' : '')}  \n            actonFunc = {() => tagButtonClickHandler('today')}\n          /> \n          <TodoMenuItemButtonComponet \n            name=\"Important\"\n            icon=\"important\"\n            color={(path ==='/todos/tag/important'? 'light' : '')}  \n            actonFunc = {() => tagButtonClickHandler('important')}\n          /> \n            \n          <IonItemGroup>\n            <h2>Lists</h2>\n          </IonItemGroup>    \n        {state.lists.map( listItem => (\n          <IonItemSliding key={listItem.name+'list'}>\n            <IonItem  button \n                      color={(path ==='/todos/'+listItem.name? 'light' : '')}  \n                      routerLink={encodeURI('/todos/'+listItem.name)} \n                      routerDirection=\"none\"\n                      lines=\"none\">\n              <IonLabel>\n                      <IonIcon  \n                        icon={list}/> \n                {' '+listItem.name}</IonLabel>\n            </IonItem>\n            <IonItemOptions side=\"end\">\n              <IonItemOption  color=\"danger\" \n                              onClick={() => dispatch('showDeleteAlert',list)}>\n                Delete</IonItemOption>\n            </IonItemOptions>\n          </IonItemSliding>\n        ))}\n      </IonItemGroup>\n      <IonItemDivider>\n      </IonItemDivider>\n      <ListAddInlineComponent key=\"addNewItem\" projectid={projectid} />\n\n      <IonItemGroup>\n        <h2>Tags</h2>\n      </IonItemGroup>\n      {state.tags.filter(tag => (tag.name !== 'today' && tag.name !== 'important'))\n        .map( tagItem => (\n          <IonItemSliding key={tagItem.name+'tag'}>\n            <IonItem  button \n                      color={(path ==='/todos/tag/'+tagItem.name? 'light' : '')}  \n                      routerLink={encodeURI('/todos/tag/'+tagItem.name)} \n                      routerDirection=\"none\"\n                      lines=\"none\">\n              <IonLabel>\n                      <IonIcon  \n                        src={\"/assets/icons/tag.svg\"} /> \n                {' '+tagItem.name}</IonLabel>\n            </IonItem>\n            <IonItemOptions side=\"end\">\n              <IonItemOption  color=\"danger\" \n                              onClick={() => {console.log('No delete implemented')} }>\n                Delete</IonItemOption>\n            </IonItemOptions>\n          </IonItemSliding>\n        ))}\n\n      <IonAlert \n        isOpen={state.showDeleteListAlert}\n        onDidDismiss={() => dispatch('hideDeleteAlert')}\n        header={\"Are you sure you want to delete '\" + state.deleteList.name + \"' list?\"}\n        subHeader={'All tasks in this list will be deleted'}\n        buttons={[\n          {\n            text: 'Cancel',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: () => dispatch('hideDeleteAlert')\n          },\n          {\n            text: 'Delete List',\n            handler: () => deleteList()\n          }\n        ]}\n      />\n    </IonList>\n  )\n\n\n\n}\n\nexport default TodoMenuListComponent;","import React, { useReducer, useEffect } from 'react';\nimport { home, apps, sunny, star, heart, basket, construct, checkmark, refresh, cog, ribbon } from 'ionicons/icons';\nimport { getDefaultProject } from '../../data/utilsData';\nimport { authService } from '../../auth/authService';\nimport ulog from 'ulog';\nimport TodoMenuListComponent from '../../../pages/todo/todo.menulist.component';\n\nconst log = ulog('menu');\n\nexport interface AppPage {\n  url: string;\n  icon: any;\n  title: string;\n  lastComponent?: any;\n}\n\n\nexport interface MenuFunctions {\n\n}\n\nexport interface MenuState {\n  projectid: string,\n  appPages: AppPage[];\n}\n\n\nexport const getMenuState = (projectid: string): MenuState => {\n  return {\n    projectid,\n    appPages: [\n      {\n        title: 'home',\n        url: '/home',\n        icon: home,\n      },\n      {\n        title: 'habits',\n        url: '/habits',\n        icon: refresh,\n      },\n      {\n        title: 'clashTitle',\n        url: '/clash',\n        icon: ribbon,\n      },\n      {\n        title: 'todosTitle',\n        url: '/todos',\n        icon: apps,\n        lastComponent: <TodoMenuListComponent projectid={projectid}  />\n      },\n      {\n        title: 'marketTitle',\n        url: '/market',\n        icon: basket,\n      },\n      {\n        title: 'settingsTitle',\n        url: '/settings',\n        icon: cog,\n      },\n    ]\n  }\n};\n\n\nconst reducer = (state, { type, payload }:{type:string, payload:any}):MenuState => {\n  switch (type) {\n  case 'authChange':\n    return getMenuState(getDefaultProject(authService.userid).id);\n  default:\n    log.error('REDUCER GOT UNHANDLED TYPE ', type, payload);\n    return state\n  }\n}\n\n\n\n//more simpler then auth hook, just read data\nexport function useMenuHookFacade(): [MenuState, MenuFunctions] {\n  const project = getDefaultProject(authService.userid);\n  const [state, _dispatch] = useReducer(reducer, getMenuState(project.id))\n\n  useEffect(() => {\n    const sub = authService.username$.subscribe(name => {\n      _dispatch({type: 'authChange', payload: authService.userid});\n    })\n   \n    return () => {sub.unsubscribe()};\n  }, [])\n          \n  const menuFunctions: MenuFunctions = {\n  }\n\n  return [state, menuFunctions];\n}","import {\n  IonContent,\n  IonIcon,\n  IonItem,\n  IonLabel,\n  IonMenu,\n  IonMenuToggle,\n  IonGrid,\n  IonCol,\n  IonRow,\n  IonRefresherContent,\n  IonRefresher\n} from '@ionic/react';\nimport React from 'react';\nimport { withRouter, useLocation } from 'react-router-dom';\nimport MenuHeaderWithProgress from './MenuHeaderWithProgress';\nimport { useMenuHookFacade } from '../modules/menu/hooks/menu.hook';\nimport './menu.css';\nimport ulog from 'ulog'\nimport { useTranslation } from 'react-i18next';\nimport { dataService } from '../modules/data/dataService';\n\nconst log = ulog('menu')\n\nconst Menu = () => {\n\n  const [state,] = useMenuHookFacade();\n  const location = useLocation();\n  const path = location.pathname;\n  const { t } = useTranslation();\n  log.warn(path);\n  return (\n    <IonMenu key=\"ionmenu_left\" contentId=\"main\" type=\"overlay\">\n      <MenuHeaderWithProgress key=\"menu_header\" />\n      <IonContent key=\"menu_left\" >\n        <IonRefresher slot=\"fixed\" onIonRefresh={(e) => dataService.refresh(e)}>\n            <IonRefresherContent></IonRefresherContent>\n        </IonRefresher>\n        <IonGrid>\n        {state.appPages.map((appPage, index) => {\n          return (\n            <>\n              <IonRow key={appPage.title.replace(' ', '')+appPage.url + index}>\n                <IonCol class=\"leftMenuCol\">\n                <IonMenuToggle  autoHide={false}>\n                  <IonItem\n                        color={(path === appPage.url? 'light' : '')}   \n                        routerLink={appPage.url} routerDirection=\"none\">\n                    <IonIcon slot=\"start\" icon={appPage.icon} />\n                    <IonLabel>{t(appPage.title)}</IonLabel>\n                  </IonItem>\n                </IonMenuToggle>\n                </IonCol>\n              </IonRow>\n              {appPage.lastComponent? (\n                appPage.lastComponent\n              ) : (<></>)}\n            </>\n        )})}\n        </IonGrid>\n      </IonContent>\n    </IonMenu>\n)};\n\nexport default withRouter(Menu);\n","import React, { useState } from 'react';\nimport { PartyProject } from '../models';\nimport { IonHeader, IonToolbar, IonTitle, IonContent, IonItem, \n  IonInput, IonLabel, IonTextarea, IonFooter, IonButton } from '@ionic/react';\n\n\n\n\n\nconst PartyEditComponent = ({party, dismissFunc}:\n    {party: PartyProject| null, dismissFunc:{(party: PartyProject|null, action: 'save'| 'remove' | 'none')}}) => {\n\n  const [state, setState] = useState({party: party||new PartyProject()})\n\n\n  const handleChange = (e) => {\n    const newDoc = {...state.party, ...{[e.target.name]:e.detail.value}}\n    const newState = {...state, ...{party: newDoc}};\n    setState(newState);\n  }\n\n\n  return (\n    <>\n      <IonHeader>\n            <IonToolbar>\n              <IonTitle>Add/Edit Party</IonTitle>\n            </IonToolbar>\n      </IonHeader>\n      <IonContent>\n          <IonItem>\n                <IonLabel position=\"floating\">Name</IonLabel>\n                <IonInput \n                    name=\"name\"\n                    placeholder=\"Your Cool Party Name\" \n                    onIonChange={handleChange}\n                    value={state.party.name} />\n            </IonItem>\n            <IonItem>\n                <IonLabel position=\"floating\">Note</IonLabel>\n                <IonTextarea \n                    placeholder=\"More details for your party members\"\n                    name=\"note\"\n                    onIonChange={handleChange}\n                    value={state.party.note}></IonTextarea>\n            </IonItem>\n            <IonFooter>\n              <IonToolbar>\n                <IonTitle>\n                  <IonButton onClick={() => dismissFunc(state.party, 'save')}>Save</IonButton>\n                  <IonButton onClick={() => dismissFunc(null, 'none')}>Cancel</IonButton>\n                </IonTitle>\n              </IonToolbar>\n            </IonFooter>\n      </IonContent>\n    </>\n  );\n}\n\nexport default PartyEditComponent;","import React, { useState, useEffect } from 'react';\nimport { PartyProject } from '../models';\nimport { IonCard, IonCardHeader, IonCardTitle, IonCardSubtitle, IonBadge } from '@ionic/react';\n\n\nconst PartyListItemComponent = ({partyProject, history,  showEditModalFunction}:\n          {partyProject:PartyProject, history, showEditModalFunction:{(party: PartyProject)}}) => {\n\n  const [state, setState] = useState({party: partyProject})\n\n  useEffect(() => {\n    setState({...state, ...{party:partyProject}});\n  }, [partyProject])\n\n  return(\n    <IonCard>\n      <IonCardHeader onClick={() => history.push('/clash/'+ encodeURI(state.party.id||''))}>\n        <IonCardTitle>{state.party.name} \n              <IonBadge>{state.party.members.length}</IonBadge></IonCardTitle>\n        <IonCardSubtitle>{state.party.note}</IonCardSubtitle>\n      </IonCardHeader>\n    </IonCard>\n  )\n\n\n} \n\nexport default PartyListItemComponent;\n\n\n","import React, { useEffect, useReducer } from 'react';\nimport {\n  IonPage,\n  IonContent,\n  IonList,\n  IonCard,\n  IonCardHeader,\n  IonCardTitle,\n  IonCardContent,\n  IonLabel,\n  IonModal,\n  IonItem,\n  IonRefresher,\n  IonRefresherContent,\n  IonFab,\n  IonFabButton,\n  IonIcon} from '@ionic/react';\nimport HeaderWithProgress from '../../../components/HeaderWithProgress';\nimport { authService } from '../../auth/authService';\nimport { PartyProject } from '../models';\nimport PartyEditComponent from '../components/Party.edit.component';\nimport { partyService } from '../party.service';\nimport PartyListItemComponent from '../components/Party.listitem.component';\nimport { useHistory } from 'react-router-dom';\nimport ulog from 'ulog';\nimport { dataService } from '../../data/dataService';\nimport { useTranslation } from 'react-i18next';\nimport { add } from 'ionicons/icons';\n\n\nconst log = ulog('parties');\n\nexport interface PartiesState {\n  userId: string,\n  showModal: boolean,\n  party: PartyProject|null\n  docs: PartyProject[],\n}\nconst reducer = (state, action:{type:string, data:any}): PartiesState => {\n  switch(action.type) {\n    case 'dismissEdit':\n      return {...state, ...{showModal: false, party: null}}\n    case 'edit':\n      return {...state, ...{showModal: true, party: action.data}}\n    case 'docs':\n      return {...state, ...{docs:action.data}};\n    case 'userid': \n      return {...state, ...{userId: action.data}};\n    default:\n      log.error('ERROR, INCORRECT ACTION TYPE ', action);\n      return state;\n  }\n}\n\n\n\nconst PartiesPage = () => {\n  const history = useHistory();\n  const [state, _dispatch] = useReducer(reducer, {\n    userId: '',\n    showModal: false,\n    party: new PartyProject(),\n    docs: [],\n  })\n\n  const {t} = useTranslation();\n\n  const dispatch = (type: 'userid'|\n                          'dismissEdit'|\n                          'edit'|\n                          'docs', data:any = null) => {\n      _dispatch({type, data});                      \n  }\n\n  useEffect(() => {\n    const subs = [\n      authService.username$.subscribe(username => {\n        dispatch('userid', authService.userid);\n      }),\n      partyService.state$.subscribe(changes => {\n        dispatch('docs', changes.docs);\n      }),\n\n    ]\n    return () => {\n      subs.forEach(sub => {\n        if(sub) sub.unsubscribe();\n      });\n    };\n    // eslint-disable-next-line\n  }, [])\n\n  const editParty = (party:PartyProject = new PartyProject()) => {\n    dispatch('edit', party);\n  }\n\n\n  const modalDismissFunc = (party: PartyProject|null, action:'save'|'remove'|'none') => {\n    dispatch('dismissEdit')\n    if(action === 'save' && party != null){\n      partyService.saveParty(party)\n    }\n    else if(action === 'remove' && party != null && party.id){\n      //dataFunc.remove(habit._id);\n    }\n  }\n\n  const hideModal = () => {\n    dispatch('dismissEdit');\n  }\n\n  return (\n    <IonPage>\n      <HeaderWithProgress title={t('Clash of Farmers')} />\n      <IonContent>\n      <IonRefresher slot=\"fixed\" onIonRefresh={(e) => dataService.refresh(e)}>\n          <IonRefresherContent></IonRefresherContent>\n      </IonRefresher>\n     \n        {state.showModal? (\n          <IonModal isOpen={state.showModal} onDidDismiss={() => hideModal()}>\n            <PartyEditComponent party={state.party} \n                                dismissFunc = {modalDismissFunc}  />\n          </IonModal>\n        ) : (\n          <></>\n        )}\n        <IonCard>\n          <IonCardHeader>\n            <IonCardTitle>\n              {t('clash.header')}\n            </IonCardTitle>\n          </IonCardHeader>\n          <IonCardContent>\n          </IonCardContent>\n        </IonCard>\n        \n      <IonList>\n        {state.docs.map(party => (\n          <PartyListItemComponent partyProject={party} \n                                  history={history}\n                                  key={party.id}\n                                  showEditModalFunction={editParty} />\n        ))}  \n      </IonList>\n     \n      <IonFab vertical=\"top\" horizontal=\"end\" slot=\"fixed\" edge>\n          <IonFabButton onClick={() =>editParty()}>\n            <IonIcon icon={add} />\n          </IonFabButton>\n        </IonFab>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default PartiesPage;\n\n","import React from 'react';\nimport { PartyMember, ChallengeMember } from '../models';\nimport { IonBadge } from '@ionic/react';\nimport { COLOR_LIGHT, COLOR_SUCCESS } from '../../../colors';\nimport moment from 'moment';\nimport { MOMENT_DATE_FORMAT } from '../../../pages/habits/models';\nimport './challenge.css';\n\n\nconst ChallengeMemberScoreHistory = ({member}:\n  {member: any}) => {\n\n\n const printDay = (dateString) => {\n  let score;\n  if(member['actions'])\n    score = member['actions'][dateString];\n  else if(member['scoreHistory'])\n    score = member['scoreHistory'][dateString];\n\n  let color = COLOR_LIGHT;\n  let reward = 0;\n  if(score){\n    color = COLOR_SUCCESS;\n    if(score.reward)\n      reward = score.reward.value || score.reward;\n  }\n  if(!Number(reward)) reward = 0;\n\n\n  return <IonBadge class=\"scoreHistoryBadge\"  color={color}>{reward}</IonBadge>\n }\n\n  \n  return (\n    <>\n      {printDay(moment().subtract(6, 'd').format(MOMENT_DATE_FORMAT))}\n      {printDay(moment().subtract(5, 'd').format(MOMENT_DATE_FORMAT))}\n      {printDay(moment().subtract(4, 'd').format(MOMENT_DATE_FORMAT))}\n      {printDay(moment().subtract(3, 'd').format(MOMENT_DATE_FORMAT))}\n      {printDay(moment().subtract(2, 'd').format(MOMENT_DATE_FORMAT))}\n      {printDay(moment().subtract(1, 'd').format(MOMENT_DATE_FORMAT))}\n      {printDay(moment().subtract(0, 'd').format(MOMENT_DATE_FORMAT))}\n    </>\n  )\n\n}\nexport default ChallengeMemberScoreHistory;","import React, { useReducer, useEffect } from 'react';\nimport { PartyProject, PartyMember } from '../models';\nimport { IonCard, IonCardTitle, IonCardHeader, IonCardContent, IonList, IonItem, IonAlert, IonFooter, IonButton, IonLabel, IonBadge } from '@ionic/react';\nimport { partyService } from '../party.service';\nimport  ulog from 'ulog';\nimport { authService } from '../../auth/authService';\nimport { canEditProjectByRights } from '../../data/utilsData';\nimport { COLOR_LIGHT, COLOR_SUCCESS, COLOR_SECONDARY } from '../../../colors';\nimport ChallengeMemberScoreHistory from './Challenge.member.scoreHistory';\nconst log = ulog('memberlist');\n\nexport interface MembersState {\n  showAddModal: boolean,\n  project: PartyProject,\n}\n\n\nconst reducer = (state, action): MembersState => {\n  switch(action.type) {\n    case 'showAddMemberModal':\n      return {...state, ...{showAddModal: true}};\n    case 'hideAddMemberModal':\n      return {...state, ...{showAddModal: false}};\n    case 'setProject':\n      return {...state, project: action.data}\n    default:\n      log.error('Action type is not a match');\n      return state;\n  }\n}\n\nconst PartyMembersListComponent = ({project}:{project:PartyProject}) => {\n  const [state, _dispatch] = useReducer(reducer, {\n    showAddModal: false,\n    project,\n  })\n\n  useEffect(() => {\n    dispatch('setProject', project);\n    \n  }, [project])\n\n  const dispatch = (type: 'showAddMemberModal'|\n                          'hideAddMemberModal'|\n                          'setProject',\n                    data:any = {}) => {\n    _dispatch({type, data});\n  }\n\n  const addMember = () => {\n    dispatch(\"showAddMemberModal\");\n    \n  }\n\n  const hideAddUser = () => {\n    dispatch('hideAddMemberModal');\n  }\n\n  const canEditThisProject = () => {\n    const self = project.members.find(m => m.id === authService.userid);\n    if(!self) return false;\n    return canEditProjectByRights(self.rights);\n  }\n\n  const printScore = (score, index) =>{\n    let color = COLOR_LIGHT;\n    if(index === 0) color = COLOR_SUCCESS;\n    if(index === 1) color = COLOR_SECONDARY;\n    return <IonBadge slot=\"end\" color={color}>{score.reward}</IonBadge>\n  }\n\n  \n  return (\n    <IonCard>\n      <IonCardHeader>\n        <IonCardTitle>Members</IonCardTitle>\n      </IonCardHeader>\n      <IonCardContent>\n        <IonList>\n            {project.members.sort((a,b) => b.score.reward - a.score.reward)\n                            .map((member, i) => (\n          <IonItem key={member.id}>\n            <IonLabel>\n              <h2>{member.username} - \n                  <ChallengeMemberScoreHistory member={member}  />\n              </h2>\n            </IonLabel>\n              {printScore(member.score, i)}\n          </IonItem>\n            ))}\n        </IonList>\n        \n      </IonCardContent>\n      {canEditThisProject()? (\n        <IonFooter>\n          <IonButton onClick={()=>addMember()} fill=\"clear\">Invite</IonButton>\n        </IonFooter>\n      ) : ( <></>)}\n      <IonAlert \n        isOpen={state.showAddModal}\n        onDidDismiss={() => hideAddUser()}\n        header=\"Friend Username:\"\n        inputs={[\n          {\n            name: 'username',\n            type: 'text',\n            id: 'adduserid',\n          }\n        ]}\n        buttons={[\n          {\n            text: 'Cancel',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: () => {\n              hideAddUser();\n            }\n          },\n          {\n            text: 'Invite User',\n            handler: (data) => {\n              partyService.addUser(data.username, project);\n              hideAddUser();\n            }\n          }\n        ]}\n      />\n    </IonCard>\n  )\n\n}\nexport default PartyMembersListComponent;","import React, { useEffect, useReducer } from 'react';\nimport { IonItem, IonLabel, IonList, IonText, IonBadge } from '@ionic/react';\nimport { Challenge } from '../models';\nimport { COLOR_LIGHT, COLOR_SUCCESS, COLOR_SECONDARY } from '../../../colors';\nimport ChallengeMemberScoreHistory from './Challenge.member.scoreHistory';\n\n\nexport interface ChallengeLocalState {\n  challenge: Challenge,\n}\n\nconst reducer = (state, action): ChallengeLocalState => {\n  switch(action.type) {\n    case 'challenge':\n      return {...state, ...{challenge:action.data}}\n\n    default:\n      console.log('ERROR WENT TO DEFAULTS:: ', action);\n      return state;\n  }\n}\n\n\nconst ChallengeMembersItem = ({challenge}:\n  {challenge:Challenge}) => {\n\n  const [state, _dispatch] = useReducer(reducer, {\n    challenge,\n  })\n\n  const dispatch = (type:'challenge', data:any) => {\n    _dispatch({type, data});\n  }\n\n  useEffect(() => {\n    dispatch('challenge', challenge);\n  }, [challenge])\n\n  const printScore = (score, index) =>{\n    if(!score) return;\n    if(!score.reward)return;\n    let color = COLOR_LIGHT;\n    if(index === 0) color = COLOR_SUCCESS;\n    if(index === 1) color = COLOR_SECONDARY;\n    return <IonBadge slot=\"end\" color={color}>{score.reward}</IonBadge>\n  }\n\n  const print = () => {\n    return (\n      <IonList>\n        {state.challenge.members.sort((a,b)=> b.score.reward - a.score.reward)\n          .map((member, i) => (\n            <IonItem key={member.id}>\n              <IonLabel>\n                <h2>{member.username} - - \n                  <ChallengeMemberScoreHistory member={member} />\n                </h2>\n              </IonLabel>\n              {printScore(member.score, i)}\n            </IonItem>\n        ))}\n      </IonList>\n    );\n  }\n  \n  return print();\n};\n\nexport default ChallengeMembersItem;\n\n","import React, { useReducer, useEffect } from 'react';\nimport ulog from 'ulog'\nimport { IonItem, IonHeader, IonToolbar, IonTitle,  IonContent, IonButton, IonTextarea } from '@ionic/react';\nimport { ChallengeAction } from '../models';\n\n\nconst log = ulog('challenge');\n\nconst reducer = (state, {type, payload}) => {\n  switch(type) {\n    case 'setState': \n      return payload;\n    case 'setDoc':\n      return {...state, ...{doc: payload}}\n    default:\n      log.error('Incorrect action, ', type, payload);\n      return state;\n      \n  }\n}\n\n\nconst ChallengeAddActionNoteComponent = ({doc, submitFunc, closeFunc}: \n    {doc:ChallengeAction, submitFunc:Function, closeFunc:Function}) => {\n\n  const [state, _dispatch] = useReducer(reducer, {doc,}); \n  const dispatch = (type:   'other'|\n                            'setDoc'|\n                            'setState', payload:any = {}) => {\n  _dispatch({type, payload});\n  }\n\n  useEffect(() => {\n    dispatch('setDoc', doc);\n  }, [doc])\n\n  const handleChange = (e) => {\n    const newDoc = Object.assign(state.doc);\n    newDoc.data.note =  e.detail.value\n    dispatch('setDoc', newDoc);\n  }\n\n  /*\n  const handleNamedChange = (property, value) => {\n    const newDoc = {...state.doc, ...{[property]: value}}\n    dispatch('setDoc', newDoc)\n  }\n  */\n\n  return (\n  <>\n    <IonHeader>\n      <IonToolbar>\n        <IonTitle>Add Note</IonTitle>\n      </IonToolbar>\n    </IonHeader>\n    <IonContent>\n      <IonItem>\n        <IonTextarea \n          name=\"note\"\n          autofocus={true}\n          autoGrow={false}\n          spellCheck={true}\n          onIonChange={handleChange}\n          value={state.doc.data.note}\n          rows={10}\n          placeholder=\"Enter message here...\"></IonTextarea>\n      </IonItem>\n\n    </IonContent>\n    <IonToolbar>\n      <IonButton\n        onClick={()=> submitFunc({...state.doc, ...{value: 1}})}\n        fill=\"clear\">Submit</IonButton>\n      <IonButton\n        onClick={()=> closeFunc()} \n        fill=\"clear\">Cancel</IonButton>\n    </IonToolbar>\n  </>\n  )\n}\n\n\n\n\nexport default ChallengeAddActionNoteComponent;","import React, { useEffect, useReducer } from 'react';\nimport { IonItem, IonCard, IonCardHeader, IonCardTitle, IonCardContent, IonNote, IonFooter, IonButton, IonLabel, \n   IonFab, IonFabButton, IonIcon, IonAlert, IonModal } from '@ionic/react';\nimport { Challenge, ChallengeState, ChallengeType, ChallengeTypeUnit, ChallengeMember, ChallengeAction } from '../models';\nimport ulog from 'ulog';\nimport { partyService } from '../party.service';\nimport { authService } from '../../auth/authService';\nimport ChallengeMembersItem from './Challenge.members.item.component';\nimport { canEditProject } from '../../data/utilsData';\nimport { cog, checkmarkDone, readerOutline, cafeOutline, walkOutline, alarmOutline, timerOutline, rocketOutline, cashOutline, trendingDown, trendingUp } from 'ionicons/icons';\nimport { COLOR_SUCCESS, COLOR_LIGHT } from '../../../colors';\nimport ChallengeAddActionNoteComponent from './Challenge.add.note.action.component';\nimport { MOMENT_DATE_FORMAT } from '../../../pages/habits/models';\nimport moment from 'moment';\n\nconst log = ulog('clubs');\n\nexport interface ChallengeLocalState {\n  challenge: Challenge,\n  showDoneAlert: boolean,\n  memberDoc: ChallengeMember|undefined,\n  currentDate: string,\n  showBiggesGainerAcceptAlert: boolean,\n  showBiggesLooserAcceptAlert: boolean\n}\n\nconst reducer = (state, action): ChallengeLocalState => {\n  switch(action.type) {\n    case 'setMemberDoc':\n      return {...state, ...{memberDoc: action.data}};\n    case 'challenge':\n      return {...state, ...{challenge:action.data, \n                            memberDoc: action.data.members\n                            .find(m => m.id === authService.userid)}}\n    case 'showDoneAlert':\n        return {...state, ...{showDoneAlert:true, }}\n    case 'hideDoneAlert':\n        return {...state, ...{showDoneAlert:false}}\n    case 'showBiggestLooserAcceptAlert':\n        return {...state, ...{showBiggesLooserAcceptAlert:action.data}}\n    case 'showBiggestGainerAcceptAlert':\n        return {...state, ...{showBiggesGainerAcceptAlert:action.data}}\n\n    default:\n      console.log('ERROR WENT TO DEFAULTS:: ', action);\n      return state;\n  }\n}\n\n\nconst ChallengeListItemComponent = ({challenge, showEditModalFunction}:\n  {challenge:Challenge, showEditModalFunction:{(challenge: Challenge)}}) => {\n\n  const [state, _dispatch] = useReducer(reducer, {\n    challenge,\n    showDoneAlert: false,\n    showBiggesLooserAcceptAlert: false,\n    showBiggesGainerAcceptAlert: false,\n    currentDate: moment().format(MOMENT_DATE_FORMAT),\n    memberDoc: challenge.members.find(m => m.id === authService.userid)\n  })\n\n  const dispatch = (type: 'challenge'|\n                          'setMemberDoc'|\n                          'showBiggestGainerAcceptAlert'|\n                          'showBiggestLooserAcceptAlert'|\n                          'hideDoneAlert'|\n                          'showDoneAlert', data:any = {}) => {\n    _dispatch({type, data});\n  }\n\n  useEffect(() => {\n    dispatch('challenge', challenge);\n  }, [challenge])\n\n  const printTitle = () => {\n    if(state.challenge.state === ChallengeState.waiting){\n      return <IonCardTitle>{state.challenge.name} - Open to joining</IonCardTitle>\n    }\n    else if(state.challenge.state === ChallengeState.current){\n      return <IonCardTitle>{state.challenge.name} </IonCardTitle>\n    }\n    else if(state.challenge.state === ChallengeState.finished) {\n      return <IonCardTitle>{state.challenge.name} - Finished</IonCardTitle>\n    }\n    else if(state.challenge.state === ChallengeState.future) {\n      return <IonCardTitle>{state.challenge.name} - Preivew of future challenge</IonCardTitle>\n    }\n    return <IonCardTitle>{state.challenge.name}</IonCardTitle>\n  }\n\n  const printInfo = () => {\n    if(state.challenge.regularityInterval === 'day'){\n      return (\n        <IonItem>\n          <IonLabel>\n            <h2>{state.challenge.note}</h2>\n            <IonNote>\n              Challenge goal, for <strong>every day</strong>.\n            </IonNote>\n          </IonLabel>\n        </IonItem>\n      )\n    }\n    \n    return (\n      <IonItem>\n        <IonLabel>\n          <h2>{state.challenge.note}</h2>\n          <IonNote>\n            Challenge goal is for \n            <strong> {state.challenge.regularityIntervalGoal} times {state.challenge.regularityInterval}</strong>\n          </IonNote>\n        </IonLabel>\n      </IonItem>\n    )\n  }\n\n  const challengeSubmitForToday = () => {\n\n    return false;\n  }\n\n\n\n  const printActionButtons = () => {\n    if(state.challenge.state === ChallengeState.waiting && state.memberDoc === undefined){\n      if(state.challenge.challengeType === ChallengeType.looser){\n        return <IonButton size=\"small\"   fill=\"clear\"\n                    onClick={() => dispatch('showBiggestLooserAcceptAlert', true)} >\n                    Accept Challenge</IonButton>\n      }\n      else if(state.challenge.challengeType === ChallengeType.gainer){\n        return <IonButton size=\"small\"   fill=\"clear\"\n                    onClick={() => dispatch('showBiggestGainerAcceptAlert', true)} >\n                    Accept Challenge</IonButton>\n      }\n      else{\n        return <IonButton size=\"small\"   fill=\"clear\"\n                    onClick={() => partyService.acceptChallenge(state.challenge)} >\n                    Accept Challenge</IonButton>\n      }\n    }\n    else if(state.challenge.state === ChallengeState.current){\n      if(challengeSubmitForToday()) return;\n      return;\n    }\n    else if(state.challenge.state === ChallengeState.finished) {\n\n    }\n    else if(state.challenge.state === ChallengeState.future) {\n\n    }\n\n  }\n\n  const printSubmitFab = () => {\n    if(state.challenge.state === ChallengeState.current){\n      if(challengeSubmitForToday() && state.challenge.regularityEachDayGoal > 1) return;\n     return <IonFab horizontal=\"end\" vertical=\"top\" >\n              <IonFabButton onClick={() => dispatch('showDoneAlert')}\n                            color={COLOR_SUCCESS}  >\n                {printDoneIcon()}\n              </IonFabButton>\n            </IonFab>\n    }\n  }\n\n  const printEditFabButton = () => {\n    if(!canEditProject(state.challenge.id, authService.getUser())) return;\n    return <IonFab horizontal=\"end\" vertical=\"bottom\" edge>\n              <IonFabButton size=\"small\" \n                            onClick={() => showEditModalFunction(state.challenge)}\n                            color={COLOR_LIGHT}  >\n                <IonIcon size=\"large\" icon={cog} />\n              </IonFabButton>\n            </IonFab>\n  }\n\n  const printAdminActionButtons = () => {\n    if(!canEditProject(state.challenge.id, authService.getUser())) return;\n    if(state.challenge.state === ChallengeState.waiting){\n      return <>\n              <IonButton size=\"small\" fill=\"clear\"\n                onClick={() => partyService.changeChallengeState(state.challenge.id, ChallengeState.current)} >\n                Start Challenge</IonButton>\n              <IonButton size=\"small\" fill=\"clear\"\n                onClick={() => partyService.changeChallengeState(state.challenge.id, ChallengeState.waiting)} >\n                Freeze For Future Use</IonButton>\n            </>\n    }\n    else if(state.challenge.state === ChallengeState.current){\n\n    }\n    else if(state.challenge.state === ChallengeState.finished) {\n\n    }\n    else if(state.challenge.state === ChallengeState.future) {\n\n    }\n\n  }\n\n  const printDoneIcon = () => {\n    if(state.challenge.challengeType === ChallengeType.checkin)\n      return <IonIcon size=\"large\" icon={checkmarkDone} />\n    if(state.challenge.challengeType === ChallengeType.note)\n      return <IonIcon size=\"large\" icon={readerOutline} />\n    if(state.challenge.challengeType === ChallengeType.value &&\n        state.challenge.challengeTypeUnit === ChallengeTypeUnit.Cup)\n      return <IonIcon size=\"large\" icon={cafeOutline} />\n    if(state.challenge.challengeType === ChallengeType.value &&\n        state.challenge.challengeTypeUnit === ChallengeTypeUnit.Kilometer)\n      return <IonIcon size=\"large\" icon={walkOutline} />\n    if(state.challenge.challengeType === ChallengeType.value &&\n        state.challenge.challengeTypeUnit === ChallengeTypeUnit.Hour)\n      return <IonIcon size=\"large\" icon={alarmOutline} />\n    if(state.challenge.challengeType === ChallengeType.value &&\n        state.challenge.challengeTypeUnit === ChallengeTypeUnit.Minute)\n      return <IonIcon size=\"large\" icon={timerOutline} />\n    if(state.challenge.challengeType === ChallengeType.value &&\n        state.challenge.challengeTypeUnit === ChallengeTypeUnit.Dollar)\n      return <IonIcon size=\"large\" icon={cashOutline} />\n    if(state.challenge.challengeType === ChallengeType.looser)\n      return <IonIcon size=\"large\" icon={trendingDown} />\n    if(state.challenge.challengeType === ChallengeType.gainer)\n      return <IonIcon size=\"large\" icon={trendingUp} />\n\n    return <IonIcon size=\"large\" icon={rocketOutline} />\n  }\n\n\n  const closeModal = () => {\n    log.info('Close modal');\n    dispatch('hideDoneAlert');\n  }\n\n  const submitModal = (action: ChallengeAction)  => {\n    log.info('Submit modal::: ', action);\n    partyService.submitChallengeActions(state.challenge.id, [action])\n    dispatch('hideDoneAlert');\n  }\n\n  const getCurrentAction = () => {\n    if(state.memberDoc === undefined) \n      return {date: state.currentDate, value: 0, data:{}, reward: {value: 0}}\n    const cAction = state.memberDoc.actions[state.currentDate];\n    if(!cAction)\n      return {date: state.currentDate, value: 0, data:{}, reward: {value: 0}}\n    if(!cAction.data) cAction.data = {};\n    return cAction;\n  }\n\n\n\n\n  const print = () => {\n    return (\n        <IonCard>\n          <IonCardHeader>\n            {/*<IonCardSubtitle>Card Subtitle</IonCardSubtitle>*/}\n            {printTitle()}\n          </IonCardHeader>\n          <IonCardContent>\n            <ChallengeMembersItem challenge={state.challenge} />\n            {printInfo()}\n          </IonCardContent>\n          <IonFooter>\n            {printActionButtons()}\n            {printAdminActionButtons()}\n          </IonFooter>\n\n          \n          {printEditFabButton()}\n          {printSubmitFab()}\n\n          <IonModal isOpen={(state.showDoneAlert && \n              state.challenge.challengeType === ChallengeType.note)} \n              onDidDismiss={() => closeModal()}>\n            <ChallengeAddActionNoteComponent \n                  doc={getCurrentAction()} \n                  closeFunc = {() => closeModal()}\n                  submitFunc = {submitModal}  />\n            </IonModal>\n\n          \n          <IonAlert \n            isOpen={(state.showDoneAlert && state.challenge.challengeType === ChallengeType.value)}\n            onDidDismiss={() => dispatch('hideDoneAlert')}\n            header=\"Submit Action:\"\n            inputs={[\n              {\n                name: 'value',\n                type: 'number',\n                min: 0,\n                value: Number(getCurrentAction().value)+1\n              },\n            ]}\n            buttons={[\n              {\n                text: 'Cancel',\n                role: 'cancel',\n                cssClass: 'secondary',\n                handler: () => {\n                  dispatch('hideDoneAlert');\n                }\n              },\n              {\n                text: 'Submit',\n                handler: (data) => {\n                  console.log(data);\n                  dispatch('hideDoneAlert');\n                  submitModal({...getCurrentAction(), ...{value: data.value}})\n                }\n              }\n            ]}\n          />\n\n\n          <IonAlert \n            isOpen={(state.showDoneAlert && \n              (state.challenge.challengeType === ChallengeType.looser ||\n               state.challenge.challengeType === ChallengeType.gainer))}\n            onDidDismiss={() => dispatch('hideDoneAlert')}\n            header=\"Submit Current Value:\"\n            inputs={[\n              {\n                name: 'currentValue',\n                type: 'number',\n                min: 0,\n                value: Number(getCurrentAction().value)+1\n              },\n            ]}\n            buttons={[\n              {\n                text: 'Cancel',\n                role: 'cancel',\n                cssClass: 'secondary',\n                handler: () => {\n                  dispatch('hideDoneAlert');\n                }\n              },\n              {\n                text: 'Submit',\n                handler: (data) => {\n                  console.log(data);\n                  dispatch('hideDoneAlert');\n                  submitModal({...getCurrentAction(), ...{value: 1, currentValue: data.currentValue}})\n                }\n              }\n            ]}\n          />\n\n\n          <IonAlert \n            isOpen={(state.showDoneAlert && state.challenge.challengeType === ChallengeType.checkin)}\n            onDidDismiss={() => dispatch('hideDoneAlert')}\n            header=\"Submit Action:\"\n            inputs={[\n              {\n                name: 'checkbox1',\n                id: 'checkbox1',\n                type: 'checkbox',\n                label: 'Check-In',\n                value: '1',\n                checked: false\n              },\n            ]}\n            buttons={[\n              {\n                text: 'Cancel',\n                role: 'cancel',\n                cssClass: 'secondary',\n                handler: () => {\n                  dispatch('hideDoneAlert');\n                }\n              },\n              {\n                text: 'Submit',\n                handler: (data) => {\n                  console.log(data);\n                  if(data[0]){\n                    console.log('Checked in');\n                    dispatch('hideDoneAlert');\n                    submitModal({...getCurrentAction(), ...{value: 1}})\n                  }\n                  else{\n                    console.log('Failed');\n                    dispatch('hideDoneAlert');\n                  }\n                }\n              }\n            ]}\n          />\n\n\n\n          <IonAlert \n            isOpen={(state.showBiggesGainerAcceptAlert)}\n            onDidDismiss={() => dispatch('showBiggestGainerAcceptAlert', false)}\n            header=\"Submit Action:\"\n            subHeader=\"Starting value is private, only used to calculate progress.\"\n            inputs={[\n              {\n                name: 'startingValue',\n                type: 'number',\n                label: 'Starting Value',\n              },\n            ]}\n            buttons={[\n              {\n                text: 'Cancel',\n                role: 'cancel',\n                cssClass: 'secondary',\n                handler: () => {\n                  dispatch('showBiggestGainerAcceptAlert', false);\n                }\n              },\n              {\n                text: 'Submit',\n                handler: (data) => {\n                  console.log(data);\n                  if(data.startingValue){\n                    dispatch('showBiggestGainerAcceptAlert', false);\n                    partyService.acceptChallenge(state.challenge, data)\n                  }\n                  else{\n                    dispatch('showBiggestGainerAcceptAlert', false);\n                  }\n                }\n              }\n            ]}\n          />\n\n          <IonAlert \n            isOpen={(state.showBiggesLooserAcceptAlert)}\n            onDidDismiss={() => dispatch('showBiggestLooserAcceptAlert', false)}\n            header=\"Submit Action:\"\n            subHeader=\"Starting value is private, only used to calculate progress.\"\n            inputs={[\n              {\n                name: 'startingValue',\n                type: 'number',\n                label: 'Starting Value',\n              },\n            ]}\n            buttons={[\n              {\n                text: 'Cancel',\n                role: 'cancel',\n                cssClass: 'secondary',\n                handler: () => {\n                  dispatch('showBiggestLooserAcceptAlert', false);\n                }\n              },\n              {\n                text: 'Submit',\n                handler: (data) => {\n                  console.log(data);\n                  if(data.startingValue){\n                    dispatch('showBiggestLooserAcceptAlert', false);\n                    partyService.acceptChallenge(state.challenge, data)\n                  }\n                  else{\n                    dispatch('showBiggestLooserAcceptAlert', false);\n                  }\n                }\n              }\n            ]}\n          />\n\n\n        </IonCard>\n    );\n  }\n  \n  return print();\n};\n\nexport default ChallengeListItemComponent;\n\n","import React, { useState, useReducer, useEffect } from 'react';\nimport { IonItem, IonLabel, IonIcon, IonInput, IonTextarea, IonButton, \n  IonHeader, IonTitle, IonToolbar, IonContent, IonFooter, \n  IonRange, IonFab, \n  IonFabButton, IonAlert, IonSegment, IonSegmentButton, IonSelectOption, IonSelect, IonCheckbox, IonNote } from '@ionic/react';\nimport { ChallengeIntervals, Challenge, ChallengeDifficulty, ChallengeType, ChallengeTypeUnit } from '../models';\nimport { capitalize } from '../../../utils';\nimport { COLOR_DANGER, COLOR_SUCCESS, COLOR_SECONDARY, COLOR_LIGHT } from '../../../colors';\nimport { trash } from 'ionicons/icons';\nimport ulog from 'ulog';\nimport './challenge.css'\n\nconst log = ulog('party');\n\n\ninterface challengeState {\n  regularity: {\n    interval: ChallengeIntervals,\n    min: number,\n    max: number,\n  }\n  doc: Challenge,\n  showDeleteWarrning: boolean\n}\n\nconst getRegularityValues = (interval: ChallengeIntervals) => {\n  switch (interval) {\n    case ChallengeIntervals.day:\n      return {interval: interval, min:1, max: 1}\n    case ChallengeIntervals.week:\n      return {interval: interval, min:1, max: 6}\n    case ChallengeIntervals.month:\n      return {interval: interval, min:1, max: 25}\n  }\n}\n\n\nconst reducer = (state, {type, payload}): challengeState => {\n  switch(type) {\n    case 'challengeChange':\n      const newDoc = {...state.doc, ...payload}\n      return {...state, ...{doc: newDoc}};\n    case 'stateChange':\n      return payload;\n    case 'showRemoveWarrning':\n      return {...state, ...{showDeleteWarrning: true}};\n    case 'hideRemoveWarrning':\n      return {...state, ...{showDeleteWarrning: false}};\n\n    default:\n      log.error('Action type is not a match');\n      return state;\n  }\n}\n\nconst ChallengeAddComponent = ({challenge, dismissFunc}:\n  {challenge:Challenge|null, dismissFunc: {(challenge:Challenge|null, action: 'save'|'remove'|'none')}}) => {\n  const _challenge = challenge|| new Challenge();\n  const getDefaultRegularityState: challengeState = {\n    regularity: getRegularityValues(_challenge.regularityInterval),\n    doc: _challenge,\n    showDeleteWarrning: false\n  }\n  log.warn('ADDDD', challenge);\n  const [state, _dispatch] = useReducer(reducer, getDefaultRegularityState)\n\n\n  useEffect(() => {\n    log.warn('USE EFFECT ADD:: ', challenge);\n    dispatch('challengeChange', challenge);\n  }, [challenge])\n\n  const dispatch = (type: 'challengeChange'|\n                          'stateChange'|\n                          'showRemoveWarrning'|\n                          'hideRemoveWarrning',\n                    payload:any = {}) => {\n  _dispatch({type, payload});\n  }\n\n\n  const handleChange = (e) => {\n    log.info(e);\n    const newDoc = {...state.doc, ...{[e.target.name]:e.detail.value}}\n    dispatch('challengeChange', newDoc)\n  }\n\n  const handleNamedChange = (property, value) => {\n    const newDoc = {...state.doc, ...{[property]: value}}\n    dispatch('challengeChange', newDoc)\n  }\n\n  const handlerRegularityValue = (e) => {\n    console.log(e);\n    const newDoc = {...state.doc, ...{regularityIntervalGoal: e.detail.value}};\n    dispatch('challengeChange', newDoc)\n  }\n\n  const handlerRegularityIntervalChange = (value) => {\n    value = value || 'day';\n    const newDoc = {...state.doc, ...{regularityInterval: value, regularityValue: 1}};\n    const newReg = {...state.regularity, ...getRegularityValues(value)};\n    dispatch('stateChange', {...state, ...{doc:newDoc, regularity: newReg}});\n  }\n\n  const printRegularityLabel = () => {\n\n    const times = (state.doc.regularityIntervalGoal > 1)? ' times a ': ' time a ';\n    if(state.doc.regularityInterval === 'day'){\n      return 'I will repeat this task every day.'\n    }\n    \n    return 'I will repeat this task ' + state.doc.regularityIntervalGoal + times + state.doc.regularityInterval\n  }\n\n  const handleDifficultyChange = (e) => {\n    const newDoc = {...state.doc, ...{difficulty: e.detail.value}};\n    dispatch('challengeChange', newDoc)\n  }\n\n  const handleMultiplierChange = (e) => {\n    if(Number(e.detail.value) <= 0 ) return;\n    const newDoc = {...state.doc, ...{challengePointMultiplier: Number(e.detail.value)}};\n    dispatch('challengeChange', newDoc)\n  }\n\n  const printDifficultyLabel = (chdiff: ChallengeDifficulty): string => {\n    switch(chdiff) {\n      case ChallengeDifficulty.trivial:\n        return 'Easy peasy lemon squeezy';\n      case ChallengeDifficulty.easy:\n        return 'Piece of Cake';\n      case ChallengeDifficulty.medium:\n        return \"Let's Rock\";\n      case ChallengeDifficulty.hard:\n        return 'No Pain, No Gain';\n      case ChallengeDifficulty.extreme:\n        return 'Death Wish';\n    }\n  }\n\n  const removehabit = () => {\n    dispatch('showRemoveWarrning');\n    dismissFunc(state.doc, 'remove');\n  }\n\n\n\n  const print = () => {\n    return (\n      <>\n        <IonHeader>\n          <IonToolbar>\n            {/*\n            <IonButtons slot=\"start\">\n              <IonButton> <IonIcon size=\"large\" icon={arrowBack} /></IonButton>\n            </IonButtons>\n            */}\n            <IonTitle>Add Challenge</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <IonContent>\n          <IonItem>\n              <IonLabel position=\"floating\">Name</IonLabel>\n              <IonInput \n                  name=\"name\"\n                  placeholder=\"Read book, Go running ...\" \n                  onIonChange={handleChange}\n                  value={state.doc.name} />\n          </IonItem>\n          <IonItem>\n              <IonLabel position=\"floating\">Note</IonLabel>\n              <IonTextarea \n                  placeholder=\"Enter more information here, motivate yourself...\"\n                  name=\"note\"\n                  onIonChange={handleChange}\n                  value={state.doc.note}></IonTextarea>\n          </IonItem>\n          <IonItem>\n            <IonSegment value={state.doc.regularityInterval}\n                        onIonChange={(e) => handlerRegularityIntervalChange(e.detail.value)}>\n              <IonSegmentButton value=\"day\">\n                <IonLabel>Daily</IonLabel>\n              </IonSegmentButton>\n              <IonSegmentButton value=\"week\">\n                <IonLabel>Weekly</IonLabel>\n              </IonSegmentButton>\n              <IonSegmentButton value=\"month\">\n                <IonLabel>Monthly</IonLabel>\n              </IonSegmentButton>\n            </IonSegment>\n          </IonItem>\n\n          {(state.doc.regularityInterval !== 'day')? (\n            <>\n              <IonRange \n                    min={state.regularity.min}\n                    max={state.regularity.max}\n                    value={state.doc.regularityIntervalGoal}\n                    onIonChange={handlerRegularityValue}\n                    color=\"secondary\" >\n                <IonLabel slot=\"start\">{state.regularity.min}</IonLabel>\n                <IonLabel slot=\"end\">{state.regularity.max}</IonLabel>\n              </IonRange>\n            </>\n          ) : (\n          <></> )}\n          <IonItem>\n            <IonLabel>{printRegularityLabel()}</IonLabel>\n          </IonItem>\n\n          <IonRange min={0} \n                    max={4} \n                    debounce={100}\n                    value={state.doc.difficulty}\n                    onIonChange={handleDifficultyChange}\n                    color=\"secondary\">\n              <IonLabel slot=\"start\">{capitalize(printDifficultyLabel(ChallengeDifficulty.trivial))}</IonLabel>\n              <IonLabel slot=\"end\">{capitalize(printDifficultyLabel(ChallengeDifficulty.extreme))}</IonLabel>\n          </IonRange>\n\n          <IonItem>\n            <IonLabel>{printDifficultyLabel(state.doc.difficulty)}</IonLabel>\n          </IonItem>\n\n          <div>\n            <IonButton \n              onClick={()=>handleNamedChange('challengeType', ChallengeType.checkin)}\n              color={(state.doc.challengeType === ChallengeType.checkin)?COLOR_SUCCESS : COLOR_LIGHT} >\n                Check-In</IonButton>\n            <IonButton \n              onClick={()=>handleNamedChange('challengeType', ChallengeType.value)}\n              color={(state.doc.challengeType === ChallengeType.value)?COLOR_SUCCESS : COLOR_LIGHT} >\n                Value</IonButton>\n            <IonButton \n              onClick={()=>handleNamedChange('challengeType', ChallengeType.note)}\n              color={(state.doc.challengeType === ChallengeType.note)?COLOR_SUCCESS : COLOR_LIGHT} >\n                Note</IonButton>\n            <IonButton \n              onClick={()=>handleNamedChange('challengeType', ChallengeType.gainer)}\n              color={(state.doc.challengeType === ChallengeType.gainer)?COLOR_SUCCESS : COLOR_LIGHT} >\n                Biggest Gainer</IonButton>\n            <IonButton \n              onClick={()=>handleNamedChange('challengeType', ChallengeType.looser)}\n              color={(state.doc.challengeType === ChallengeType.looser)?COLOR_SUCCESS : COLOR_LIGHT} >\n                Biggest Looser</IonButton>\n          </div>\n\n          {(state.doc.challengeType === 'Value')? (\n            <>\n            <IonItem>\n                  <IonLabel>Unit</IonLabel>\n                  <IonSelect  value={state.doc.challengeTypeUnit}\n                              onIonChange={(e) => handleNamedChange('challengeTypeUnit', e.detail.value)}\n                              color={COLOR_SECONDARY}\n                              placeholder=\"Select One\">\n                    <IonSelectOption value=\"Cup\">Cup</IonSelectOption>\n                    <IonSelectOption value=\"Dollar\">Dollar</IonSelectOption>\n                    <IonSelectOption value=\"Page\">Page</IonSelectOption>\n                    <IonSelectOption value=\"Minute\">Minute</IonSelectOption>\n                    <IonSelectOption value=\"Hour\">Hour</IonSelectOption>\n                    <IonSelectOption value=\"Meter\">Meter</IonSelectOption>\n                    <IonSelectOption value=\"Kilometer\">Kilometer</IonSelectOption>\n                    <IonSelectOption value=\"Other\">Other</IonSelectOption>\n                  </IonSelect>               \n            </IonItem>\n            <IonItem>\n                  <IonLabel position=\"floating\">Value</IonLabel>\n                  <IonInput type=\"number\" \n                            name=\"regularityEachDayGoal\"\n                            onIonChange={handleChange}\n                            value={state.doc.regularityEachDayGoal}/>\n            </IonItem>\n            </>\n          ) : (<></>)}\n          {(state.doc.challengeType === 'Value' &&\n            state.doc.challengeTypeUnit === ChallengeTypeUnit.Other)? (\n            <IonItem>\n                  <IonLabel position=\"floating\">Unit</IonLabel>\n                  <IonInput name=\"chalengeTypeOther\"\n                            onIonChange={handleChange}\n                            value={state.doc.chalengeTypeOther}/>\n            </IonItem>\n          ) : (<></>)}\n\n          {(state.doc.challengeType === ChallengeType.looser)? (\n            <IonItem>\n                  <IonLabel className=\"paddingDown\" position=\"floating\">\n                    <h2>Multiplier</h2>\n                    <IonNote  className=\"ion-text-wrap\">\n                      Points will be calculated based on progress times multiplier. For example\n                      if multiplier is 5, and first day your proggress is 5 less than starting value, \n                      then the points gained would be 25 (5 x 5 = 25)\n                    </IonNote>\n                  </IonLabel>\n                  <IonInput name=\"challengePointMultiplier\"\n                            type='number'\n                            onIonChange={handleMultiplierChange}\n                            value={state.doc.challengePointMultiplier}/>\n            </IonItem>\n          ) : (<></>)}\n\n          {(state.doc.challengeType === ChallengeType.gainer)? (\n            <IonItem>\n                  <IonLabel className=\"paddingDown\" position=\"floating\">\n                    <h2>Multiplier</h2>\n                    <IonNote  className=\"ion-text-wrap\">\n                      Points will be calculated based on progress times multiplier. For example\n                      if multiplier is 5, and first day your proggress is 2 more than starting value, \n                      then the points gained would be 25 (5 x 2 = 10)\n                    </IonNote>\n                  </IonLabel>\n                  <IonInput name=\"challengePointMultiplier\"\n                            type='number'\n                            onIonChange={handleMultiplierChange}\n                            value={state.doc.challengePointMultiplier}/>\n            </IonItem>\n          ) : (<></>)}\n\n\n\n          {(state.doc.challengeType ===  ChallengeType.note)? (\n            <IonItem>\n              <IonLabel>Vote Enabled: </IonLabel>\n              <IonCheckbox  name = \"chalengeTypeNoteVote\"\n                            onIonChange={(e) => handleNamedChange('chalengeTypeNoteVote', e.detail.checked)}\n                            checked={state.doc.chalengeTypeNoteVote} />\n            </IonItem>\n\n          ) : (<></>)}\n        </IonContent> \n\n\n\n\n\n\n\n\n\n\n\n\n        <IonFooter>\n          <IonToolbar>\n            <IonTitle>\n              <IonButton onClick={() => dismissFunc(state.doc, 'save')}>Save</IonButton>\n              <IonButton onClick={() => dismissFunc(null, 'none')}>Cancel</IonButton>\n            </IonTitle>\n          </IonToolbar>\n        </IonFooter>\n        <IonFab horizontal=\"end\" vertical=\"bottom\" >\n          <IonFabButton size=\"small\" color={COLOR_DANGER} onClick={() => dispatch('showRemoveWarrning')}>\n            <IonIcon size=\"large\" icon={trash} />\n          </IonFabButton>\n        </IonFab>\n        <IonAlert\n          isOpen={state.showDeleteWarrning}\n          onDidDismiss={() => dispatch('hideRemoveWarrning')}\n          header={'Warrning!!!'}\n          message={'Are you sure you want to <strong>delete</strong> this habit?'}\n          buttons={[\n            {\n              text: 'Cancel',\n              role: 'cancel',\n              cssClass: 'secondary',\n              \n            },\n            {\n              text: 'Yes Im Sure',\n              handler: () => removehabit()\n            }\n          ]}\n        />\n      </>\n      );\n  }\n  \n  return print();\n};\n\nexport default ChallengeAddComponent;\n","import React, { useReducer, useEffect } from 'react';\nimport { IonList, IonModal, IonCard, \n  IonCardContent, IonCardHeader, IonCardTitle, \n  IonFab, IonFabButton, IonIcon, IonButton, IonFooter } from '@ionic/react';\nimport { Challenge, PartyProject, TYPE_PARTY } from '../models';\nimport ChallengeListItemComponent from './Challenge.listitem.component';\nimport ChallengeAddComponent from './Challenge.add.component';\nimport { add } from 'ionicons/icons';\nimport { dataService } from '../../data/dataService';\nimport { partyService } from '../party.service';\nimport { getProjectChildId, canEditProjectByRights } from '../../data/utilsData';\nimport { saveIntoArray } from '../../../utils';\nimport  ulog from 'ulog';\nimport { authService } from '../../auth/authService';\n\n//ulog.level = 7;\nconst log = ulog('challengelist');\n\n\nexport interface ChallengeListState {\n  showModal: boolean,\n  modalChallenge: Challenge|null,\n  challenges: Challenge[],\n}\n\nconst reducer = (state, action): ChallengeListState => {\n  switch(action.type) {\n    case 'addChallengeModal': \n      return {...state, ...{showModal: true, modalChallenge: action.data}}\n    case 'hideChallengeModal':\n      return {...state, ...{showModal: false, modalChallenge: null}}\n    case 'loadChallenges': \n      return {...state, ...{challenges: action.data}}\n    case 'challengeChange':\n      return {...state, ...{challenges:saveIntoArray(action.data,state.challenges)}};\n    default:\n      return state;\n  }\n}\n\n\n\n\nconst ChallengeListComponent = ({project}:{project: PartyProject}) => {\n  const [state, _dispatch] = useReducer(reducer, {\n    showModal: false,\n    modalChallenge: null,\n    challenges: [],\n  });\n\n  useEffect(() => {\n    const sub = dataService.subscribeByPropertyChange('secondaryType', 'challenge')\n      .subscribe(change => {\n        if(change.id.startsWith(getProjectChildId(project.id)))\n          dispatch('challengeChange', change);\n\n    });\n    if(project.id)\n      loadChallenges(project.id);\n\n    return () => {\n      sub.unsubscribe();\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [project.id])\n\n  const loadChallenges = async (id: string) => {\n    const res = await dataService.queryByProperty(\n        'secondaryType', 'equals', 'challenge', TYPE_PARTY);\n    const challenges = res.filter(doc => doc.id.startsWith(getProjectChildId(id)));\n    dispatch('loadChallenges', challenges);\n  };\n\n  const dispatch = (type: 'addChallengeModal'|\n                          'loadChallenges'|\n                          'challengeChange'|\n                          'hideChallengeModal', data:any) => {\n    _dispatch({type, data});\n  }\n  \n  const addChallenge = (ch:Challenge = new Challenge()) => {\n    log.warn('Add Challenge::: ', ch);\n    dispatch('addChallengeModal', ch);\n  }\n\n  const hideChallengeModal = () => {\n    dispatch('hideChallengeModal', null);\n  }\n\n  const challengeDismissFunc = (challenge: Challenge|null, action:'save'|'remove'|'none') => {\n    hideChallengeModal();\n    if(action === 'save' && challenge != null){\n      partyService.saveChallenge(challenge, project);\n    }\n    else if(action === 'remove' && challenge != null && challenge.id){\n      //dataFunc.remove(habit.id);\n    }\n  }\n\n\n  const canEditThisProject = () => {\n    const self = project.members.find(m => m.id === authService.userid);\n    if(!self) return false;\n    return canEditProjectByRights(self.rights);\n  }\n\n  return (\n    <IonCard>\n      <IonCardHeader>\n        <IonCardTitle>Challenges</IonCardTitle>\n      </IonCardHeader>\n      <IonCardContent>\n        <IonList>\n          {state.challenges.map(challenge => (\n                <ChallengeListItemComponent\n                          challenge={challenge} \n                          key={challenge.id} \n                          showEditModalFunction={addChallenge}/>\n          ))}\n        </IonList>\n          <IonModal isOpen={state.showModal} onDidDismiss={() => hideChallengeModal()}>\n          <ChallengeAddComponent challenge={state.modalChallenge} \n                              dismissFunc = {challengeDismissFunc}  />\n          </IonModal>\n\n      </IonCardContent>\n      <IonFooter>\n        {canEditThisProject()? (\n          <IonButton    onClick={() => addChallenge()}\n            fill=\"clear\">Add New Challenge</IonButton>\n        ) : ( <></>)}\n      </IonFooter>\n    </IonCard>\n  )\n}\n\n\n\nexport default ChallengeListComponent;","import React, { useState, useEffect, useRef } from 'react';\nimport { IonPage, IonContent, IonRefresher, IonRefresherContent} from '@ionic/react';\nimport HeaderWithProgress from '../../../components/HeaderWithProgress';\nimport { PartyProject, TYPE_PARTY } from '../models';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { dataService } from '../../data/dataService';\nimport { HabitsService } from '../../../pages/habits/habits.service';\nimport PartyMembersListComponent from '../components/Members.list.component';\nimport ChallengeListComponent from '../components/Challenge.list.component';\nimport MessagesListComponent from '../../messages/components/Messages.list.component';\nimport { getChannelFromProjectId } from '../../data/utilsData';\n\n\n\ninterface State {\n  party:PartyProject,\n}\n\nconst getInitState = {\n    party: new PartyProject(),\n}\n\n\nconst loadParty = async (id:string, state, setState, history) => {\n\n  const dataSub = dataService.getReadySub().subscribe(async (ready) => {\n    if(!ready) return;\n    const party = await dataService.getDoc(id, TYPE_PARTY);\n    \n    if(!party){\n      dataSub.unsubscribe();\n      history.push('/clash');\n      return\n    }\n    setState({...state, ...{party}})\n    dataSub.unsubscribe();\n  })\n  \n}\n\n//*********** Page Start *************/\nconst PartyViewPage = () => {\n  const {id} = useParams();\n  const history = useHistory();\n  const [state, setState] = useState<State>(getInitState)\n \n  useEffect(() => {\n    if(id)\n      loadParty(id, state, setState, history)\n    else {\n      history.push('/clash');\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id])\n  \n  useEffect(() => {\n    const idd = id || '';\n    console.log(idd, id);\n    const sub = dataService.subscribeDocChanges(idd).subscribe(change => {\n      console.log(change);\n      setState({party: change});\n    });\n    return () => {\n      sub.unsubscribe();\n    };\n  }, [id])\n\n\n\n\n  return (\n    <IonPage>\n      <HeaderWithProgress title={\"Party: \" + state.party.name} />\n      <IonContent>\n        <IonRefresher slot=\"fixed\" onIonRefresh={(e) => dataService.refresh(e)}>\n            <IonRefresherContent></IonRefresherContent>\n        </IonRefresher>\n      {state.party.id? (\n        <>\n          <PartyMembersListComponent  project={state.party} />\n          <ChallengeListComponent project={state.party} />\n          <MessagesListComponent channel={getChannelFromProjectId(state.party.id)} />\n        </>\n      ):(<></>)}\n\n      </IonContent>\n    </IonPage>\n  )\n}\n\nexport default PartyViewPage;","import {\n  IonPage,\n  IonContent,\n  IonList,\n  IonItem,\n  IonLabel,\n  IonSegmentButton,\n  IonSegment} from '@ionic/react';\nimport React, { useReducer, useEffect } from 'react';\nimport './Home.css';\nimport HeaderWithProgress from '../components/HeaderWithProgress';\nimport ulog from 'ulog';\nimport { authService } from '../modules/auth/authService';\nimport { dataService } from '../modules/data/dataService';\nimport _ from 'lodash';\nimport { TYPE_SETTINGS } from '../modules/data/utilsData';\nimport { useTranslation } from 'react-i18next';\n\nconst log = ulog('home');\n\n\nexport interface SettingsState {\n  settingsId: string,\n  doc: any;\n}\n\nconst reducer = (state, {type, payload}:{type:string, payload:any}): SettingsState => {\n  console.log(type, payload)\n  switch(type) {\n    case 'setDoc':\n      dataService.save(payload, TYPE_SETTINGS);\n      return {...state, ...{doc: payload}};\n    case 'setSettingsId':\n      return {...state, ...{settingsId: payload}};\n    case 'setState':\n      return payload;\n    default:\n      log.error('Action Type is incorrect, default called', type, payload);\n      return state;\n  }\n}\n\nconst SettingsPage  = () => {\n\n  const [state, _dispatch] = useReducer(reducer, {\n    settingsId: '',\n    doc: {}\n  })\n\n  const {t} = useTranslation();\n\n  const dispatch = (type: 'setDoc'|\n                          'setState'|\n                          'setSettingsId',\n                    payload: any = {}) => {\n    _dispatch({type, payload});\n  }\n\n  useEffect(() => {\n    const id = dataService.getSettingsDocId();\n    log.info(id);\n    const sub = authService.username$.subscribe(() => {\n      log.info('userID changed, settingsID: ', id);\n      dispatch('setSettingsId', id);\n    });\n    dispatch('setSettingsId', id);\n    \n    return () => {\n      sub.unsubscribe();\n    };\n  }, [])\n\n  useEffect(() => {\n    log.info(state);\n    const sub = dataService.subscribeDocChanges(state.settingsId).subscribe(doc => {\n      log.info('Settings Doc Changed:::::: ', doc);\n      dispatch('setState', {...state, ...{doc}});\n    });\n    loadSettingsDoc();\n    return () => {\n      sub.unsubscribe();\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.settingsId])\n\n  const loadSettingsDoc = async () => {\n    log.info('loading settings doc: ', state);\n    if(state.settingsId === \"\")return;\n    const doc = await dataService.getDoc(state.settingsId, TYPE_SETTINGS);\n    log.info(doc);\n    if(doc){\n      log.info(doc);\n      dispatch('setState', {...state, ...{doc}})\n      console.log(state);\n    }\n      \n  }\n\n  useEffect(() => {\n    console.log(state);\n  }, [state]);\n\n  const handleChange = (e) => {\n    const newDoc = {...state.doc, ...{[e.target.name]:e.detail.value}}\n    console.log(newDoc, state, e);\n    dispatch('setDoc', newDoc);\n  }\n\n  const handleDocPropertyChange = (property, value) => {\n    console.log(state);\n    if(!state.doc || !state.doc.id) return;\n    const newDoc = {...state.doc, ...{[property]:value}}\n    console.log(newDoc, state, property, value);\n    dispatch('setDoc', newDoc);\n  }\n\n  return (\n    <IonPage>\n      <HeaderWithProgress title={t('settingsTitle')} />\n      <IonContent >\n        \n        <IonList>\n            <IonItem>\n              <IonLabel>\n                <h1> {t('auth.username')}: {authService.getUser().username} </h1>\n                <h3> {t('auth.ID')}: {authService.userid} </h3>\n                {t('menu')}.....\n                <br/><br/>\n                Records number\n                <br /><br />\n                Change Password\n                <br /><br />\n              </IonLabel>\n          </IonItem>\n              \n          <IonItem key=\"languagestring\">\n              <h2>Language: {state.doc.language}</h2>\n          </IonItem>\n          <IonItem>\n            <IonSegment \n                value={state.doc.language}\n                onIonChange={(e) => handleDocPropertyChange('language', e.detail.value)}>\n              <IonSegmentButton value=\"en\">\n                <IonLabel>English</IonLabel>\n              </IonSegmentButton>\n              <IonSegmentButton value=\"zh\">\n                <IonLabel>Chinese</IonLabel>\n              </IonSegmentButton>\n            </IonSegment>\n          </IonItem>\n\n        </IonList>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default SettingsPage;\n\n","import React, { useReducer, useEffect } from 'react';\nimport ulog from 'ulog'\nimport { IonContent, IonRefresher, IonRefresherContent, IonPage, IonList, IonListHeader, IonLabel, IonItem, IonAvatar, IonSegmentButton, IonSegment, IonButton, IonIcon, IonBadge } from '@ionic/react';\nimport { dataService } from '../../data/dataService';\nimport HeaderWithProgress from '../../../components/HeaderWithProgress';\nimport \"./market.css\";\nimport { gamifyService } from '../../gamify/gamifyService';\nimport { MarketItem, MarketItems } from '../models';\n\nconst log = ulog('default');\n\nconst reducer = (state, {type, payload}) => {\n  log.log(type, payload, state);\n  switch(type) {\n    case 'setView':\n      return {...state, ...{view:payload}};\n    case 'setState': \n      return payload;\n    case 'setDoc':\n      return {...state, ...{doc: payload}}\n    default:\n      log.error('Incorrect action, ', type, payload);\n      return state;\n      \n  }\n}\n\n\nconst Market = () => {\n\n  const [state, _dispatch] = useReducer(reducer, {\n    view:'user', // user or market\n    gold: 0,\n    userItems:[], \n    marketItems:[]}); \n  \n  const dispatch = (type:   'setView'|\n                            'setDoc'|\n                            'setState', payload:any = {}) => {\n  _dispatch({type, payload});\n  }\n\n  useEffect(() => {\n    const sub = gamifyService.state$.subscribe(s => {\n      log.log('State update::: ', s)\n      if(!s.userItems) return;\n      dispatch('setState', {...state, ...{userItems:s.userItems, gold: s.gold}});\n    })\n\n    dispatch('setState', {...state, ...{userItems: gamifyService.state.userItems, \n                                        gold: gamifyService.state.gold}});\n\n    return () => {\n      sub.unsubscribe();\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const buyItem = (item:MarketItem) => {\n    gamifyService.buyItem(item);\n  }\n\n\n  return (\n  <IonPage>\n    <HeaderWithProgress title=\"Farmers Market\" />\n    <IonContent>\n      \n      <IonRefresher slot=\"fixed\" onIonRefresh={(e) => dataService.refresh(e)}>\n        <IonRefresherContent></IonRefresherContent>\n      </IonRefresher>\n      <IonSegment value={state.view} onIonChange={e => dispatch('setView', e.detail.value)}>\n          <IonSegmentButton value=\"user\">\n            <IonLabel>User Items</IonLabel>\n          </IonSegmentButton>\n          <IonSegmentButton value=\"market\">\n            <IonLabel>Market</IonLabel>\n          </IonSegmentButton>\n      </IonSegment>\n      <IonList>\n        \n\n        {(state.view === 'user')? (\n          <>\n          <IonListHeader lines=\"inset\">\n            <IonLabel>User Items</IonLabel>\n          </IonListHeader>\n          {state.userItems.map(item => (\n            <IonItem key={item.id}>\n              <IonAvatar slot=\"start\">\n                <img src={\"assets/market/\"+ item.pic + '.svg'} alt=\"item\" />\n              </IonAvatar>\n              <IonLabel><h2>{item.name}</h2></IonLabel>\n              <IonBadge slot=\"end\" color=\"primary\">\n                {item.quantity}\n              </IonBadge>\n            </IonItem>\n          ))}\n          </>\n        ) : (\n          <>\n          <IonListHeader lines=\"inset\">\n            <IonLabel>Market</IonLabel>\n          </IonListHeader>\n          {MarketItems.map(item => (\n            <IonItem key={item.id}>\n              <IonAvatar slot=\"start\">\n                <img src={\"assets/market/\"+ item.pic + '.svg'} alt=\"item\" />\n              </IonAvatar>\n              <IonLabel><h2>{item.name}</h2></IonLabel>\n              <IonButton  disabled={item.price > state.gold} \n                          onClick={() => buyItem(item)}\n                          slot=\"end\">\n                Buy<br />\n                {item.price} Gold\n              </IonButton>\n            </IonItem>\n  \n          ))}\n          </>\n        )}\n        \n      </IonList>\n\n\n      <div>\n        <img className=\"marketPic\" src={\"/assets/pics/marketheader.svg\"}  alt=\"MarketLogo\"/>\n      </div>\n    </IonContent>\n  </IonPage>\n  )\n}\n\n\n\n\nexport default Market;","import React, {  } from 'react';\nimport { Redirect, Route, useHistory, useLocation } from 'react-router-dom';\nimport UserPage from './modules/auth/components/user.page';\nimport TodosPage from './pages/todo/Todos.page';\nimport IntroPage from './modules/auth/components/intro.page';\nimport { useAppStatus, AppStatus } from './modules/app/hooks/appStatus.hook';\nimport Home from './pages/Home';\nimport NotFound from './pages/NotFound';\nimport UnauthenticatedRoute from './modules/auth/unauthenticatedRoute';\nimport HabitsPage from './pages/habits/Habits.page';\nimport { IonSplitPane, IonRouterOutlet } from '../node_modules/@ionic/react';\nimport Menu from './components/Menu';\nimport PartiesPage from './modules/parties/pages/Parties.page';\nimport PartyViewPage from './modules/parties/pages/Party.view.page';\nimport SettingsPage from './pages/Settings';\nimport Market from './modules/market/pages/market';\n\nexport const Routes = () => {\n  const [appStatus] = useAppStatus();\n  const history = useHistory();\n  const location = useLocation();\n\n  if(appStatus.status === AppStatus.auth && location.pathname.startsWith('/auth/')){\n    if(location.state){\n      const newpath = location.state['prev'] || '/';\n      history.push(newpath);\n    }\n  }\n  \n  const getRoutes = () => {\n    switch(appStatus.status){\n      case AppStatus.auth:\n        return (\n          <IonSplitPane when=\"sm\" contentId=\"main\">\n            <Menu key=\"menumain\"/>\n            <IonRouterOutlet id=\"main\">\n                <Route path=\"/home\" component={Home} exact={true} /> \n                <Route path=\"/settings\" component={SettingsPage} exact={true} />    \n                <Route path=\"/market\" component={Market} exact={true} />       \n                <Route exact path=\"/auth/user\" component={UserPage} />\n                <Route path=\"/todos\" component={TodosPage} exact={true} />\n                <Route path=\"/todos/:list\" component={TodosPage} exact={true} />\n                <Route path=\"/todos/tag/:tag\" component={TodosPage} exact={true} />\n                <Route path=\"/habits\" component={HabitsPage} exact={true} />\n                <Route path=\"/clash\" component={PartiesPage} exact={true} />\n                <Route path=\"/clash/:id\" component={PartyViewPage} exact={true} />\n                <Route path=\"/\" render={() => <Redirect to=\"/home\" />} exact={true} />\n                <Route path=\"/404\" component={NotFound} />\n                <Redirect to=\"/404\" />\n            </IonRouterOutlet>\n        </IonSplitPane>\n        )\n      case AppStatus.guest:\n          return (\n            <IonRouterOutlet>\n              <UnauthenticatedRoute exact path=\"*\" component={Home} />\n            </IonRouterOutlet>\n          );\n      default:\n          return (\n            <IonRouterOutlet>\n              <Route exact path=\"*\"  component={IntroPage} />\n            </IonRouterOutlet>\n          );\n      \n\n    }\n  }\n\n  return getRoutes();\n}","import React, { useState, useEffect } from 'react';\nimport { Subscription } from 'rxjs';\nimport { toastService, ToastMessage } from './toastService';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const Toasts: React.FC = () => {\n  const [message, setMessage] = useState<ToastMessage | null>(null);\n\n  useEffect(() => {\n    const subscriptions: Subscription[] = [\n      toastService.messages$.subscribe((m: ToastMessage) =>{\n        setMessage(m);\n      })\n    ];\n    return () => { subscriptions.map(it => it.unsubscribe()) };\n  },[message]);\n\n  return (\n    <div className='toastDiv' >\n      <ToastContainer\n          position=\"top-right\"\n          autoClose={5000}\n          hideProgressBar\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          draggable\n          pauseOnHover\n          />\n    </div>\n  );\n};","import React from 'react';\nimport { IonApp } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\n\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\nimport './theme/my.css';\n\nimport { Loading } from './modules/loading/loading.component';\nimport { Routes } from './routes';\nimport { Toasts } from './modules/toast/toast.component';\n\n\n\n\n\nconst App: React.FC = () => (\n  <IonApp>\n    <IonReactRouter>\n        <Loading /><Toasts />\n        <Routes />\n    </IonReactRouter>\n  </IonApp>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { I18nextProvider } from 'react-i18next';\nimport * as serviceWorker from './serviceWorker';\n\nimport i18n from './i18n';\n\nReactDOM.render(\n  <I18nextProvider i18n={i18n}>\n     <App />\n  </I18nextProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}