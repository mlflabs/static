{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","pages/habits/models.ts","modules/loading/loadingService.ts","modules/loading/loading.component.tsx","modules/auth/components/user.page.tsx","modules/data/models.ts","env.ts","utils.ts","pages/habits/utilsHabits.ts","modules/data/utilsData.ts","modules/parties/models.ts","pages/todo/models.ts","pages/todo/todo.new.component.tsx","pages/todo/todo.edit.inline.component.tsx","modules/data/adapters/dexie.ts","modules/toast/toastService.ts","modules/localStorage/localStorageService.ts","modules/ajax/ajax.ts","modules/auth/authService.ts","modules/data/sync.ts","modules/data/dataService.ts","modules/messages/models.ts","modules/social/models.ts","modules/gamify/utilsGamify.ts","modules/gamify/gamifyService.ts","components/animatedIcon.tsx","pages/todo/Todo.listitem.component.tsx","pages/todo/todo.service.ts","pages/todo/hooks/todos.hook.ts","modules/app/hooks/appStatus.hook.ts","components/HeaderWithProgress.tsx","pages/todo/Todos.page.tsx","modules/auth/components/intro.page.tsx","modules/parties/party.service.ts","modules/social/social.service.ts","modules/social/components/Friends.list.component.tsx","modules/messages/components/Messages.list.component.tsx","colors.ts","pages/Home.tsx","pages/NotFound.tsx","modules/forms/myInput.tsx","modules/forms/myForm.tsx","modules/auth/components/auth.menu.component.tsx","modules/auth/components/login.page.tsx","modules/auth/components/register.page.tsx","modules/auth/unauthenticatedRoute.tsx","pages/habits/habits.service.ts","pages/habits/Habit.listitem.component.tsx","pages/habits/Habit.add.component.tsx","pages/habits/Habits.page.tsx","pages/habits/hooks/habits.hook.ts","components/MenuHeaderWithProgress.tsx","pages/todo/list.inline.add.component.tsx","pages/todo/todo.menu.item.tsx","pages/todo/todo.menulist.component.tsx","modules/menu/hooks/menu.hook.tsx","components/Menu.tsx","modules/parties/components/Party.edit.component.tsx","modules/parties/components/Party.listitem.component.tsx","modules/parties/pages/Parties.page.tsx","modules/parties/components/Challenge.member.scoreHistory.tsx","modules/parties/components/Members.list.component.tsx","modules/parties/components/Challenge.members.item.component.tsx","modules/parties/components/Challenge.listitem.component.tsx","modules/parties/components/Challenge.add.component.tsx","modules/parties/components/Challenge.list.component.tsx","modules/parties/pages/Party.view.page.tsx","routes.tsx","modules/toast/toast.component.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","habitStage","habitIntervals","habitDifficulty","loadingService","_loading","loading$","BehaviorSubject","show","this","msg","next","Loading","useState","state","setState","useEffect","subscriptions","subscribe","res","it","unsubscribe","isOpen","message","UserPage","Doc","String","fromCharCode","values","undefined","name","deleted","created","Date","now","updated","creator","type","dirty","rev","assign","ProjectItem","note","access","printDifficulty","hab","trivial","easy","medium","hard","extreme","Habit","stage","current","difficulty","regularityInterval","day","regularityValue","regularityEachDayGoal","progress","currentStreak","bestStreak","newRewards","ulog","level","TRACE","detail","process","REACT_APP_STAGE","SYNC_SERVER","AUTH_API_URL","env","APP_ID","ACCESS_META_KEY","SERVER_ACCESS_META_KEY","MOMENT_DATE_FORMAT","TOKEN_EXPIRATION","log","capitalize","s","charAt","toUpperCase","slice","printDateRelative","timestamp","m","moment","diff","fromNow","format","error","getNested","obj","args","reduce","saveIntoArray","item","ary","idKey","i","getIndexById","length","saveIntoDocList","filter","d","clamp","val","max","min","getInitGamifyRewards","base","gold","experience","getStreakByWeek","weeksBack","firstDayOfWeek","firstDay","streak","isSame","add","subtract","getProgressValueByDate","getProgressDate","getStreakByMonth","monthsBack","date","currentDay","withinWeekBuffer","buffer","offset","isAfter","calculateHabitStreakByMonth","bufferSize","currentBiggestStreak","cont","currentValue","calculateHabitStreakByWeek","calculateDailyHabitStreak","getProgressDateBySubtract","value","generateUserChannelId","userid","getDefaultProject","uuid","generateProjectUUID","genrateMetaData","generateUUID","ok","shortid","generate","substring","getProjectChildId","getChannelFromProjectId","app","generateCollectionId","projectid","collection","replace","waitMS","ms","setTimeout","ChallengeState","ChallengeDifficulty","ChallengeIntervals","getDocumentRights","user","channel","split","getChannelNameFromId","canEditProjectByRights","rights","getDefaultTodoList","project","TodoList","folder","icon","secondaryType","fullname","color","_new","getDefaultTodoTag","TodoTag","animatedIcon","Todo","done","list","tags","parent","subTodos","showSubTodos","showDone","doneRewards","TodoNewComp","tag","saveFunc","projectId","title","save","a","warn","newDoc","push","className","placeholder","onKeyPress","key","onIonChange","getDefaultState","todo","tagDocs","showDeleteWarrning","text","mergeText","TodoEditInlineComponent","dataFunctions","hideRemoveWarrning","handleTagChange","newtags","find","t","_","concat","includes","fill","size","onClick","src","printTag","class","autoGrow","onIonBlur","match","exec","index","newState","select","close","trash","onDidDismiss","header","buttons","role","cssClass","handler","remove","DexieAdapter","scheme","db","_ready","ready$","_subscriptions","changes$","Subject","Dexie","stores","tables","forEach","columns","version","_init","open","sub","get","bulkGet","doc","field","operator","where","equals","toArray","docs","startsWith","notEqual","put","bulkPut","ToastType","PartyProject","members","moneyTypeSingle","moneyTypeMultiple","moneyColor","Challenge","waiting","regularityIntervalGoal","localStorageService","localStorage","getItem","JSON","parse","str","stringify","setItem","console","getAjaxMessage","success","data","status","errors","getPostRequest","url","form","options","getErrorMessage","location","post","showLoading","loadingMessage","axios","hideLoading","info","response","AuthStatus","toastService","messages$","default","milliseconds","toast","autoClose","duration","err","showMessage","getUser","username","email","token","token_expiery","expires","isGuest","getGuestUser","authService","_user","_authStatus","authStatus$","username$","loadAuth","User","forceLogout","setAuthStatus","setObject","isEqual","Guest","getObject","updateUser","password","history","prev","printServerErrors","organizeData","channels","checkpoints","syncData","props","syncurl","checkpoint","chpoints","types","databaseScheme","sync","dataService","authId","_ready$","addSyncCall$","pipe","throttleTime","_syncRemote","getDoc","getBulk","queryByProperty","getProjectItems","remoteSync","oldDoc","getToken","gotNewRightsToken","doc2","doctype","channelname","asObservable","change","property","projectChildId","authid","syncRemote","dbSub","ready","Number","requestMaxSize","saveFromSync","calculateLevelExperience","exp","x","Math","floor","pow","calculateDoneTodoGold","days","rew","TODO_DONE_GOLD_REWARDS","calculateDoneTodoExperience","TODO_DONE_EXPERIENCE_REWARDS","gamifyService","_userId","_state","health","maxHealth","maxExperience","items","state$","calculateFinishedTodoRewards","addGold","messageReceivedGold","addExperience","messageReceivedExperience","messageLostGold","messageLostExperience","calculateNewTodo","calculateNewHabitRewards","habit","dataSub","getReadySub","loadInitDocs","_save","sub2","subscribeDocChanges","getGamifyDocId","prog","reward","round","preMessage","postMessage","equal","initEqual","ts","red","AnimatedIcon","iconsvg","actionFunc","isStopped","isPaused","defaultOptions","loop","autoplay","render","animationData","rendererSettings","clearCanvas","scaleMode","preserveAspectRatio","actionHandler","height","width","reducer","payload","TodoListItemComp","selectedTodo","useReducer","_dispatch","dispatch","doneHandler","handleSelectTodo","printEdit","button","lines","slot","restart","check","sort","printSmallTagFromFullname","TodoService","_projectid","doneTodos","_subscription","listName","tagName","getTags","reloadTodos","subscribeProjectTypeChanges","filterAndSaveTodos","filtered","filterDoneParentFunction","todoId","parentId","parentTodo","addSubTodoToParent","printSimpleError","saveRes","removeSubTodoFromParent","todoService","AppStatus","HeaderWithProgress","style","right","alt","top","heart","trailWidth","percent","strokeWidth","strokeColor","leaf","TodosPage","useLocation","params","useParams","pathname","useRef","selectList","changeDoneFilter","init","useTodosCollectionFacade","dataFunc","lastChild","IntroPage","initPartyState","partyService","sub1","subscribeChanges","party","channelid","partyProject","_createParty","saveNewProject","challenge","_createChallenge","saveSystemDoc","msgId","replied","accepted","newMsg","challengeid","saveFromServer","actions","trace","rewards","initSocialState","friends","socialService","_userid","action","showAddModal","FriendsListComponent","hideAddUser","member","inputs","addFriend","messages","MessagesListComponent","loadMsgs","subscribeChannelTypeChanges","getAllByChannel","msgs","b","printMessageIcon","messageType","mail","peopleCircle","personAdd","printReplyStatus","happy","sad","printMessage","from","acceptPartyInvitation","rejectPartyInviation","printClubRequestAcceptRejectButtons","acceptFriendInvitation","rejectFriendInviation","printFriendRequestAcceptRejectButtons","Home","NotFound","padding","MyInput","updateFunction","position","displayName","hasValidation","event","target","printErrors","submitButtonText","getFormOptions","settings","getValidator","MyForm","submitFunction","valid","initForm","model","Array","isArray","validateItem","validators","validateForm","updateItem","validate","findById","validator","isEmpty","isLength","isEmail","disabled","AuthMenuComponent","page","useHistory","LoginPage","submitButtongText","submit","loginAndRedirect","paddingTop","logIn","RegisterPage","register","UnauthenticatedRoute","exact","path","component","to","getInitHabitsState","selected","habits","stageFilter","HabitsService","_project","_docs","docs$","getAllByProject","filterhabits","filterFunction","HabitListItemComponent","showEditModalFunction","setDoc","printDate","active","printDayIcon","updatehabit","checkmarkCircleOutline","radioButtonOff","newProgress","progresslist","calculateHabitProgressRewards","h","week","month","calculateCurrentStreak","horizontal","vertical","edge","cog","getRegularityValues","interval","HabitAddComponent","dismissFunc","getDefaultRegularityState","regularity","handleChange","handlerRegularityValue","handleDifficultyChange","newReg","handlerRegularityIntervalChange","debounce","times","printRegularityLabel","printDifficultyLabel","showModal","modalHabit","getAction","HabitsPage","habitsService","changeStageFilter","getProject","useHabitsCollectionFacade","habitsState","addhabit","MenuHeaderWithProgress","ListAddInlineComponent","encodeURI","newList","saveList","TodoMenuItemButtonComponet","actonFunc","sun","routerLink","routerDirection","initialState","tagsOpen","lists","openLists","showDeleteListAlert","deleteList","l","TodoMenuListComponent","subTodoList","loadInitTodoLists","todolists","side","subHeader","getMenuState","sunny","star","checkmark","basket","construct","appPages","home","refresh","bonfire","apps","lastComponent","withRouter","useMenuHookFacade","contentId","appPage","autoHide","PartyEditComponent","PartyListItemComponent","userId","PartiesPage","subs","changes","editParty","saveParty","ChallengeMemberScoreHistory","printDay","dateString","score","scoreHistory","PartyMembersListComponent","printScore","self","canEditThisProject","addUser","ChallengeMembersItem","ChallengeListItemComponent","joined","printAdminActionButtons","canEditProject","changeChallengeState","finished","future","acceptChallenge","submitChallengeActions","ChallengeAddComponent","_challenge","chdiff","modalChalleng","challenges","ChallengeListComponent","modalChallenge","subscribeByPropertyChange","loadChallenges","addChallenge","ch","hideChallengeModal","saveChallenge","getInitState","loadParty","PartyViewPage","Routes","loading","dataReady","appStatus","setAppStatus","setStatusFunction","getIsAuthenticated","renewToken","getUsername","guest","auth","useAppStatus","newpath","when","getRoutes","Toasts","setMessage","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","App","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"qttBAAA,IAAIA,EAAM,CACT,kCAAmC,CAClC,IACA,IAED,iCAAkC,CACjC,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,iCAAkC,CACjC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,gCAAiC,CAChC,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,qBAAsB,CACrB,IACA,IAED,uCAAwC,CACvC,IACA,IAED,sCAAuC,CACtC,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,mCAAoC,CACnC,IACA,IAED,kCAAmC,CAClC,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,kCAAmC,CAClC,IACA,IAED,iCAAkC,CACjC,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,iCAAkC,CACjC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,+BA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","file":"static/js/main.715840e5.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet-ios.entry.js\": [\n\t\t326,\n\t\t37\n\t],\n\t\"./ion-action-sheet-md.entry.js\": [\n\t\t327,\n\t\t38\n\t],\n\t\"./ion-alert-ios.entry.js\": [\n\t\t328,\n\t\t21\n\t],\n\t\"./ion-alert-md.entry.js\": [\n\t\t329,\n\t\t22\n\t],\n\t\"./ion-app_8-ios.entry.js\": [\n\t\t330,\n\t\t10\n\t],\n\t\"./ion-app_8-md.entry.js\": [\n\t\t331,\n\t\t11\n\t],\n\t\"./ion-avatar_3-ios.entry.js\": [\n\t\t332,\n\t\t39\n\t],\n\t\"./ion-avatar_3-md.entry.js\": [\n\t\t333,\n\t\t40\n\t],\n\t\"./ion-back-button-ios.entry.js\": [\n\t\t334,\n\t\t41\n\t],\n\t\"./ion-back-button-md.entry.js\": [\n\t\t335,\n\t\t42\n\t],\n\t\"./ion-backdrop-ios.entry.js\": [\n\t\t336,\n\t\t79\n\t],\n\t\"./ion-backdrop-md.entry.js\": [\n\t\t337,\n\t\t80\n\t],\n\t\"./ion-button_2-ios.entry.js\": [\n\t\t338,\n\t\t43\n\t],\n\t\"./ion-button_2-md.entry.js\": [\n\t\t339,\n\t\t44\n\t],\n\t\"./ion-card_5-ios.entry.js\": [\n\t\t340,\n\t\t45\n\t],\n\t\"./ion-card_5-md.entry.js\": [\n\t\t341,\n\t\t46\n\t],\n\t\"./ion-checkbox-ios.entry.js\": [\n\t\t342,\n\t\t47\n\t],\n\t\"./ion-checkbox-md.entry.js\": [\n\t\t343,\n\t\t48\n\t],\n\t\"./ion-chip-ios.entry.js\": [\n\t\t344,\n\t\t49\n\t],\n\t\"./ion-chip-md.entry.js\": [\n\t\t345,\n\t\t50\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t346,\n\t\t81\n\t],\n\t\"./ion-datetime_3-ios.entry.js\": [\n\t\t347,\n\t\t17\n\t],\n\t\"./ion-datetime_3-md.entry.js\": [\n\t\t348,\n\t\t18\n\t],\n\t\"./ion-fab_3-ios.entry.js\": [\n\t\t349,\n\t\t51\n\t],\n\t\"./ion-fab_3-md.entry.js\": [\n\t\t350,\n\t\t52\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t351,\n\t\t82\n\t],\n\t\"./ion-infinite-scroll_2-ios.entry.js\": [\n\t\t352,\n\t\t35\n\t],\n\t\"./ion-infinite-scroll_2-md.entry.js\": [\n\t\t353,\n\t\t36\n\t],\n\t\"./ion-input-ios.entry.js\": [\n\t\t354,\n\t\t53\n\t],\n\t\"./ion-input-md.entry.js\": [\n\t\t355,\n\t\t54\n\t],\n\t\"./ion-item-option_3-ios.entry.js\": [\n\t\t356,\n\t\t55\n\t],\n\t\"./ion-item-option_3-md.entry.js\": [\n\t\t357,\n\t\t56\n\t],\n\t\"./ion-item_8-ios.entry.js\": [\n\t\t358,\n\t\t57\n\t],\n\t\"./ion-item_8-md.entry.js\": [\n\t\t359,\n\t\t58\n\t],\n\t\"./ion-loading-ios.entry.js\": [\n\t\t360,\n\t\t23\n\t],\n\t\"./ion-loading-md.entry.js\": [\n\t\t361,\n\t\t24\n\t],\n\t\"./ion-menu_3-ios.entry.js\": [\n\t\t362,\n\t\t59\n\t],\n\t\"./ion-menu_3-md.entry.js\": [\n\t\t363,\n\t\t60\n\t],\n\t\"./ion-modal-ios.entry.js\": [\n\t\t364,\n\t\t12\n\t],\n\t\"./ion-modal-md.entry.js\": [\n\t\t365,\n\t\t13\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t366,\n\t\t16\n\t],\n\t\"./ion-popover-ios.entry.js\": [\n\t\t367,\n\t\t14\n\t],\n\t\"./ion-popover-md.entry.js\": [\n\t\t368,\n\t\t15\n\t],\n\t\"./ion-progress-bar-ios.entry.js\": [\n\t\t369,\n\t\t61\n\t],\n\t\"./ion-progress-bar-md.entry.js\": [\n\t\t370,\n\t\t62\n\t],\n\t\"./ion-radio_2-ios.entry.js\": [\n\t\t371,\n\t\t63\n\t],\n\t\"./ion-radio_2-md.entry.js\": [\n\t\t372,\n\t\t64\n\t],\n\t\"./ion-range-ios.entry.js\": [\n\t\t373,\n\t\t65\n\t],\n\t\"./ion-range-md.entry.js\": [\n\t\t374,\n\t\t66\n\t],\n\t\"./ion-refresher_2-ios.entry.js\": [\n\t\t375,\n\t\t25\n\t],\n\t\"./ion-refresher_2-md.entry.js\": [\n\t\t376,\n\t\t26\n\t],\n\t\"./ion-reorder_2-ios.entry.js\": [\n\t\t377,\n\t\t33\n\t],\n\t\"./ion-reorder_2-md.entry.js\": [\n\t\t378,\n\t\t34\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t379,\n\t\t83\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t380,\n\t\t67\n\t],\n\t\"./ion-searchbar-ios.entry.js\": [\n\t\t381,\n\t\t27\n\t],\n\t\"./ion-searchbar-md.entry.js\": [\n\t\t382,\n\t\t28\n\t],\n\t\"./ion-segment_2-ios.entry.js\": [\n\t\t383,\n\t\t68\n\t],\n\t\"./ion-segment_2-md.entry.js\": [\n\t\t384,\n\t\t69\n\t],\n\t\"./ion-select_3-ios.entry.js\": [\n\t\t385,\n\t\t70\n\t],\n\t\"./ion-select_3-md.entry.js\": [\n\t\t386,\n\t\t71\n\t],\n\t\"./ion-slide_2-ios.entry.js\": [\n\t\t387,\n\t\t84\n\t],\n\t\"./ion-slide_2-md.entry.js\": [\n\t\t388,\n\t\t85\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t389,\n\t\t31\n\t],\n\t\"./ion-split-pane-ios.entry.js\": [\n\t\t390,\n\t\t86\n\t],\n\t\"./ion-split-pane-md.entry.js\": [\n\t\t391,\n\t\t87\n\t],\n\t\"./ion-tab-bar_2-ios.entry.js\": [\n\t\t392,\n\t\t72\n\t],\n\t\"./ion-tab-bar_2-md.entry.js\": [\n\t\t393,\n\t\t73\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t394,\n\t\t32\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t395,\n\t\t74\n\t],\n\t\"./ion-textarea-ios.entry.js\": [\n\t\t396,\n\t\t75\n\t],\n\t\"./ion-textarea-md.entry.js\": [\n\t\t397,\n\t\t76\n\t],\n\t\"./ion-toast-ios.entry.js\": [\n\t\t398,\n\t\t29\n\t],\n\t\"./ion-toast-md.entry.js\": [\n\t\t399,\n\t\t30\n\t],\n\t\"./ion-toggle-ios.entry.js\": [\n\t\t400,\n\t\t19\n\t],\n\t\"./ion-toggle-md.entry.js\": [\n\t\t401,\n\t\t20\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t402,\n\t\t88\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 154;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t406,\n\t\t96\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 156;\nmodule.exports = webpackAsyncContext;","\nimport { Doc } from '../../modules/data/models'\nimport { GamifyRewards } from './utilsHabits';\n\nexport const TYPE_HABBIT = 'hab';\nexport const MOMENT_DATE_FORMAT = 'YYYYMMDD';\n\nexport enum habitStage {\n  'finished',\n  'current',\n  'future',\n  'resting'\n}\n\nexport enum habitIntervals {\n  day = 'day',\n  week = 'week',\n  month = 'month'\n}\n\nexport enum habitDifficulty {\n  trivial, easy, medium, hard, extreme\n}\n\nexport const printDifficulty = (hab:habitDifficulty):string => {\n  switch(hab) {\n    case habitDifficulty.trivial:\n      return 'trivial'; // , easy peasy lemon squeezy\n    case habitDifficulty.easy:\n      return 'easy'; //Piece of Cake , Smooth Sailin'\n    case habitDifficulty.medium:\n      return 'medium'; //Let's Go\n    case habitDifficulty.hard:\n      return 'hard'; //No Pain, No Gain\n    case habitDifficulty.extreme:\n      return 'extreme'; //Death Wish\n  }\n}\n\n\nexport interface HabitProgress {\n  date:string, \n  value: number, \n  reward?: GamifyRewards,\n}\n\nexport class Habit extends Doc {\n  name: string = 'New habit';\n  note?: string;\n  type:string = TYPE_HABBIT;\n  stage: habitStage = habitStage.current;\n  difficulty:habitDifficulty = habitDifficulty.medium;\n  //regularity\n  regularityInterval:habitIntervals = habitIntervals.day;\n  regularityValue: number = 1;\n  regularityEachDayGoal?: number = 1;\n\n  progress: HabitProgress[] = [];\n  //streaks\n  currentStreak: number = 0;\n  bestStreak: number = 0;\n\n  newRewards?: GamifyRewards;\n  \n  constructor(values: Object = {}) {\n    super()\n    Object.assign(this, values);\n  }\n}\n\n\n","\nimport { BehaviorSubject } from 'rxjs';\n\n\n\nexport class LoadingService {\n  private _loading: boolean = false;\n  \n\n  public loading$ = new BehaviorSubject({show: this._loading, msg: 'Loading...'});\n\n  showLoading(msg = \"Loading...\") {\n    this._loading = true;\n    this.loading$.next({show:true, msg});\n  }\n\n  hideLoading() {\n    this._loading = false;\n    this.loading$.next({show:false, msg:''});\n  }\n\n  public get loading(): boolean {\n    return this._loading;\n  }\n\n\n  startLoadingTimer() {\n\n  }\n\n}\nexport const loadingService = new LoadingService();\n\n\n","import React, { useState, useEffect } from 'react';\nimport { IonLoading } from '@ionic/react';\nimport { Subscription } from 'rxjs';\nimport { loadingService } from './loadingService';\n\nexport const Loading: React.FC = () => {\n  const [state, setState] = useState({show:false, msg: 'Loading...'});\n\n  useEffect(() => {\n    const subscriptions: Subscription[] = [\n      loadingService.loading$.subscribe(res =>{\n        setState({show: res.show, msg: res.msg});\n      })\n    ];\n    return () => { subscriptions.map(it => it.unsubscribe()) };\n  },[]);\n\n  \n  //onDidDismiss={() => setShowLoading(false)}\n  return (\n      <IonLoading\n        isOpen={state.show}\n        message={state.msg}\n      />\n  );\n};","import React from 'react';\nimport { IonHeader, IonToolbar, IonPage, IonTitle, IonContent, IonLabel } from '@ionic/react';\n\n\n\nconst UserPage: React.FC = () => {\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>User Page</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonLabel>User</IonLabel>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default UserPage;\n","export const PROJECT_SERVICE = '';\nexport const PROJECT_INDEX_SERVICE = 'ch';\nexport const SYSTEM_DOC = 'sys';\n\nexport const LASTCHAR = String.fromCharCode(65535);\nexport const DIV = '.';\nexport const DOUBLE_DIV = '..';\n\nexport class Doc {\n  public id: string|undefined = undefined;\n  name: string = '';\n  public deleted?: boolean;\n  public created?: number = Date.now();\n  public updated?: number = Date.now();\n  public creator?: string;\n  public type: string = 'doc';\n  public dirty?: number = 0;\n  public rev = 1;\n  constructor(values: Object = {}) {\n      Object.assign(this, values);\n  }\n\n}\n\nexport class ProjectItem extends Doc {\n  public id:string;\n  public name: string = '';\n  public note?: string;\n  public access = [];\n\n  constructor(values: Object = {}) {\n    super();\n    Object.assign(this, values);\n    this.id = values['id'];\n    if(!this.id)\n      this.id = ''; \n  }\n}\n\n\n\n\n\n\n\n\n\n","import  ulog from 'ulog';\nulog.level = ulog.TRACE;\n\nexport const FIRST_DAY_OF_WEEK = 'Monday';\n\n\n\nconst dev = {\n  \n  \n}\n\nconst prod = {\n  SYNC_SERVER: 'https://auth.mlflabs.com',\n  AUTH_API_URL: 'https://auth.mlflabs.com',\n}\nconst detail = process.env.REACT_APP_STAGE === 'production' ? prod: dev;\nexport const env = {...{\n  APP_ID: 'hv',\n  //myenvoy settings\n  ACCESS_META_KEY: 'access',\n  SERVER_ACCESS_META_KEY: 'ch',\n  MOMENT_DATE_FORMAT: 'YYYYMMDD',\n\n  //Auth\n  TOKEN_EXPIRATION: 300, // how many days\n  SYNC_SERVER: 'https://auth.mlflabs.com',\n  AUTH_API_URL: 'https://auth.mlflabs.com',\n  //SYNC_SERVER: 'http://localhost:3002',\n  //AUTH_API_URL: 'http://localhost:3002',\n}, ...detail}","import moment from 'moment';\nimport ulog from 'ulog'\n\nconst log = ulog('utils');\n\nexport const capitalize = (s: string) => {\n  if (typeof s !== 'string') return ''\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nexport const printDateRelative = (timestamp: number) => {\n  try {\n    const m = moment(timestamp);\n\n    if(moment().diff(m, 'd') < 3){\n      return m.fromNow();\n    }\n    else {\n      return m.format('DD-MM-YYYY');\n    }\n  }\n  catch(e){\n    log.error(e);\n  }\n}\n\nexport function getNested(obj: any, ...args: string[]) {\n  return args.reduce((obj, level) => obj && obj[level], obj)\n}\n\nexport const waitMS = (ms: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n};\n\nexport function getAction(todo:string, data = {}){\n  return {type:todo, data:data};\n}\n\nexport function printCleanNote(text: string) {\n  const t = text.replace(/(\\r\\n|\\n|\\r)/gm,\" \");\n  if(t.length > 40)\n    return t.substring(0,37)+'...';\n  return t;\n}\n\nexport function saveIntoArray(item: Object, ary: Array<any> = [], idKey: string = 'id'): Array<any> {\n  let i = getIndexById(item[idKey], ary, idKey);\n  if (i === -1) {\n    i = ary.length;\n  }\n  return [...ary.slice(0, i),\n          Object.assign({}, item),\n          ...ary.slice(i + 1)];\n}\n\nexport function saveIntoDocList(item: Object, ary: Array<any> = [], idKey: string = 'id'): Array<any> {\n  if(item['deleted']){\n    return ary.filter(d => d[idKey] !== item[idKey])\n  }\n  let i = getIndexById(item[idKey], ary, idKey);\n  if (i === -1) {\n    i = ary.length;\n  }\n  return [...ary.slice(0, i),\n          Object.assign({}, item),\n          ...ary.slice(i + 1)];\n}\n\nexport function getIndexById(id: string, ary: any, idKey: string = 'id'): number {\n  for (let i = 0; i < ary.length; i++) {\n    if (id === ary[i][idKey]) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nexport function findById(id:any, ary: any[], idKey: string = \"id\"): any {\nfor (let i = 0; i < ary.length; i++) {\n    if (id === ary[i][idKey]) {\n      return ary[i];\n    }\n  }\n  return null;\n}\n\nexport function removeFromArrayById(id: any, ary:Array<any>, idKey = 'id') {\n  return ary.filter(o => o[idKey] !== id);\n}\n\nexport function clamp(val:number, max:number, min:number = 0): number {\n  if(val > max) return max;\n  if(val < min) return min;\n  return val;\n}","import { Habit, MOMENT_DATE_FORMAT, habitIntervals } from './models';\nimport moment, { Moment } from 'moment';\nimport { FIRST_DAY_OF_WEEK } from '../../env';\nimport { clamp } from '../../utils';\nimport ulog from 'ulog';\n\nconst log = ulog('utils');\n\nexport interface GamifyRewards {\n  gold:number,\n  experience: number,\n  item:any\n}\n\n\n\nexport const getInitGamifyRewards =  (base?:GamifyRewards):GamifyRewards =>  {\n  return {...{ gold: 0, experience: 0, item:undefined }, ...base};\n}\n\n\nexport const calculateCurrentStreak = (hab:Habit, bufferSize = 3): Habit => {\n  if(hab.regularityInterval === habitIntervals.day){\n    const h = calculateDailyHabitStreak(hab, bufferSize)\n    return h;\n  }\n\n  if(hab.regularityInterval === habitIntervals.week){\n    return calculateHabitStreakByWeek(hab, bufferSize);\n  }\n\n  if(hab.regularityInterval === habitIntervals.month){\n    return calculateHabitStreakByMonth(hab, bufferSize);\n  }\n\n  return hab;\n}\n\n\nconst getStreakByWeek = (hab:Habit, weeksBack:number, firstDayOfWeek: string): number => {\n  const firstDay = moment().day(FIRST_DAY_OF_WEEK);\n  let currentValue = 0;\n  let streak = 0;\n  if(!firstDay.isSame(moment(), 'day')){\n    firstDay.add(1, 'week');\n  }\n  //now we have the current first day of week, subtrack weeksBack\n  firstDay.subtract(weeksBack, 'week');\n\n  for(let i = 0; i < 7; i++) {\n    currentValue = getProgressValueByDate(getProgressDate(firstDay,i), hab);\n    if(currentValue > 0) \n      streak++;\n  }\n  return streak;\n}\n\nconst getStreakByMonth = (hab:Habit, monthsBack:number): number => {\n  const firstDay = moment().date(1);\n  \n  if(!firstDay.isSame(moment(), 'day')){\n    firstDay.add(1, 'month');\n  }\n  let currentValue = 0;\n  let streak = 0;\n  firstDay.subtract(monthsBack, 'month');\n\n  const currentDay = moment(firstDay);\n  while(currentDay.isSame(firstDay, 'month')){\n    currentValue = getProgressValueByDate(currentDay.format(MOMENT_DATE_FORMAT), hab);\n    if(currentValue > 0) \n      streak++;\n\n    currentDay.add(1, 'day');\n  }\n  return streak;\n}\n\nconst withinWeekBuffer = (buffer: number, offset:number):boolean => {\n  if(offset === 0) return true;\n\n\n  const firstDay = moment().day(FIRST_DAY_OF_WEEK);\n  if(!firstDay.isSame(moment(), 'day')){\n    firstDay.add(1, 'week');\n  }\n\n  //now remove offset\n  firstDay.subtract(offset, 'week');\n\n  if(firstDay.isAfter(moment().subtract(buffer,'day'))) {\n    return true;\n  }\n  \n  return false;\n}\n\n\nconst calculateHabitStreakByMonth = (hab:Habit, bufferSize:number): Habit => {\n  let streak = 0;\n  let currentBiggestStreak = 0;\n  let cont = true;\n  let offset = 0;\n  let currentValue = 0;\n  while(cont) {\n    currentValue = getStreakByMonth(hab, offset);\n    streak += clamp(currentValue, hab.regularityValue);\n    if(streak > currentBiggestStreak) currentBiggestStreak = streak;\n\n    if(currentValue < hab.regularityValue && !withinWeekBuffer(bufferSize, offset)){\n      cont = false;\n    }\n    //cont\n    offset++;\n  } \n  let bestStreak = hab.bestStreak;\n  if(!hab.bestStreak)hab.bestStreak = 0;\n  if(currentBiggestStreak > hab.bestStreak) bestStreak = currentBiggestStreak;\n  return {...hab, currentStreak: streak, bestStreak}\n}\n\n\nconst calculateHabitStreakByWeek = (hab:Habit, bufferSize:number): Habit => {\n  let streak = 0;\n  let currentBiggestStreak = 0;\n  let cont = true;\n  let offset = 0;\n  let currentValue = 0;\n  while(cont) {\n\n    currentValue = getStreakByWeek(hab, offset, FIRST_DAY_OF_WEEK);\n    \n    streak += clamp(currentValue, hab.regularityValue);\n    if(streak > currentBiggestStreak) currentBiggestStreak = streak;\n\n\n    if(currentValue >= hab.regularityValue){\n      \n    }\n    else {\n\n      //do we still have buffer for this time period\n\n      //streak = 0;\n      //failed on this day,see if we are in the buffer\n      \n      if(withinWeekBuffer(bufferSize, offset)){\n        //still have a chance\n        \n      }\n      else {\n        // did we success this time period\n\n        //out of buffer, plus failed\n        cont = false;\n      }\n    }\n      \n    //cont\n    offset++;\n  } \n  let bestStreak = hab.bestStreak;\n  if(!hab.bestStreak)hab.bestStreak = 0;\n  if(currentBiggestStreak > hab.bestStreak) bestStreak = currentBiggestStreak;\n  return {...hab, currentStreak: streak, bestStreak}\n}\n\n\n\nconst calculateDailyHabitStreak = (hab:Habit, bufferSize:number): Habit => {\n  let streak = 0;\n  let currentBiggestStreak = 0;\n  let cont = true;\n  let offset = 0;\n  let currentValue = 0;\n  while(cont) {\n    currentValue = getProgressValueByDate(getProgressDateBySubtract(offset), hab);\n    if(currentValue > 0){\n      streak++\n      if(streak > currentBiggestStreak) currentBiggestStreak = streak;\n    }\n    else {\n      cont = false;\n    }\n      \n    //cont\n    offset++;\n  } \n  let bestStreak = hab.bestStreak;\n  if(!hab.bestStreak)hab.bestStreak = 0;\n  if(currentBiggestStreak > hab.bestStreak) bestStreak = currentBiggestStreak;\n  return {...hab, currentStreak: streak, bestStreak}\n}\n\nconst getProgressValueByDate = (date: string, hab:Habit):number => {\n  if(!hab.progress) hab.progress = [];\n  for(let i = 0; i < hab.progress.length; i++){\n    if(hab.progress[i].date === date)\n    {\n      return hab.progress[i].value;\n    }\n  }\n  return 0;\n}\n\nconst getProgressDateBySubtract = (subtract:number):string => {\n  return moment().subtract(subtract, 'day').format(MOMENT_DATE_FORMAT);\n}\n\nconst getProgressDate = (date: Moment, subtract: number): string => {\n  return moment(date).subtract(subtract, 'd').format(MOMENT_DATE_FORMAT);\n}","import { PROJECT_SERVICE, DIV, PROJECT_INDEX_SERVICE, ProjectItem, Doc } from './models';\nimport shortid from 'shortid';\nimport { env } from '../../env';\n\nexport const TYPE_SETTINGS = 'set';\n\nexport function generateUserChannelId(userid): string {\n  return 'u' + env.APP_ID + userid;\n}\n\nexport function getDefaultProject(userid): ProjectItem {\n  const uuid = 'u' + env.APP_ID + userid;\n  return {\n    id: generateProjectUUID(uuid, ''),\n    rev: 1,\n    name: 'default',\n    access:[],\n    type: TYPE_SETTINGS,\n    updated: 0, //Date.now(),\n    [env.ACCESS_META_KEY]: genrateMetaData(userid), \n  }\n}\n\nexport function generateUUID():string {\n  let id;\n  let ok = false;\n  while (!ok) {\n    id = shortid.generate();\n    if(id.substring(0,1)!== '_' && id.substring(0,1)!== '-')\n      ok = true;\n  }\n\n  return id;\n}\n\nexport function isThisUserProject(id:string|undefined, userid): boolean {\n  return (getChannelFromProjectId(id) === generateUserChannelId(userid));\n}\n\nexport function getChannelNameFromId(id:string|undefined) {\n  if(id === undefined) throw new Error('Id cannot be undefined');\n  return id.split(DIV)[0];\n}\n\nexport function getProjectChildId(id:string|undefined): string {\n  if(id === undefined) throw new Error('Id can not be undefined');\n  let length = PROJECT_INDEX_SERVICE.length + DIV.length;\n  return id.substring(0, id.length-length);\n}\n\nexport function getChannelFromProjectId(id: string|undefined):string {\n  return getProjectChildId(id);\n}\n\nexport function generateProjectUUID(id = generateUUID(), app = env.APP_ID):string {\n  return app + id +  DIV + PROJECT_INDEX_SERVICE;\n}\n\nexport function generateProjectChildId(projectId: string, type: string, id = generateUUID()):string {\n  return PROJECT_SERVICE+ DIV + projectId.split(DIV)[1] + DIV + type +\n          DIV + id;\n}\n\nexport function generateCollectionId(projectid: string, collection, id = generateUUID()): string {\n  //eliminate dots from id, not allowed\n  id = id.replace('.','');\n  \n  if(projectid === undefined) throw new Error(\"Project can't be underfined\");\n  const length = PROJECT_INDEX_SERVICE.length;\n  return projectid.substring(0, projectid.length-length)+collection+ DIV +id; \n}\n\nexport const waitMS = (ms) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n};\n\n\nexport function saveIntoArray(item: Object, ary: Array<any> = [], idKey: string = 'id'): Array<any> {\n  let i = getIndexById(item[idKey], ary, idKey);\n  if (i === -1) {\n    i = ary.length;\n  }\n  return [...ary.slice(0, i),\n  Object.assign({}, item),\n  ...ary.slice(i + 1)];\n}\n\nexport function genrateMetaData(userid:string):string[]{\n    return [ 'u'+ env.APP_ID + userid,]; \n}\n\n\n\nexport function getIndexById(id: string, ary: any, idKey: string = 'id'): number {\n  for (let i = 0; i < ary.length; i++) {\n    if (id === ary[i][idKey]) {\n      return i;\n    }\n  }\n  // if we don't have a match return null\n  return -1;\n}\n\nexport const extractTypeCollectionFromDocId = (id) => {\n  return id.split(DIV)[2];\n}\n\nexport const extractChannelNameFromDocId = (id) => {\n  return id.split(DIV)[0];\n}\n\n\n//rights functions\n/*\n    Rights, each digit represents different right\n    0.  0 - Not admin 1- Admin, can change everything\n    1.  (Project item) 0 - can't see, 1 - can see, 2 - can edit\n    2.  (Project children) 0 - can't see, 1 - can see own, 2 - can see all items\n    3.  (Project children edit) 0 -can't edit, 1 can edit/make own, 2 can edit all \n*/\n\nexport const getDocumentRights = (id: string|undefined, user):string|undefined => {\n  const channel = getChannelNameFromId(id);\n  return user[env.ACCESS_META_KEY][channel];\n}\n\nexport const canEditProject = (id, user): boolean => {\n  const rights = getDocumentRights(id, user);\n  if(!rights) return false;\n  return canEditProjectByRights(rights);\n} \n\nexport const canEditProjectByRights = (rights: string): boolean => {\n  if(rights.substring(0,1) === '1') return true;\n  if(rights.substring(1,2) === '2') return true;\n  return false;\n}\n\n\nexport const canEditDoc= (doc:Doc, user): boolean => {\n  const rights = getDocumentRights(doc.id, user);\n  if(!rights) return false;\n  return canEditItemByRights(rights, doc.creator === user.id);\n} \n\nexport const canEditOwnedItemByRights = (rights: string): boolean => {\n  if(rights.substring(0,1) === '1') return true;\n  if(rights.substring(3,4) === '1') return true;\n  if(rights.substring(3,4) === '2') return true;\n  return false;\n}\n\nexport const canEditOthersItemByRights = (rights: string): boolean => {\n  if(rights.substring(0,1) === '1') return true;\n  if(rights.substring(3,4) === '2') return true;\n  return false;\n}\n\nexport const canEditItemByRights = (rights: string, myItem:boolean): boolean => {\n  return (myItem)? canEditOwnedItemByRights(rights) : canEditOthersItemByRights(rights);\n}","import { Doc, ProjectItem } from \"../data/models\";\n\nexport const TYPE_PARTY = 'party';\n\nexport enum ChallengeState {\n  finished = 'finished',\n  current = 'current',\n  future = 'future',\n  waiting = 'waiting',\n  resting = 'resting',\n}\n\nexport enum ChallengeDifficulty {\n  trivial, easy, medium, hard, extreme\n}\n\nexport enum ChallengeIntervals {\n  day = 'day',\n  week = 'week',\n  month = 'month'\n}\n\nexport interface PartyMember {\n  id: string,\n  username: string,\n  rights: string,\n  score: {exp: number},\n  scoreHistory: {[key:string]: {exp:number}};\n}\n\nexport interface ChallengeRewards {\n  score: number,\n  item?: any,\n}\n\nexport interface ChallengeAction {\n  date: string,\n  value: number, \n  reward: ChallengeRewards,\n}\nexport interface ChallengeMember {\n  id: string,\n  username: string,\n  score: {exp: number},\n  scoreHistory: {[key:string]: {exp:number}};\n  joinDate: number,\n  actions: { [key:string]: ChallengeAction },\n  lastCalculatedDate?: string,\n  currentStreak?: number,\n  biggestStreak?: number,\n\n}\n\n\nexport class PartyProject extends ProjectItem {\n  type: string = TYPE_PARTY\n  secondaryType: string = 'project'\n  creator: string = '';\n  dirty: number = 0;\n  members: PartyMember[]  = []\n\n  moneyTypeSingle: string = 'Ruby';\n  moneyTypeMultiple: string =  'Rubies';\n  moneyColor: string = '#ff0000'\n\n\n  constructor(values: Object = {}) {\n    super()\n    Object.assign(this, values);\n  }\n}\n\nexport class Challenge extends Doc {\n  name: string = 'New Challenge';\n  note?: string;\n  type:string = TYPE_PARTY;\n  access: string = ''\n  secondaryType: string = 'challenge'\n  state: ChallengeState = ChallengeState.waiting;\n  difficulty:ChallengeDifficulty = ChallengeDifficulty.medium;\n  //regularity\n  regularityInterval:ChallengeIntervals = ChallengeIntervals.day;\n  regularityIntervalGoal: number = 1;\n  regularityEachDayGoal: number = 1;\n\n  //members\n  members: ChallengeMember[]  = []\n\n  constructor(values: Object = {}) {\n    super()\n    Object.assign(this, values);\n  }\n}\n","import { Doc } from '../../modules/data/models'\nimport { GamifyRewards, getInitGamifyRewards } from '../habits/utilsHabits';\nimport { getProjectChildId } from '../../modules/data/utilsData';\n\nexport const TYPE_TODO = 'todo';\nexport const TYPE_TODO_LIST = 'todolist';\nexport const TYPE_TODO_FOLDER = 'todoFolder';\nexport const TYPE_TODO_TAG = 'todoTag';\n\nexport const FOLDER_BASE_POSITION = 'base';\n\nexport const getDefaultTodoList = (name:string = 'tasks', projectid:string):TodoList => {\n  const project = getProjectChildId(projectid);\n  return new TodoList({\n    id: undefined,\n    folder: undefined,\n    type: TYPE_TODO_LIST,\n    icon: 'check',\n    secondaryType: TYPE_TODO_LIST,\n    name,\n    fullname: project + name,\n  })\n}\n\nexport class TodoList extends Doc {\n  folder: string = FOLDER_BASE_POSITION;\n  type: string = TYPE_TODO_LIST;\n  project?: string;\n  icon?:string;\n  color?:string;\n  _new?: boolean;\n  fullname:string;\n  secondaryType:'todolist'|'todoFolder'  = TYPE_TODO_LIST\n\n  constructor(values: Object = {}) {\n    super();\n    Object.assign(this, values);\n    this.fullname = values['fullname'];\n  }\n}\n\nexport const getDefaultTodoTag = (name:string = 'tasks', projectid:string, icon:string ='check'):TodoTag => {\n  const project = getProjectChildId(projectid);\n  return new TodoTag({\n    id: undefined,\n    type: TYPE_TODO_TAG,\n    icon,\n    name,\n    fullname: project + name,\n  })\n}\n\nexport class TodoTag extends Doc {\n  type: string = TYPE_TODO_TAG;\n  icon?:string;\n  animatedIcon?:any;\n  color?:string;\n  _new?: boolean;\n  fullname!: string;\n  constructor(values: Object = {}) {\n    super();\n    Object.assign(this, values);\n    //this.fullname = values['fullname'];\n  }\n}\n\nexport class Todo extends Doc {\n  note?: string;\n  type: string = TYPE_TODO;\n\n  done: boolean;\n  date: number|null;\n  list: string = 'default';\n  tags: string[];\n\n\n  _new?: boolean; // for saving new docs, temp solution\n    //sub tasks\n  parent: string | null;\n  subTodos: string[];\n  showSubTodos: boolean;\n  showDone: boolean;\n\n  newRewards: GamifyRewards;\n  doneRewards: GamifyRewards;\n  \n  constructor(values: Object = {}) {\n    super();\n    this.done = false;\n    this.date = null;\n    this.tags = [];\n    this.parent = null;\n    this.subTodos = [];\n\n    this.showSubTodos = false;\n    this.showDone = false;\n\n    this.newRewards = getInitGamifyRewards();\n    this.doneRewards = getInitGamifyRewards();\n    \n    Object.assign(this, values);\n\n  }\n}","import React, { useState } from 'react';\nimport { Todo, TYPE_TODO, TodoList, getDefaultTodoList, TodoTag } from './models';\nimport {IonInput} from '@ionic/react';\nimport { generateCollectionId } from '../../modules/data/utilsData';\nimport ulog from 'ulog'\n\n\nconst log = ulog('todo');\n\n\nconst TodoNewComp = ({list, tag,  saveFunc, projectId}:\n  {list:TodoList|undefined, tag:TodoTag|undefined, projectId: string, saveFunc: Function}) => {\n\n  const [state, setState] = useState({title:''});\n  \n  //TODOS: testing....\n  const setNewTitle = (e) => {\n    setState({title: e.detail.value});\n  }\n\n  const onKeyPress = (e) => {\n    if(e.key === 'Enter'){\n      save();\n      setState({title: ''});\n    }\n  }\n\n\n  const save = async () => {\n      let fullname;\n      if(!list){\n        fullname = getDefaultTodoList('tasks', projectId).fullname;\n      }\n      else {\n        fullname = list.fullname;\n      }\n      \n\n      log.warn('SAVING TODO::: ', projectId, list);\n      const id = generateCollectionId(projectId, TYPE_TODO)\n      const newDoc = new Todo({\n        id, \n        name: state.title, \n        list: fullname,\n        _new: true});\n\n      if(tag){\n        log.warn('Saving a tag made manually ', tag);\n        newDoc.tags.push(tag.fullname);\n      }\n       \n      log.warn('NEW TODO::::::::::::::: ', newDoc)\n      await saveFunc(newDoc);\n  };\n\n\n  return (\n    <IonInput\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onKeyPress={onKeyPress}\n            onIonChange={setNewTitle}\n            value={state.title}\n    />\n  )\n\n\n}\n\nexport default TodoNewComp;","import React, { useState, useEffect } from 'react';\nimport { Todo, TodoTag } from './models';\nimport { DataFunctions } from './hooks/todos.hook';\nimport _ from 'lodash';\nimport ulog from 'ulog';\nimport { IonLabel, IonTextarea, IonButton, IonIcon, IonAlert } from '@ionic/react';\nimport './todo.edit.component.css';\nimport { trash, close } from '../../../node_modules/ionicons/icons';\n\n\nconst log = ulog('todo');\n\nconst getDefaultState = (todo:Todo, tagDocs:TodoTag[]) =>  {\n  return {\n  todo: todo,\n  tagDocs,\n  showDeleteWarrning: false,\n  text: mergeText(todo.name, todo.note)\n}}\n\nconst mergeText = (name: string|undefined, note: string|undefined): string => {\n  if(!name) name= '';\n  if(!note) \n    note = '';\n  else\n    note = '\\n'+note;\n  return name + note;\n}\n\n\n\nconst TodoEditInlineComponent = ({todo, tagDocs, dataFunctions}: \n        {todo:Todo,  tagDocs:TodoTag[], dataFunctions: DataFunctions}) => {\n  log.warn(\"Edit Todo Render::: \", todo, tagDocs, tagDocs);\n\n  const [state, setState] = useState(getDefaultState(todo, tagDocs));\n\n  useEffect(() => {\n    setState(getDefaultState(todo, tagDocs));\n  }, [todo, tagDocs])\n\n  const handleTitleChange = (e) => {\n    const text = e.detail.value;\n    var match = /\\r|\\n/.exec(text);\n    if(match){\n      const name = text.substring(0, match.index);\n      const note = text.substring(match.index+1);\n      const newDoc = {...state.todo, ...{name: name, note: note}}\n      const newState = {...state, ...{todo: newDoc, text: text}};\n      setState(newState);\n    }\n    else {\n      const newDoc = {...state.todo, ...{name: text, note: ''}}\n      const newState = {...state, ...{todo: newDoc, text: text}};\n      setState(newState);\n    }\n  }\n\n  const handleBlur = () => {\n    dataFunctions.save(state.todo);\n  }\n\n  const showRemoveWarrning = () => {\n    setState({...state, ...{showDeleteWarrning: true}});\n  }\n\n\n  const hideRemoveWarrning = () => {\n    setState({...state, ...{showDeleteWarrning: false}});\n  }\n\n  const remove = () => {\n    hideRemoveWarrning();\n    if(state.todo.id)\n      dataFunctions.remove(state.todo.id);\n  }\n\n  const printTag = (tag: TodoTag) => {\n    let color;\n    if(_.includes(state.todo.tags,tag.fullname)){\n      color = 'success';\n    }\n    else {\n      color = 'light';\n    }\n    return  <IonButton \n                fill=\"clear\"\n                size=\"default\" \n                color={color} \n                key={tag.name + 'editicon'}  \n                onClick={() => handleTagChange(tag)}>\n              <IonIcon  src={\"/assets/icons/\"+tag.icon} /></IonButton>\n  }\n\n\n  const handleTagChange = (tag: TodoTag) => {\n    log.error(tag, tagDocs);\n    if(!state.todo.tags) state.todo.tags = [];\n    const res = state.todo.tags.find(t=>t===tag.fullname);\n    let newtags;\n    if(res === undefined){\n      newtags = _.concat(state.todo.tags, tag.fullname);\n    }\n    else {\n      newtags = _.filter(state.todo.tags, t=>t!==tag.fullname);\n    }\n    dataFunctions.save(Object.assign(state.todo, {tags: newtags}));\n  }\n\n\n  return (\n\n    <div className=\"\">\n        \n        \n        <div key=\"todoEditInlineIconScrollParent\" className=\"todoEditInlineIconScrollParent\">\n          { tagDocs.map(tag => printTag(tag)) }\n        </div>\n        <IonTextarea \n            placeholder=\"Enter todo title and note here\"\n            name=\"note\"\n            class=\"todoEditInlineTextArea\"\n            autoGrow={true}\n            onIonBlur={handleBlur}\n            onIonChange={handleTitleChange}\n            value={state.text}></IonTextarea>\n        \n        \n        <div>\n          <div className=\"todoButtonsLeftAlign\">\n              <IonButton size=\"small\"  fill=\"clear\" color=\"secondary\" onClick={()=>{dataFunctions.select(null)}}>\n                  <IonIcon  icon={close} /><IonLabel>Close</IonLabel>\n              </IonButton>\n          </div>\n          <div className=\"todoButtonsRightAlign\">\n              <IonButton size=\"small\"  fill=\"clear\" color=\"danger\" onClick={showRemoveWarrning}>\n                  <IonIcon  icon={trash} /><IonLabel>Delete</IonLabel>\n              </IonButton>\n          </div>\n        </div>\n        <div className=\"todoInlineEditPadding\"> </div>   \n\n        <IonAlert\n            isOpen={state.showDeleteWarrning}\n            onDidDismiss={() => hideRemoveWarrning}\n            header={'Warrning!!!'}\n            message={'Are you sure you want to <strong>delete</strong> this task and its sub-tasks?'}\n            buttons={[\n              {\n                text: 'Cancel',\n                role: 'cancel',\n                cssClass: 'secondary',\n                \n              },\n              {\n                text: 'Yes Im Sure',\n                handler: () => remove()\n              }\n            ]}\n          />\n    </div>\n\n  );\n\n}\n\nexport default TodoEditInlineComponent;","import Dexie from 'dexie';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { DataChangeEvent } from '../dataService';\nimport { Subscription } from 'rxjs';\nimport { env } from '../../../env';\nimport ulog from 'ulog';\n\nconst log = ulog('dexie');\n\nexport interface DatabaseScheme {\n  name: string,\n  version: number,\n  tables: TableScheme[],\n}\n\nexport interface TableScheme {\n  name: string,\n  columns: string,\n  sync: boolean,\n}\n\n\nexport default class DexieAdapter {\n\n  private db;\n  private _ready = false;\n  public ready$ = new BehaviorSubject(this._ready);\n  private _subscriptions:Subscription[] = [];\n\n  public changes$ = new Subject<DataChangeEvent>();\n\n  constructor(scheme: DatabaseScheme) {\n    this.db = new Dexie(env.APP_ID +  scheme.name+ '_dexie');\n    const stores = {};\n    scheme.tables.forEach(t => {\n      stores[t.name] = t.columns;\n    });\n    this.db.version(scheme.version).stores(stores);\n    this._init();\n  }\n\n  private async _init() {\n    try {\n      await this.db.open();\n      this._ready = true;\n      this.ready$.next(true);\n    }\n    catch(e) {\n      log.error(e);\n    }\n  }\n\n  public async destroy() {\n    this._subscriptions.forEach(sub => {\n      if(sub)sub.unsubscribe();\n    })\n  }\n\n  public async getDoc(id: string, collection: string): Promise<any> {\n    //const res = await this.db[collection].where('id').equals(id).first();\n    const res = await this.db[collection].get({id});\n    if(res) return res;\n    return null;\n  }\n\n  public async getBulk(ids: string[], collection: string): Promise<any> {\n    const res = await this.db[collection].bulkGet(ids);\n    return res.filter(doc => doc !== undefined)\n  }\n\n  public async queryByProperty(field: string, operator: string, \n      value: any, collection: string): Promise<any> {\n    switch(operator) {\n      case 'equals':\n        const docs = await this.db[collection].where(field).equals(value).toArray();\n        return docs;\n      case 'startsWith':\n        return await this.db[collection].where(field).startsWith(value).toArray();\n      case 'notEqual':\n        return await this.db[collection].where(field).notEqual(value).toArray();\n      default:\n        throw new Error('Missing proper operator, given: '+ operator);\n    }\n  }\n\n  public async getProjectItems(projectid: string, collection: string) {\n    const res = await this.db[collection].where('id').startsWith(projectid).toArray();\n    return res;\n  }\n\n  public async save(doc: any, collection: string, setDirty = true){\n    if(setDirty)\n      doc.dirty = 1;\n    const res = await this.db[collection].put(doc);\n    if(res) {\n      this.changes$.next({doc});\n      return true\n    }\n    return false;\n  }\n\n  public async saveFromSync(docs: any[], collection: string){\n    const res = await this.db[collection].bulkPut(docs);\n    if(res) {\n      docs.forEach(doc => {\n        this.changes$.next({doc});\n      })\n      return true\n    }\n    return false;\n  }\n\n\n}","import { Subject } from 'rxjs';\nimport { ajaxResponse } from '../ajax/ajax';\nimport { toast } from 'react-toastify';\n\nexport interface ToastMessage {\n  message: string,\n  duration: number,\n  key?: number,\n}\n\nexport enum ToastType {\n  default = \"default\", \n  info = \"info\", \n  success = \"success\", \n  warning = \"warning\", \n  error = \"error\"\n}\n\n\nexport class ToastService {\n\n  public messages$ = new Subject<ToastMessage>();\n\n  showMessage(message: string, type:ToastType = ToastType.default, milliseconds: number = 3000) {\n    toast(message, {\n      type: type,\n      autoClose: milliseconds,\n    })\n  }\n\n  printSimpleError (msg:string, duration = 2000) {\n    toast( msg, {type: ToastType.error, autoClose: duration})\n  }\n\n  //TODO: for now only prints the first error\n  printServerErrors (res:ajaxResponse) {\n    const errors = res.errors || [];\n    if(errors.length > 0){\n      errors.forEach(err => this.showMessage(err.msg, ToastType.error))\n    }\n  }\n\n\n\n}\nexport const toastService = new ToastService();\n\n\n","\n\nclass LocalStorageService {\n  \n  async getItem(id: string){\n    return localStorage.getItem(id);\n  }\n\n  async getString(id: string):Promise<string>{\n    let val:string;\n    val = localStorage.getItem(id) || '';\n    return val;\n  }\n\n  async getObject(id: string):Promise<object|null> {\n    const val = localStorage.getItem(id);\n    if(!val)return null;\n    return JSON.parse(val);\n\n  }\n\n  async setObject(id: string, val: object):Promise<boolean> {\n    try {\n      const str = JSON.stringify(val);\n      await localStorage.setItem(id, str);\n      return true;\n    }\n    catch(e){\n      console.log(e);\n      return false;\n    }\n    \n\n  }\n\n\n\n  async setString(id: string, val: string) {\n    localStorage.setItem(id, val);\n  }\n  \n}\n\nconst localStorageService = new LocalStorageService();\n\nexport default localStorageService;","import axios from 'axios';\nimport { getNested } from '../../utils';\nimport { loadingService } from '../loading/loadingService';\nimport ulog from 'ulog';\n\nconst log = ulog('ajax');\n\n\nexport interface ajaxResponse {\n  success: boolean,\n  data: any,\n  status?: number,\n  errors?: errorMessage[]\n}\n\n\nexport const getAjaxMessage = (success:boolean, data:any, \n    status:number = 0, errors: errorMessage[] = []): ajaxResponse => {\n  return {success, data, status, errors}\n}\n\nexport const getAjaxErrorMessage = (errorMessage: string, \n  location='system', status:number = 404 ) => {\n    return getAjaxMessage(false, null, status, \n      [{location, msg:errorMessage}])\n}\n\nexport interface errorMessage {\n  location: string,\n  msg: string\n}\n\nexport interface postRequest {\n  url: string,\n  type: string,\n  form: object,\n  options?: object,\n}\n\nexport interface getRequest {\n  url: string,\n  type: string,\n  form: object,\n  options?: object,\n}\n\nexport const getPostRequest = (url:string, form:object, options:object = {}, ) => {\n    return {url, type:'post', form, options};\n}\n\n\n\nexport const getErrorMessage = (msg: string, location:string = \"Server\"):errorMessage => {\n  return {msg, location};\n}\n\nexport const post = async (req: postRequest, showLoading = true, loadingMessage=\"Loading...\"):Promise<ajaxResponse> => {\n  try {\n    if(showLoading)\n      loadingService.showLoading(loadingMessage);\n    const res = await axios.post(req.url, req.form, req.options);\n\n    loadingService.hideLoading();\n    log.info(res);\n    return getAjaxMessage(true, res.data, 200);\n  }\n  catch(err) {\n    loadingService.hideLoading();\n    const response = getNested(err, 'response');\n    if(!response || !response.status) {\n      return getAjaxMessage(false, null, 503, [getErrorMessage(\"Service is temporarly unavailable\")]);\n    }\n    else if(response.status === 422){\n      return getAjaxMessage(false, null, response.data.status, response.data.errors);\n    }\n    else if(response.status === 404) {\n      return getAjaxMessage(false, null, 404, [getErrorMessage(\"Could not connect to server\")]);\n    }\n    else {\n      return getAjaxMessage(false, null, response.status, [getErrorMessage(\"Could not connect to server\")]);\n    }\n  }\n}\n","\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport * as moment from 'moment';\nimport { isEqual } from 'lodash';\nimport localStorageService from '../localStorage/localStorageService';\nimport {env} from '../../env';\nimport  { getPostRequest, post, ajaxResponse } from '../ajax/ajax';\nimport { toastService } from '../toast/toastService';\nimport ulog from 'ulog';\n\nconst log =  ulog('auth');\n\nexport enum AuthStatus {\n  Loading, \n  Guest, //not loged in\n  User // loged in\n}\n\nexport const GUEST = 'Guest';\nexport const AUTH_USER_KEY = 'auth-user-key';\nexport interface AuthEvent {\n  success: boolean;\n  code: number;\n  data: any;\n}\n\nexport interface User {\n  id: string,\n  username: string;\n  email: string|null;\n  token: string|null;\n  token_expiery: number|null;\n  access: any[];\n}\n\n\n\nexport const getUser = (values: any):User => {\n  if(values == null)\n    return {\n      id: 'guest',\n      username: GUEST,\n      email: null,\n      token: null,\n      token_expiery: null,\n      access: []\n    }\n\n  return {\n    id: values.id || 'guest',\n    username: values.username || GUEST,\n    email: values.email||null,\n    token: values.token||null,\n    token_expiery: values.token_expiery||values.expires||null,\n    access: values.access || []\n  }\n}\n\nexport const isGuest = (user:User) => {\n  return user.username === GUEST;\n}\n\nexport function getGuestUser(username:string = 'Guest'):User {\n  return getUser({ username });\n}\n\n\nexport class AuthService {\n  private _user:User = getGuestUser('null');\n  private _authStatus = AuthStatus.Loading;\n  public authStatus$ = new BehaviorSubject(this._authStatus);\n  public username$ = new Subject<string>();\n\n  constructor() {\n    this.loadAuth();\n  }\n\n  getIsAuthenticated():boolean { return this._authStatus === AuthStatus.User; }\n  getUsername() { return this._user.username; }\n  getEmail() { return this._user.email;}\n  getUser() { return this._user };\n\n\n  async updateUser(user: User, forceLogout = false) {\n    // log.info('Userupdate: ', user, forceLogout, this._authStatus);\n    log.info('Update User:: ', user);\n    if(!isGuest(user) || this._user.username ==='null') {\n\n      if(this._authStatus !== AuthStatus.User) {\n        this.setAuthStatus(AuthStatus.User);\n      }\n\n      if(user.username !== this._user.username){\n        this._user = user;\n        await localStorageService.setObject(AUTH_USER_KEY, user)\n        this.username$.next(user.username);\n      }\n      if(!isEqual(this._user, user)) {\n        log.info('New user object, save it', user);\n        this._user = user;\n        await localStorageService.setObject(AUTH_USER_KEY, user)\n      }\n      \n      return;\n    }\n\n    if(this._authStatus !== AuthStatus.Guest){\n      this.setAuthStatus(AuthStatus.Guest)\n  \n      if(forceLogout){\n        await localStorageService.setObject(AUTH_USER_KEY, getGuestUser);\n      }\n    }\n  }\n\n\n\n\n  async loadAuth() {\n    try {\n      const user = getUser(await localStorageService.getObject(AUTH_USER_KEY));\n      log.info('LOADED USER', user);\n\n      if(!user.token || !user.token_expiery) {\n        return this.updateUser(getGuestUser());\n      }\n      const exp = moment.unix(user.token_expiery);\n      if(exp.isAfter(moment.now())) {\n        return this.updateUser(user);\n      }\n      else {\n        log.warn('TOKEN is old');\n        return this.updateUser(getGuestUser())\n      }\n    }\n    catch(e) {\n      log.error(e);\n      return this.updateUser(getGuestUser())\n    }\n  }\n\n\n  public async loginAndRedirect(id: string, password: string, history, location) {\n    const res = await post( getPostRequest(env.AUTH_API_URL+'/auth/login',\n      { id, password, app: env.APP_ID },), true,  'Login in, please wait');\n      if(res.success) {\n        this.updateUser(getUser(res.data))\n        let next;\n        if(location && location.state && location.state.prev){\n          next = location.state.prev.startsWith('/auth/')? '/': location.state.prev;\n        }\n\n        history.push(next || '/');\n      }\n      else {\n        toastService.printServerErrors(res);\n      }\n  }\n\n  public async logout() {\n    \n  }\n\n  public async login(id: string, password: string):Promise<ajaxResponse> {\n    const res = await post( getPostRequest(env.AUTH_API_URL+'/auth/login',\n      { username: id, password: password, app: env.APP_ID }, {}), true,  'Login in, please wait');\n\n    return res;\n  }\n\n\n  public async renewToken() {\n    const res = await post(getPostRequest(env.AUTH_API_URL+'/auth/renewToken',\n                          {token: this._user.token}), false);\n    log.info('Renewed Token: ', res);\n    if(res.success){\n      await this.updateUser({...this._user, ...{token: res.data.token, \n                                [env.ACCESS_META_KEY]: res.data[env.SERVER_ACCESS_META_KEY],\n                                token_expiery: res.data.expires}})\n      return true;\n    }\n    else {\n      //is it bad token, or just no internet\n      if(res.status && res.status === 422){\n        await this.updateUser(getGuestUser());\n        return false;\n      }\n    }\n\n\n  }\n\n  public async register(username:string, email: string, password: string): Promise<boolean> {\n    const res = await post( getPostRequest(env.AUTH_API_URL+'/auth/register',\n                      { username, password, email }),\n                      true,  'Registering, please wait');\n    if(res.success) {\n        return true;\n    }\n    else {\n      toastService.printServerErrors(res);\n      return false;\n    }\n  }\n\n  public async forgotPassword() {\n    //const res = await this.http.post(environment.auth_api+'/auth/forgotpassword'\n  }\n\n\n  private setAuthStatus(status:AuthStatus){\n    this._authStatus = status;\n    this.authStatus$.next(status);\n  }\n\n  public getAuthStatus():AuthStatus {\n    return this._authStatus;\n  }\n\n  public getToken():string {\n    return this._user.token || '';\n  }\n\n  public get userid(): string {\n    return this._user.id || '';\n  }\n\n\n\n}\nexport const authService = new AuthService();\n\n","import { post, getPostRequest } from '../ajax/ajax';\nimport { DIV } from './models';\nimport localStorageService from '../localStorage/localStorageService';\nimport ulog from 'ulog';\n\nconst log = ulog('sync');\n\nexport interface SyncDataChannel {\n  name: string,\n  docs: any[],\n}\n\n\nexport const organizeData = async (data: any[]) => {\n  const channels = {};\n  let channel;\n\n  data.forEach(doc => {\n    channel = doc.id.split(DIV)[0];\n    if(!channels[channel]) channels[channel] = [];\n    channels[channel].push({...{}, ...doc});\n\n  });\n  //now load channel checkpoints\n  const checkpoints = await localStorageService.getObject('channel_checkpoints') || {};\n  return {channels: channels, checkpoints};\n}\n\nexport const syncData = async (props:{  data:any[],\n                                        syncurl: string, \n                                        token: string, \n                                        checkpoint: number,\n                                        requestMaxSize:number}) => {\n  //TODO: check our size of docs, if its bigger than max size\n  try {\n    //get checkpoint\n    const data =  await organizeData(props.data);\n    const res = await post(getPostRequest(props.syncurl + '/sync/sync', {\n      token: props.token,\n      checkpoint: props.checkpoint,\n      data,\n    }),false,'');\n\n    if(res) {\n      //merge the 2 checkpoints\n      const chpoints = await localStorageService.getObject('channel_checkpoints') || {};\n      await localStorageService.setObject('channel_checkpoints',{...chpoints, ...res.data.checkpoints})\n      return res.data.types;\n    }\n    return null;\n  }\n  catch(e){\n    log.error(e);\n   }\n}\n\n","import { Observable, Subject, BehaviorSubject } from 'rxjs';\nimport { map, filter, throttleTime } from 'rxjs/operators';\nimport { getProjectChildId, generateCollectionId, \n  TYPE_SETTINGS, waitMS, getChannelFromProjectId } from './utilsData';\n\nimport { ProjectItem, DIV } from './models';\nimport _ from 'lodash';\nimport DexieAdapter, { DatabaseScheme } from './adapters/dexie';\nimport { TYPE_HABBIT } from '../../pages/habits/models';\nimport { TYPE_TODO, TYPE_TODO_LIST, TYPE_TODO_TAG } from '../../pages/todo/models';\nimport { TYPE_PARTY } from '../parties/models';\nimport { TYPE_MSG } from '../messages/models';\nimport { env } from '../../env';\nimport { authService } from '../auth/authService';\nimport localStorageService from '../localStorage/localStorageService';\nimport { syncData } from './sync';\nimport { post, getPostRequest } from '../ajax/ajax';\nimport ulog from 'ulog';\nimport { TYPE_SOCIAL } from '../social/models';\n\nconst log = ulog('dataService');\n\nexport interface DataChangeEvent {\n  doc: any,\n  old?: any,\n}\n\nconst databaseScheme: DatabaseScheme =  {\n  name: 'guest_dx',\n  version: 17,\n  tables: [\n    {\n      name: TYPE_SETTINGS,\n      columns: 'id, dirty',\n      sync: true\n    },\n    {\n      name: TYPE_PARTY,\n      columns: 'id, dirty, party, type, secondaryType',\n      sync: true\n    },\n    {\n      name: TYPE_TODO,\n      columns: 'id, done, deleted, list, *tags, dirty',\n      sync: true\n    },\n    {\n      name: TYPE_TODO_LIST,\n      columns: 'id, dirty, folder, secondaryType, fullname',\n      sync: true\n    },\n    {\n      name: TYPE_TODO_TAG,\n      columns: 'id, dirty',\n      sync: true\n    },\n    {\n      name: TYPE_HABBIT,\n      columns: 'id, dirty',\n      sync: true\n    },\n    {\n      name: TYPE_MSG,\n      columns: 'id, messageType, dirty',\n      sync: true\n    },\n    {\n      name: TYPE_SOCIAL,\n      columns: 'id, name, dirty, secondaryType',\n      sync: true\n    },\n  ]\n}\n\n\n\nclass DataService {\n  private db;\n  private authId:string = '';\n  private _ready = false;\n  public _ready$ = new BehaviorSubject(this._ready);\n  public addSyncCall$ = new Subject(); // do we need to sync with server\n\n  constructor() {\n    //subscriptions\n    this.addSyncCall$.pipe(\n      throttleTime(5000),\n    ).subscribe(() => {\n        log.info('Syncing.......')\n        this._syncRemote();\n      })\n  }\n\n  async getDoc(id: string|undefined,  collection: string): Promise<any> {\n    if(id === undefined){\n      throw new Error('Doc Id cannot be undefined, check logic.');\n    }\n    return await this.db.getDoc(id, collection);\n  }\n\n  async getBulk(ids: string[], collection: string): Promise<any> {\n   return await this.db.getBulk(ids, collection);\n  }\n\n  //operators: equals, startsWith, above, below, notEqual\n  async queryByProperty(field:string, operator: 'equals'|'startsWith'|'notEqual', \n      value: any, collection: string): Promise<any> {\n    return await this.db.queryByProperty(field, operator, value, collection);\n  }\n\n  async getAllByProject(projectid, collection): Promise<any> {\n    return await this.db.getProjectItems(getProjectChildId(projectid) + DIV, collection);\n  }\n\n  async getAllByChannel(channel, collection): Promise<any> {\n    return await this.db.getProjectItems(channel + DIV, collection);\n  }\n\n  //save without making it diryt\n  async saveFromServer(doc:any, type:string) {\n    await this.db.save(doc, type, false);\n  }\n\n  async save(doc:any, collection: string, props:{projectid?: string, \n    oldDoc?: any,remoteSync?:boolean} = {}): Promise<any> {  \n      log.info('SAVING DOC', doc, props, collection);\n      if(!props) props = {remoteSync: true};\n      if(props.remoteSync === undefined) props.remoteSync = true;\n    \n      try {\n        let oldDoc = {};\n        if (doc.id && props.oldDoc == null) {\n          oldDoc = await this.getDoc(doc.id, collection);\n        }\n        if (_.isEqual(oldDoc, doc)) {\n          return false; \n        }\n    \n        if(!doc.id) {\n          if(!props.projectid) throw new Error('Saving new doc requires valid props.project')\n            // @ts-ignore:  we made this check at the begining\n          doc.id = generateCollectionId(props.projectid, collection);\n          doc.created = Date.now();\n        }\n        doc.dirty = true;\n        if(!doc.rev)doc.rev = 1;\n        doc.rev ++;\n        const res = await this.db.save(doc, collection);\n        if (props.remoteSync)\n          this.addSyncCall$.next();\n        if (res.ok)\n          return res;\n        else\n          return false;\n        }\n      catch (e) {\n        log.error('DEXIE error: ', e);\n        return false;\n      }\n  }\n\n  \n\n  \n\n\n  async saveNewProject(project:ProjectItem, collection: string): Promise<any> {\n    const res = await post(getPostRequest(env.AUTH_API_URL +'/channels/addNewChannel',\n                      {token: authService.getToken(), \n                       doc: project,\n                       name: project.name}, {} ),  false) ;\n    log.info('Making new project, ajax result: ', res);\n    if(!res.success)\n      return res;\n\n    const channel = res.data.channel;\n    let gotNewRightsToken = false;\n    while(!gotNewRightsToken){\n      const user = authService.getUser();\n      if(user[env.ACCESS_META_KEY][channel]){\n        gotNewRightsToken = true;\n      }\n      else {\n        await waitMS(2000);\n      }\n    }\n    return await this.db.save(res.data.doc, collection, false);\n  }\n\n  async saveSystemDoc(doc: any, project:ProjectItem, collection: string): Promise<any> {\n    const doc2 = {}\n    if(!doc.type) \n      throw new Error('Saving system doc requires doc to have type property');\n    if(doc.secondaryType)\n      doc2['secondaryType'] = doc.secondaryType;\n\n    const res = await post(getPostRequest(env.AUTH_API_URL +'/channels/addNewSystemDoc',\n                      {...{ token: authService.getToken(), \n                        doctype: doc.type,\n                        channelname: getChannelFromProjectId(project.id),\n                        doc: doc }, ...doc2}, {} ), false) ;\n    if(!res.success)\n      return res;\n\n    return await this.db.save(res.data.doc, collection, false);\n  }\n\n\n\n\n  public async remove(id: string, collection: string, remoteSync:boolean = true) {\n    try {\n      const doc = await this.getDoc(id, collection);\n      if(!doc) return false;\n      log.warn('Deleting doc: ',id);\n      log.warn(doc);\n      const res =  this.db.save({...doc, ...{deleted: true}}, collection);\n      log.info(res);\n      if (remoteSync)\n        this.addSyncCall$.next();\n      return res;\n    }\n    catch(e) {\n      log.error(e);\n      return null;\n    }\n  }\n\n  public async removeProject() {\n\n    /*\n    try {\n      //load all project children and remove them\n      //TODO, on server side, if notice project deleted, make sure all server children are also deleted\n      const res = await this._pouch.allDocs({\n        include_docs: true,\n        startkey: getProjectChildId(project._id),\n        endkey: getProjectChildId(project._id) + LASTCHAR\n      });\n      const docs = res.rows.map(row => Object.assign(\n        row.doc, { _deleted: true, updated: Date.now() }));\n\n      docs.push(Object.assign(project, { _deleted: true, updated: Date.now() }));\n      const res2 = await this._pouch.bulkDocs(docs);\n\n      if (syncRemote)\n        this.addSyncCall$.next();\n\n      return res2;\n    }\n    catch (e) {\n      console.log('Remove Project Error: ', e);\n    }\n    */ return false;\n  }\n\n\n\n  // streams\n\n  subscribeChanges(): Observable<any> {\n    return this.db.changes$.asObservable().pipe(\n      map((change:DataChangeEvent) => change.doc )\n    );\n  }\n  \n\n  subscribeDocChanges(id: string): Observable<any> {\n    return this.db.changes$.asObservable().pipe(\n      filter((change: DataChangeEvent) => change.doc.id === id),\n      map((change: DataChangeEvent) => change.doc)\n    );\n  }\n\n\n  subscribeByPropertyChange(\n    property: string,\n    value: any): Observable<any> {\n    return this.db.changes$.asObservable().pipe(\n      filter((change: DataChangeEvent) => { \n        return (change.doc[property] === value);\n      }),\n      map((change: DataChangeEvent) => change.doc)\n    ); \n  }\n\n  subscribeProjectTypeChanges(projectid: string|undefined, type: string): Observable<any> {\n    if(projectid === undefined) \n      throw new Error('Project id, can not be undefined, can not subscribe to id') ;\n    const projectChildId = getProjectChildId(projectid);\n    return this.db.changes$.asObservable().pipe(\n      filter((change: DataChangeEvent) => { \n        return change.doc.id.startsWith(projectChildId + DIV + type + DIV);\n      }),\n      map((change: DataChangeEvent) => change.doc)\n    ); \n  }\n\n  //project id and channel only difference is the suffic at end of proejctid\n  subscribeChannelTypeChanges(channel: string|undefined, type: string): Observable<any> {\n    if(channel === undefined) \n      throw new Error('Channel can not be undefined, can not subscribe to id') ;\n    return this.db.changes$.asObservable().pipe(\n      filter((change: DataChangeEvent) => { \n        return change.doc.id.startsWith(channel + DIV + type + DIV);\n      }),\n      map((change: DataChangeEvent) => change.doc)\n    ); \n  }\n\n\n  public get ready() {\n    return this._ready;\n  }\n\n  public getReadySub() {\n    return this._ready$;\n  }\n\n  public set ready(value: boolean) {\n    this._ready = value;\n    if(value)\n      this._ready$.next(value);\n  }\n\n\n  public async init(authid: string , syncRemote = true) {\n    log.info('Init DB')\n    const scheme = databaseScheme;\n    scheme.name = authid;\n    this.db = new DexieAdapter(scheme);\n    const dbSub = this.db.ready$.subscribe(ready => {\n      log.info('Dexie Sub: ', ready);\n      if(!ready) return;\n\n      this.ready = true;\n      if (syncRemote)\n        this.addSyncCall$.next();\n\n      dbSub.unsubscribe();\n      \n    });\n  }\n\n  private async _syncRemote() {\n    let ck = Number(await localStorageService.getItem('SYNC_CHECKPOINT'));\n    if(!ck) ck = 0; \n    \n    let docs: any[] = [];\n    for(let i = 0; i < databaseScheme.tables.length; i++) {\n      if(!databaseScheme.tables[i].sync){\n        continue;\n      }\n      const res = await this.db.queryByProperty('dirty', 'equals', 1, databaseScheme.tables[i].name);\n      docs.push(...res);\n    }\n    const res = await syncData({  data: docs, \n                                  syncurl: env.SYNC_SERVER,\n                                  token: authService.getToken(),\n                                  checkpoint: 0,\n                                  requestMaxSize: 1000});\n    //save checkpoint\n    if(res) {\n      const keys = Object.keys(res);\n      for(let i = 0; i < keys.length; i++){\n        await this.db.saveFromSync(\n          res[keys[i]].map(doc => Object.assign(doc, {dirty: 0})), \n          keys[i]);\n      }\n    }\n\n  }\n\n\n\n}\n\nexport const dataService = new DataService();\n","\n\nexport const TYPE_MSG = 'msg';\n\nexport interface Msg {\n  id:string,\n  to:string, \n  from:string, \n  type:string, \n  messageType: string,\n  message:string, \n  data: any\n  replied?: {accepted: boolean, date:number},\n  deleted?: boolean\n}","import { Doc } from \"../data/models\";\n\nexport const TYPE_SOCIAL = 'social';\n\n\n\nexport class Friend extends Doc {\n  username!: string;\n  id!: string;\n  secondaryType?: string;\n\n\n  constructor(values: Object = {}) {\n    super()\n    Object.assign(this, values);\n    if(!values['username']) throw new Error('Friend Doc username required')\n    if(!values['id']) throw new Error('Friend Doc id required')\n  }\n}\n\n\n","import { Todo } from \"../../pages/todo/models\";\nimport moment from 'moment';\nimport { TODO_DONE_GOLD_REWARDS, TODO_DONE_EXPERIENCE_REWARDS } from \"./gamifyService\";\n\n\nexport const calculateLevelExperience = (level:number): number => {\n  let exp = 0;\n    for(let x = 1; x < level; x++){\n      exp += Math.floor((x+100) * Math.pow(2,(x/7)))\n    }\n  return Math.floor(exp/4);\n}\n\nexport const HEALTH_BASE = 50;\nexport const calculateLevelHealth = (level:number): number => {\n  let exp = HEALTH_BASE;\n    for(let x = 1; x < level; x++){\n      //console.log(Math.floor((x+150) * Math.pow(2,(x/50))));\n      exp += Math.floor(5 + (x/3));\n    }\n  return exp;\n}\n\nexport const HABIT_REWARDS_GOLD_PERCENTAGE_INCREASE = 0.2;\nexport const HABIT_REWARDS_EXPERIENCE_PERCENTAGE_INCREASE = 0.1;\nexport const calculateDoneTodoGold = (todo:Todo): number => {\n\n  let days = 0;\n  //how many days past\n  if(todo.date)\n    days = moment(todo.date).diff(moment(),'hour');\n\n  const rew =TODO_DONE_GOLD_REWARDS + (HABIT_REWARDS_GOLD_PERCENTAGE_INCREASE * days);\n\n  return Math.floor(rew);\n\n\n}\n\nexport const calculateDoneTodoExperience = (todo:Todo): number => {\n\n  let days = 0;\n  //how many days past\n  if(todo.date)\n    days = moment(todo.date).diff(moment(),'hour');\n\n  const rew =TODO_DONE_EXPERIENCE_REWARDS + \n    (HABIT_REWARDS_EXPERIENCE_PERCENTAGE_INCREASE * days);\n\n  return Math.floor(rew);\n\n\n}\n\n\n","import { BehaviorSubject } from 'rxjs';\nimport { toast } from 'react-toastify';\nimport { Todo } from '../../pages/todo/models';\nimport { Habit, HabitProgress } from '../../pages/habits/models';\nimport { saveIntoArray } from '../../utils';\nimport { dataService } from '../data/dataService';\nimport { calculateLevelExperience, calculateDoneTodoGold, calculateDoneTodoExperience } from './utilsGamify';\nimport { throttleTime } from '../../../node_modules/rxjs/operators';\nimport { isEqual } from 'lodash';\nimport { getInitGamifyRewards } from '../../pages/habits/utilsHabits';\nimport { generateCollectionId, genrateMetaData, TYPE_SETTINGS, getDefaultProject } from '../data/utilsData';\nimport { env } from '../../env';\nimport { authService } from '../auth/authService';\nimport ulog from 'ulog';\n\nconst log = ulog('gamify');\n\nexport const HABIT_REWARDS_GOLD_BASE = 5;\nexport const HABIT_REWARDS_GOLD_PERCENTAGE_INCREASE = 0.2;\nexport const HABIT_REWARDS_EXPERIENCE_BASE = 3;\nexport const HABIT_REWARDS_EXPERIENCE_PERCENTAGE_INCREASE = 0.2;\nexport const HABIT_REWARDS_NEW_GOLD = 5;\nexport const HABIT_REWARDS_NEW_EXPERIENCE = 5; \n\nexport const TODO_NEW_GOLD_REWARDS = 1;\nexport const TODO_DONE_GOLD_REWARDS = 3;\nexport const TODO_NEW_EXPERIENCE_REWARDS = 2;\nexport const TODO_DONE_EXPERIENCE_REWARDS = 5;\n\nexport const MESSAGE_DURATION = 3000;\n\nexport interface GamifyState {\n  health:number,\n  maxHealth: number,\n  experience: number,\n  maxExperience: number,\n  level: number,\n  gold: number,\n\n  items: any[],\n}\n\nexport const getInitGamifyState = () => {\n  return {\n    health: 50,\n    maxHealth: 50,\n    experience: 0,\n    maxExperience: 20,\n    level: 1,\n    gold: 0,\n\n    items:[]\n  }\n}\n\nexport class GamifyService {\n\n  private _userId = '';\n  private _subscriptions:any[] = [];\n  private _state: GamifyState = getInitGamifyState();\n  \n  public state$ = new BehaviorSubject<GamifyState>(this._state);\n  \n\n  public async init(userid: string) {\n    this.unsubscribe();\n    this._userId = userid;\n    const dataSub = dataService.getReadySub().subscribe(async (ready) => {\n      if(!ready) return;\n      const doc = await this.loadInitDocs(userid);\n      const sub = this.state$.pipe(throttleTime(10000)).subscribe(()=>{\n        this._save();\n      })\n  \n      const sub2 = dataService.subscribeDocChanges(this.getGamifyDocId())\n        .subscribe(doc => {\n          const equal = isEqual(this._state, doc.state);\n          if(!equal)\n            this.state = doc.state;\n        });\n  \n      this._subscriptions.push(sub);\n      this._subscriptions.push(sub2);\n      //load the init stae\n      if(doc)\n        this.state = doc.state;\n\n      dataSub.unsubscribe();\n    })\n  }\n\n\n\n  private unsubscribe() {\n    this._subscriptions.forEach(s=>{\n      if(s)s.unsubscribe();\n    })\n  }\n\n  public calculateFinishedTodoRewards = (todo: Todo): Todo => {\n    if(!todo.doneRewards || !todo.doneRewards.gold){\n      todo.newRewards = getInitGamifyRewards({\n        gold: calculateDoneTodoGold(todo),\n        experience: calculateDoneTodoExperience(todo),\n        item: null\n      });\n    }\n\n    if(todo.done){\n      // @ts-ignore: top, just added values\n      this.addGold(todo.newRewards.gold);\n      // @ts-ignore: \n      this.messageReceivedGold(todo.newRewards.gold)\n      // @ts-ignore: top, just added values\n      this.addExperience(todo.newRewards.experience);\n      // @ts-ignore:\n      this.messageReceivedExperience(todo.newRewards.experience)\n    }\n    else {\n      // @ts-ignore: top, just added values\n      this.addGold(todo.newRewards.gold * -1);\n      // @ts-ignore: \n      this.messageLostGold(todo.newRewards.gold)\n      // @ts-ignore: top, just added values\n      this.addExperience(todo.newRewards.experience * -1);\n      // @ts-ignore:\n      this.messageLostExperience(todo.newRewards.experience)\n    }\n\n    return {...{}, ...todo};\n  }\n\n  public calculateNewTodo = (todo: Todo): Todo => {\n    todo.newRewards = getInitGamifyRewards({\n      gold: TODO_NEW_GOLD_REWARDS,\n      experience: TODO_NEW_EXPERIENCE_REWARDS,\n      item: null,\n    });\n\n    // @ts-ignore: top, just added values\n    this.addGold(todo.newRewards.gold);\n    // @ts-ignore: \n    this.messageReceivedGold(todo.newRewards.gold)\n    // @ts-ignore: top, just added values\n    this.addExperience(todo.newRewards.experience);\n    // @ts-ignore:\n    this.messageReceivedExperience(todo.newRewards.experience)\n\n    return {...{} ,...todo};\n  }\n\n  public calculateNewHabitRewards = (habit:Habit): Habit => {\n    habit.newRewards = getInitGamifyRewards({\n      gold: HABIT_REWARDS_NEW_GOLD,\n      experience: HABIT_REWARDS_NEW_EXPERIENCE,\n      item: null,\n    });\n\n    // @ts-ignore: top, just added values\n    this.addGold(habit.newRewards.gold);\n    // @ts-ignore: \n    this.messageReceivedGold(habit.newRewards.gold)\n    // @ts-ignore: top, just added values\n    this.addExperience(habit.newRewards.experience);\n    // @ts-ignore:\n    this.messageReceivedExperience(habit.newRewards.experience)\n\n    return {...{}, ...habit};\n  }\n\n  private addGold(value:number) {\n    this.state = {...this._state, ...{gold: this._state.gold + value}};\n  }\n\n  private addExperience(value: number) {\n    let experience = this._state.experience + value;\n    \n    if(experience > this._state.maxExperience){\n      experience = (this._state.maxExperience - experience) * -1;\n      this._state = {...this._state, \n        ...{maxExperience: calculateLevelExperience(this._state.level+1),\n            level: this._state.level + 1}}\n    }\n      \n    \n    this.state = {...this._state, ...{experience}}\n  }\n\n  public calculateHabitProgressRewards(habit:Habit, progress: HabitProgress): Habit {\n    if(!habit.regularityEachDayGoal) habit.regularityEachDayGoal = 1; // default\n\n    const prog: HabitProgress = Object.assign(progress)\n\n    if(!progress.reward) {\n      // calculate rewards\n      prog.reward = getInitGamifyRewards();\n      let gold = HABIT_REWARDS_GOLD_BASE;\n      let exp = HABIT_REWARDS_EXPERIENCE_BASE;\n      for(let i = 0; i<habit.currentStreak; i++) {\n        gold += gold*HABIT_REWARDS_GOLD_PERCENTAGE_INCREASE;\n        exp += exp*HABIT_REWARDS_EXPERIENCE_PERCENTAGE_INCREASE;\n      }\n      prog.reward.gold = Math.round(gold);\n      prog.reward.experience = Math.round(exp);\n\n      habit.progress = saveIntoArray(prog, habit.progress, 'date');\n    }\n\n    if(prog.value >= habit.regularityEachDayGoal) {\n      \n      if(prog.reward && prog.reward.gold){\n        this.messageReceivedGold(prog.reward.gold);\n        this.addGold(prog.reward.gold);\n      }\n        \n      if(prog.reward && prog.reward.experience){\n        this.messageReceivedExperience(prog.reward.experience);\n        this.addExperience(prog.reward.experience)\n      }\n        \n    }\n    else {\n      if(prog.reward && prog.reward.gold){\n        this.messageLostGold(prog.reward.gold);\n        this.addGold(prog.reward.gold * -1);\n      }\n        \n      if(prog.reward && prog.reward.experience){\n        this.messageLostExperience(prog.reward.experience * -1);\n        this.addExperience(prog.reward.experience * -1)\n      }\n        \n    }\n\n    return habit;\n  }\n\n  private messageReceivedGold(gold: number, preMessage?:string, postMessage?:string) {\n    if(!preMessage) preMessage = '';\n    if(!postMessage) postMessage = '';\n    toast.success(preMessage+' You have received ' + gold + ' gold '+postMessage,{autoClose:MESSAGE_DURATION});\n  }\n\n  private messageLostGold(gold:number, preMessage?:string, postMessage?:string) {\n    if(!preMessage) preMessage = '';\n    if(!postMessage) postMessage = '';\n    toast.error(preMessage+' You have lost ' + gold + ' gold'+postMessage, {autoClose:MESSAGE_DURATION});\n  }\n\n  private messageReceivedExperience(exp: number, preMessage?:string, postMessage?:string) {\n    if(!preMessage) preMessage = '';\n    if(!postMessage) postMessage = '';\n    toast.success(preMessage+' You have received ' + exp + ' experience'+postMessage,{autoClose:MESSAGE_DURATION});\n  }\n\n  private messageLostExperience(exp:number, preMessage?:string, postMessage?:string) {\n    if(!preMessage) preMessage = '';\n    if(!postMessage) postMessage = '';\n    toast.error(preMessage+' You have lost ' + exp + ' experience'+postMessage, {autoClose:MESSAGE_DURATION});\n  }\n  \n  private async _save() {\n    try{\n      const doc = await dataService.getDoc(this.getGamifyDocId(), TYPE_SETTINGS);\n\n      if(!doc){\n        return;\n      }\n\n      const equal = isEqual(this._state, doc.state);\n      //make sure we are not saving the init state\n      const initEqual = isEqual(this.state, getInitGamifyState());\n      if(!equal && !initEqual && doc.userid ===  this._userId) {\n        dataService.save({...doc, ...{state: this._state}}, TYPE_SETTINGS);\n      }\n    }\n    catch(e) {\n      log.error(e);\n    }\n    \n  }\n\n  private getGamifyDocId(): string {\n    const defaultProject = getDefaultProject(authService.userid);\n    const id =  generateCollectionId(defaultProject.id, 'gamify', '');\n    return id.substring(0, id.length-1);\n  }\n\n  private async loadInitDocs(id: string): Promise<any> {\n    try {\n      const s = await dataService.getDoc(this.getGamifyDocId(), TYPE_SETTINGS);\n      if(s) return s;\n      const ts = Date.now();   \n      if(id === this._userId){  //half second pased, see if state changed\n        const res = await dataService.save({\n          id: this.getGamifyDocId(),\n          state: getInitGamifyState(),\n          type: TYPE_SETTINGS,\n          [env.ACCESS_META_KEY]: genrateMetaData(id),\n          userid: id,\n          created: ts,\n          updated: ts\n        }, TYPE_SETTINGS)\n      return res;\n      }\n    }\n    catch(e) {\n      log.error(e.red, id);\n    }    \n  }\n\n  public get state(): GamifyState {\n    return this._state;\n  }\n  public set state(value: GamifyState) {\n    this._state = value;\n    this.state$.next(value);\n  }\n\n}\nexport const gamifyService = new GamifyService();\n\n\n","import React, { useState } from 'react'\nimport Lottie from 'react-lottie';\nimport './default.css'\n\nexport const waitMS = (ms: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n};\n\n\nfunction AnimatedIcon({iconsvg, actionFunc}:\n    {iconsvg:any, actionFunc:Function}) {\n  const [state, setState] = useState({isStopped:true, isPaused:true})\n\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: false, \n    render: 'svg',\n    animationData: iconsvg,\n    rendererSettings: {\n      clearCanvas: true,\n      scaleMode: 'noScale',\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  }; \n\n  const actionHandler = async() => {\n    setState({isStopped:false, isPaused:false});\n    \n\n    await waitMS(1000);\n    actionFunc();\n    setState({isStopped:true, isPaused:true});\n  }\n\n  return (\n    <div onClick={() => actionHandler()} className =\"animatedfunction\">\n      <Lottie  options={defaultOptions}\n          height={25}\n          width={25}\n          isStopped={state.isPaused}\n          isPaused={state.isStopped}/>\n    </div>\n  )\n}\n\nexport default AnimatedIcon;\n","import React, { useEffect, useReducer } from 'react';\nimport { IonLabel, IonRow, IonCol, \n        IonIcon, IonGrid, IonItem, IonText, IonAvatar } from '@ionic/react';\nimport { Todo, TodoTag } from './models';\nimport _ from 'lodash';\nimport './todo.component.css'\nimport { DataFunctions } from './hooks/todos.hook';\nimport TodoEditInlineComponent from './todo.edit.inline.component';\nimport { gamifyService } from '../../modules/gamify/gamifyService';\nimport ulog from 'ulog'\nimport check from '../../icons/check.json';\nimport restart from '../../icons/restart.json'\nimport AnimatedIcon from '../../components/animatedIcon';\n\nconst log = ulog('todo');\n\nexport interface TodoState {\n  todo: Todo,\n}\n\n\nconst reducer = (state, {type, payload}): TodoState => {\n  switch(type) {\n    case 'updateTodo':\n      return {...state, ...{todo:payload}};\n    \n    default:\n      return state;\n  }\n}\n\n\n//Component Start\nconst TodoListItemComp = ({todo, tagDocs, selectedTodo, dataFunctions}:\n  {todo:Todo, tagDocs:TodoTag[], lastChild: boolean,  selectedTodo: Todo|null,  dataFunctions: DataFunctions}) => {\n  \n\n  const [state, _dispatch] = useReducer(reducer, \n    {todo: todo, })\n\n  useEffect(() => {\n    dispatch('updateTodo', todo);\n  }, [todo])\n  \n  const dispatch = (type:'updateTodo'|\n                          'any', \n                    payload:any = {}) => {\n    _dispatch({type, payload});\n  }\n  \n  const doneHandler = () => {\n    const newDoc = gamifyService.calculateFinishedTodoRewards(\n        {...state.todo, ...{done: !state.todo.done}});\n    dispatch('updateTodo', newDoc);\n    dataFunctions.save(newDoc);\n  }\n\n  const handleSelectTodo = () => {\n    if(selectedTodo && state.todo.id === selectedTodo.id){\n      dataFunctions.select(null);\n    }\n    else {\n      dataFunctions.select(state.todo);\n    }\n  }\n\n  \n\n  const printSmallTagFromFullname = (name:string) => {\n    log.warn(tagDocs);\n    const tag = tagDocs.find(t => t.fullname === name);\n    if(tag && tag.icon) {\n      return <IonIcon  \n                key={tag.fullname}\n                size=\"small\" \n                color='success' \n                src={\"/assets/icons/\"+tag.icon} />\n    }\n\n    return <IonIcon  \n                key={name}\n                size=\"small\" \n                color='success' \n                src={\"/assets/icons/tag.svg\"} >\n          {name}  \n          </IonIcon>\n  }\n\n  const printTask = () => (\n    <>\n      <IonItem  button \n            color={((selectedTodo && selectedTodo.id === state.todo.id)? 'light' : '')}   \n            lines=\"full\">\n        \n            <IonAvatar onClick={() => {}} slot=\"start\">\n              {state.todo.done? (\n                <AnimatedIcon  iconsvg={restart} actionFunc={doneHandler} />\n              ) : (\n                <AnimatedIcon  iconsvg={check} actionFunc={doneHandler} />\n              )}\n              \n            </IonAvatar>\n              <IonLabel onClick={handleSelectTodo}>\n              <IonText color=\"primary\">\n                  <h2>{state.todo.name}</h2>\n              </IonText>\n              {state.todo.note? (\n                <IonText color=\"secondary\">\n                  <p>{state.todo.note}</p>\n                </IonText> \n              ) : (<></>)}\n               \n              </IonLabel>\n              {state.todo.tags.sort().map(\n                tag=>printSmallTagFromFullname(tag)\n              )}\n        </IonItem>\n        {printEdit()}\n    </>\n  )\n\n\n  const printEdit = () => {\n    if(!selectedTodo || selectedTodo.id !== state.todo.id) return;\n    return (\n      <IonGrid>\n        <IonRow>\n            <IonCol class=\"todoTitleColumn\" onClick={() => {}}  >\n              <TodoEditInlineComponent \n                          todo={state.todo}\n                          tagDocs={tagDocs}\n                          dataFunctions={dataFunctions} />\n                        \n            </IonCol>\n        </IonRow>\n      </IonGrid>\n    )\n  }\n  \n\n  return printTask();\n};\n\nexport default TodoListItemComp;\n","\nimport { Todo, TYPE_TODO, TodoList, TYPE_TODO_LIST, TodoTag, getDefaultTodoList, getDefaultTodoTag } from './models';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { dataService } from '../../modules/data/dataService';\nimport { waitMS, getProjectChildId } from '../../modules/data/utilsData';\nimport _ from 'lodash';\nimport { gamifyService } from '../../modules/gamify/gamifyService';\nimport ulog from 'ulog';\nimport { toastService } from '../../modules/toast/toastService';\n\n\nconst log = ulog('todo');\n\n\nexport interface TodoState {\n  selectedTodo: Todo|null,\n  list: TodoList|undefined,\n  tag: TodoTag|undefined,\n  docs: Todo[],\n  tagDocs: TodoTag[],\n  doneTodos: boolean,\n}\n\nexport const getInitTodoState = (): TodoState => {\n  return {\n    selectedTodo:null,\n    list: undefined,\n    tag: undefined,\n    docs: [],\n    tagDocs: [],\n    doneTodos: false,\n  }\n}\n\nexport class TodoService {\n  \n  // @ts-ignore: it will be initialized in init\n  private _projectid: string;\n  private _state: TodoState = getInitTodoState();\n  public state$ = new BehaviorSubject(this._state);\n  private _subscription: Array<Subscription> = [];\n\n  public init(projectid: string, list:string|undefined, tag:string|undefined) {\n    log.warn(projectid, list, tag);\n    //first unsubscribe\n    this.unsubscribe();\n    const dataSub = dataService.getReadySub().subscribe( async (ready) => {\n      if(!ready) return;\n      \n      this._init(projectid, list, tag);\n\n      await waitMS(1000);\n      dataSub.unsubscribe();\n    });\n  }\n\n  async _init(projectid: string, listName: string|undefined, tagName: string|undefined) {\n\n    if(this._projectid  === projectid && \n        this._state.list?.fullname === listName && \n        this._state.tag?.fullname === tagName) return;\n\n    let list, tag\n    if(!listName && !tagName){\n      list = getDefaultTodoList('default', projectid)     \n    }\n    if(listName)\n      list = getDefaultTodoList(listName, projectid)    \n    if(tagName)\n      tag = getDefaultTodoTag(tagName, projectid);\n\n    this._state = {...this.state, ...{\n      tag, \n      list,\n      tagDocs: this.getTags(projectid)}};\n    \n      log.warn(this._state);\n    \n    this._projectid = projectid;\n    \n    log.info(this.state);\n\n    this.reloadTodos();\n\n    const sub = dataService.subscribeProjectTypeChanges(projectid,TYPE_TODO)\n      .subscribe((doc: Todo) => {\n        log.log(\"TodoService subscription: \", doc); \n        this.reloadTodos();\n      });\n    this._subscription.push(sub);\n\n  }\n\n  async reloadTodos() {\n    log.info('RELOADING TODOS::: ', this.state)\n      let docs;\n    if(this.state.list){\n        log.info('Todo Query by List')\n        docs = await dataService.queryByProperty(\n          'list', 'equals', this.state.list.fullname, TYPE_TODO);\n    }\n     else if(this.state.tag){\n        log.info('Todo Query by Tags')\n        docs = await dataService.queryByProperty(\n          'tags', 'equals', this.state.tag.fullname, TYPE_TODO);\n    }\n\n    this.filterAndSaveTodos(docs);\n   \n  }\n\n  private filterAndSaveTodos(docs: Todo[]):Todo[] {\n    const filtered = docs.filter(doc => this.filterDoneParentFunction(doc));\n    this.state = {...this.state, ...{docs: filtered}};\n    return filtered;\n  }\n\n  private filterDoneParentFunction(doc:Todo) {\n      if (doc.done !== this._state.doneTodos) return false;\n      return true;\n  }\n\n\n \n  public get state(): TodoState {\n    return this._state;\n  }\n  public set state(value: TodoState) {\n    this._state = value;\n    this.state$.next(this._state);\n  }\n\n  public async addSubTodoToParent (todoId: string, parentId: string) {\n    try {\n      const parentTodo: Todo = await dataService.getDoc(parentId, TYPE_TODO);\n      if (parentTodo) {\n        if(!parentTodo.subTodos) parentTodo.subTodos = [];\n        parentTodo.subTodos = _.concat(parentTodo.subTodos, todoId);\n        this.save(parentTodo);\n      }\n    }\n    catch(e) {\n      log.error(e);\n    }\n  }\n\n  public async removeSubTodoFromParent (todoId: string, parentId) {\n    try {\n      const parentTodo: Todo = await dataService.getDoc(parentId, TYPE_TODO);\n      if (parentTodo) {\n        if(!parentTodo.subTodos) parentTodo.subTodos = [];\n        parentTodo.subTodos = _.filter(parentTodo.subTodos, t=>t!== todoId);\n        this.save(parentTodo);\n      }\n    }\n    catch(e) {\n      log.error(e);\n    }\n  }\n\n\n  public async save(doc:Todo, parentId: string|null = null) {\n    log.info(\"Save: \", doc, this._projectid, TYPE_TODO);\n    //see if its new\n    if(doc._new) {\n      delete(doc._new);\n      doc.tags = [];\n      if(this.state.list)\n        doc.list = this.state.list.fullname;\n      else\n        doc.list = getProjectChildId(this._projectid)+'default'\n      if(!doc.tags){\n        doc.tags = [];\n      }\n      if(this.state.tag)\n        doc.tags.push(this.state.tag.fullname)\n      doc = gamifyService.calculateNewTodo(doc);\n    }\n    const res = await dataService.save({...{done: false}, ...doc}, TYPE_TODO, {projectid: this._projectid});\n    if(parentId && doc.id) {\n      this.addSubTodoToParent(doc.id, parentId)\n    }\n    return res;\n\n  }\n\n  public async saveList(doc:TodoList) {\n    log.info('Save New TodoList: ', doc);\n    if(doc._new) {\n      //make sure its not a duplicate\n      const res = await dataService.getDoc(doc.id, TYPE_TODO_LIST);\n      if(res){\n        //error, its a duplicate\n        toastService.printSimpleError('List Already Exists');\n        return;\n      }\n      delete doc._new;;\n      const saveRes = await dataService.save(doc, TYPE_TODO_LIST);\n      log.info(saveRes);\n      return saveRes;\n    }\n  }\n\n  public async deleteList(list:TodoList) {\n    //get all docs that are in this list\n    log.warn(list);\n    const docs = await dataService.queryByProperty('list', 'equals', list.fullname,TYPE_TODO);\n    log.warn(docs);\n    //delete all items\n    for(let i = 0; i < docs.length; i ++){\n      dataService.remove(docs[i].id, TYPE_TODO);\n    }\n    if(list.id)\n      dataService.remove(list.id, TYPE_TODO_LIST);\n  }\n\n  public async remove(id: string) {\n    //see if this doc has parent\n    try {\n      const todo: Todo = await dataService.getDoc(id, TYPE_TODO);\n      if (todo) {\n        if(todo.parent) {\n          this.removeSubTodoFromParent(id, todo.parent);\n        }\n      }\n    }\n    catch(e) {\n      log.error(e);\n    }\n    dataService.remove(id, TYPE_TODO);\n  }\n\n  public select(doc:Todo | null) {\n    this.state = {...this._state, ...{ selectedTodo: doc} };\n  }\n\n  public changeDoneFilter(done: boolean) {\n    if(done === this._state.doneTodos) return;\n    this._state = {...this._state, ...{ doneTodos: done} };\n    this.reloadTodos();\n\n  }\n\n  public getTags(projectid):TodoTag[] {\n    const tags =  [\n      getDefaultTodoTag('today', projectid), \n      getDefaultTodoTag('important', projectid)];\n    return tags;\n  }\n\n\n  public selectList(list:TodoList) {\n    if(list === this._state.list) return;\n    this._state = {...this._state, ...{ list } };\n    this.reloadTodos();\n  }\n\n  public unsubscribe() {\n    if(!this) return;\n    this._subscription.forEach(sub => {\n      if(sub)\n        sub.unsubscribe();\n    });\n  }\n\n}\n\n\n\nexport  const todoService = new TodoService(); ","import { useEffect, useState, useRef } from 'react';\nimport { Subscription } from 'rxjs';\nimport { Todo, TodoList, getDefaultTodoList, getDefaultTodoTag } from '../models';\nimport { TodoService, TodoState, getInitTodoState } from '../todo.service';\nimport ulog from 'ulog';\n\nconst log = ulog('todo');\n\nexport interface DataFunctions {\n  save: {(doc: Todo, parentId?: string|null):Promise<any>},\n  remove: {(id: string)},\n  select: {(doc: Todo | null)},\n  selectList: {(list: TodoList)},\n  changeDoneFilter: {(done:boolean)}\n}\n\n\n//more simpler then auth hook, just read data\nexport function useTodosCollectionFacade(\n  projectid: string| undefined, list:string|undefined, tag:string|undefined): \n  [TodoState, DataFunctions]{\n  \n  log.warn(projectid, list, tag);\n                           \n  if(!projectid) throw new Error('Projectid can not be undefined');\n  const [state, setState] = useState(getInitTodoState());\n  const todoService = useRef(new TodoService());\n          \n  const dataFunctions = {\n    save: (doc: Todo, parentId?: string|null):Promise<any> => todoService.current.save(doc, parentId),\n    remove: (id) => todoService.current.remove(id), //TODO: allow user to choose, sync or not to sync\n    select: (doc: Todo | null) => todoService.current.select(doc),\n    selectList: (list: TodoList) => todoService.current.selectList(list),\n    changeDoneFilter: (done:boolean) => todoService.current.changeDoneFilter(done),\n  }\n\n  useEffect(() => {\n    todoService.current.init(projectid, list, tag)\n    return todoService.current.unsubscribe;\n  }, [projectid, list, tag])\n\n  useEffect(() => {\n    const subscriptions: Subscription[] = [\n      todoService.current.state$.subscribe(state => {\n        setState(state);\n      })\n    ];\n    return () => { subscriptions.map(it => it.unsubscribe()) };\n  },[projectid]);\n\n\n  return [state, dataFunctions];\n}","import { useEffect, useState } from 'react';\nimport { Subscription } from 'rxjs';\nimport { dataService } from '../../data/dataService';\nimport { GUEST, authService } from '../../auth/authService';\nimport { gamifyService } from '../../gamify/gamifyService';\nimport { partyService } from '../../parties/party.service';\nimport ulog from 'ulog';\n\nconst log = ulog('app');\n\nexport enum AppStatus {\n  loading, auth, guest\n}\n\n// username, authenticated, login, logout, renewToken\nexport function useAppStatus(): [{status:AppStatus, dataReady:boolean, username:string}] {\n\n  const [appStatus, setAppStatus] = useState({status: AppStatus.loading, dataReady: false, username: GUEST});\n\n\n  log.info('APP Router Status: ', appStatus);\n\n  useEffect(() => {\n    log.info('App Stats Effect::');\n    const subscriptions: Subscription[] = [\n      dataService.getReadySub().subscribe(ready => {\n        if(ready === appStatus.dataReady) return;\n          setStatusFunction();\n      }),\n      authService.username$.subscribe(async (username) => {\n        //renew token\n        if(authService.getIsAuthenticated()){\n          authService.renewToken();\n        }\n        setStatusFunction();\n        const userid = authService.getUser().id;\n        await dataService.init( userid, username !== GUEST);\n        await gamifyService.init(userid);\n        await partyService.init();\n        dataService.addSyncCall$.next();\n      }),\n\n    ];\n    // usersService.loadAll();\n    return () => { subscriptions.map(it => it.unsubscribe()) };\n  },[]);\n\n\n  const setStatusFunction = () => {\n    const dataReady = dataService.ready;\n    const username = authService.getUsername();\n    if(dataReady === appStatus.dataReady && username === appStatus.username)\n      return;\n    log.info('STATUS:', dataReady, username, appStatus);\n    \n    if(dataReady){\n      if(username === GUEST)\n        setAppStatus({ status:AppStatus.guest, username: username, dataReady: dataReady });\n      else\n        setAppStatus({ status:AppStatus.auth, username: username, dataReady: dataReady });\n    }\n    else {\n      setAppStatus({ status:AppStatus.loading, username: username, dataReady: dataReady });\n    }\n  };\n\n  return [ appStatus ];\n}","import React, { useState, useEffect } from 'react';\nimport { IonHeader, IonIcon, IonBadge } from '@ionic/react';\nimport { Line } from 'rc-progress';\nimport { gamifyService, getInitGamifyState, GamifyState } from '../modules/gamify/gamifyService';\n\n\n\nimport './header.css';\nimport 'rc-progress/assets/index.css';\nimport { heart, star, leaf, logoUsd } from 'ionicons/icons';\n\nconst HeaderWithProgress = ({title}:{title:string}) => {\n\n  const [state, setState] = useState<GamifyState>(getInitGamifyState())\n\n  const {health, maxHealth, experience, maxExperience, level, gold} = state;\n\n  useEffect(() => {\n    const sub = gamifyService.state$.subscribe(s => {\n      setState({...state, ...s});\n    })\n    return () => {\n      sub.unsubscribe();\n    };\n  }, [])\n\n\n  return (\n    <IonHeader className=\"headerWithAvatar\">\n      <div className=\"cityParent\">\n        <img src=\"/assets/pics/hills.svg\" style={{right:'25px'}} className=\"headerHills\" alt=\"Hills\"/>\n        <img src=\"/assets/pics/hills.svg\" style={{right:'200px'}} className=\"headerHills\" alt=\"Hills\"/>\n        <img src=\"/assets/pics/ground.svg\" className=\"headerGround\" alt=\"Ground\"/>\n        <img src=\"/assets/pics/sun.svg\" style={{right:'130px', top: '10px', width:'5%'}} className=\"headerSkyDetail\" alt=\"Hills\"/>\n        <img src=\"/assets/pics/cloud2.svg\" style={{right:'240px', top: '40px'}} className=\"headerSkyDetail\" alt=\"Hills\"/>\n        <img src=\"/assets/pics/cloud1.svg\" style={{right:'60px', top: '40px'}} className=\"headerSkyDetail\" alt=\"Hills\"/>\n        <img src=\"/assets/pics/cloud2.svg\" style={{right:'140px', top: '15px'}} className=\"headerSkyDetail\" alt=\"Hills\"/>\n      </div>\n      <div className=\"statsParent\" >\n        <div className=\"statsBarParent\" >\n          <IonIcon class=\"statsBarIcon\" icon={heart} style={{color: \"#C20114\"}} />\n          <Line trailWidth={0} percent={health/maxHealth * 100} \n                className=\"statsBarLine\"\n                strokeWidth={4} strokeColor=\"#C20114\" />\n          <IonBadge class=\"statsBarBadge\" \n                    color=\"danger\" >{health}/{maxHealth}</IonBadge>\n        </div>\n        <div className=\"statsBarParent\" >\n        <IonIcon class=\"statsBarIcon\" icon={leaf} style={{color: \"#157F1F\"}} />\n          <Line trailWidth={0}  percent={experience/maxExperience * 100} \n                className=\"statsBarLine\"\n                strokeWidth={4} strokeColor=\"#157F1F\" />\n          <IonBadge class=\"statsBarBadge\" \n                    color=\"success\" >{experience}/{maxExperience}</IonBadge>\n        </div>\n        <div className=\"statsBarMoneyParent\" >\n          <IonBadge class=\"statsBarMoneyBadge\" \n                    color=\"warning\" >Gold: {gold}</IonBadge>\n          <IonBadge class=\"statsBarMoneyBadge\" \n                    color=\"success\" >Level: {level}</IonBadge>\n        </div>\n      </div>\n        \n      <h1>{title}</h1>\n    </IonHeader>\n  )\n}\n\nexport default HeaderWithProgress;","import React from 'react';\nimport {\n  IonPage,\n  IonContent,\n  IonList,\n  IonItem,\n  IonButton} from '@ionic/react';\nimport TodoNewComp from './todo.new.component';\nimport TodoListItemComp from './Todo.listitem.component';\nimport { useTodosCollectionFacade } from './hooks/todos.hook';\nimport './todos.page.css';\nimport HeaderWithProgress from '../../components/HeaderWithProgress';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { capitalize } from '../../utils';\nimport { getDefaultProject } from '../../modules/data/utilsData';\nimport { authService } from '../../modules/auth/authService';\nimport ulog from 'ulog';\n\nconst log = ulog('todo');\n\n\nconst TodosPage  = () => {\n\n  const project = getDefaultProject(authService.userid);\n  const location = useLocation();\n  \n\n  let list, tag;\n  const params = useParams();\n  log.info(params, location);\n  if(location.pathname.startsWith('/todos/tag/')){\n   tag = params['tag']\n  }\n  else {\n    list = params['list']\n  }\n\n  const [state, dataFunc] = useTodosCollectionFacade(project.id, list, tag)\n  const { docs, selectedTodo, tagDocs } = state;\n\n  const printTitle = ():string => {\n    if(state.list){\n      return 'Todos: ' + capitalize(state.list.name);\n    }\n    return 'Todos';\n  }\n\n\n  return (\n    <IonPage>\n      <HeaderWithProgress title={printTitle()} />\n      <IonContent id=\"todoContent\">\n        \n        <IonItem>  \n          <TodoNewComp \n                       list = {state.list}\n                       tag = {undefined}\n                       projectId={project.id||''} \n                       saveFunc={dataFunc.save} />\n        </IonItem>\n        <div>\n          <IonButton  color={(state.doneTodos)? 'light':'success'} \n                      class=\"todoHeaderButtons\" \n                      onClick={() => {dataFunc.changeDoneFilter(false)}}\n                      fill=\"clear\">Active</IonButton>\n          <IonButton  color={(!state.doneTodos)? 'light':'success'} \n                      class=\"todoHeaderButtons\" \n                      onClick={() => {dataFunc.changeDoneFilter(true)}}\n                      fill=\"clear\">Finished</IonButton>\n        </div>\n        <IonList>\n            {docs.map(todo => (\n              <TodoListItemComp   todo={todo} \n                                  tagDocs={tagDocs}\n                                  lastChild = {false}\n                                  selectedTodo={selectedTodo}                                 \n                                  dataFunctions={dataFunc}\n                                  key={todo.id} />\n            ))}\n        </IonList>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default TodosPage;\n\n","import React from 'react';\nimport { IonHeader, IonToolbar, IonPage, IonTitle, IonContent, IonLabel } from '@ionic/react';\n\n\n\nconst IntroPage: React.FC = () => {\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Loading</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonLabel>Loading.....</IonLabel>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default IntroPage;\n","import { Subscription, BehaviorSubject } from \"rxjs\";\nimport { PartyProject, TYPE_PARTY, Challenge, ChallengeState } from \"./models\";\nimport { getPostRequest, post } from '../ajax/ajax';\nimport { env } from \"../../env\";\nimport { loadingService } from \"../loading/loadingService\";\nimport { toastService, ToastType } from \"../toast/toastService\";\nimport { dataService } from \"../data/dataService\";\nimport { waitMS, getChannelFromProjectId } from '../data/utilsData';\nimport { Msg, TYPE_MSG } from \"../messages/models\";\nimport moment from \"moment\";\nimport { saveIntoDocList } from \"../../utils\";\nimport ulog from 'ulog';\nimport { authService } from \"../auth/authService\";\n\nconst log = ulog('parties');\n\nexport interface PartyState {\n  docs: PartyProject[],\n}\n\nexport const initPartyState = {\n  docs: []\n}\n\nexport class PartyService {\n  private _subscription: Array<Subscription> = [];\n  \n  private _state: PartyState = initPartyState;\n  public state$ = new BehaviorSubject(this._state);\n  \n  async init(){\n    this.unsubscribe();\n\n\n    const sub1 = dataService.subscribeChanges().subscribe(doc => {\n      if(doc.type === 'party' && doc.secondaryType === 'project'){\n        const docs = saveIntoDocList(doc, this._state.docs);\n        this.state = {...this._state, ...{docs}};\n      }\n    });\n    this._subscription.push(sub1);\n    const docs = await dataService.queryByProperty('secondaryType', 'equals', 'project', TYPE_PARTY);\n    this.state = {...this._state , ...{docs}};\n\n\n  }\n\n  /*\n    Rights, each digit represents different right\n    0.  0 - Not admin 1- Admin, can change everything\n    1.  (Project item) 0 - can't see, 1 - can see, 2 - can edit\n    2.  (Project children) 0 - can't see, 1 - can see own, 2 - can see all items\n    3.  (Project children edit) 0 -can't edit, 1 can edit/make own, 2 can edit all \n  */\n  public async addUser(id:string, party: PartyProject) {\n    try {\n      const res = await post(getPostRequest(env.AUTH_API_URL +'/channels/sendAddMemberRequest',\n                      { token: authService.getToken(), \n                        channelid: getChannelFromProjectId(party.id),\n                        id: id,\n                        rights: '0121' //see all, edit own items \n                      }), \n                      true, 'Adding member, please wait');\n\n      if(!res.success){\n        return toastService.printServerErrors(res);\n      }\n\n      toastService.showMessage('Member invitation sent', ToastType.success);\n      waitMS(3000);\n      dataService.addSyncCall$.next();\n    }\n    catch (e) {\n      log.error(e);\n    }\n    \n  }\n\n  public saveParty(partyProject: PartyProject){\n    if (!partyProject.id) {\n      this._createParty(partyProject);\n    }\n  }\n\n  //make new party ajax\n  private async _createParty(partyProject: PartyProject) {\n    log.info('Saving party Project::: ', partyProject);\n    loadingService.showLoading('Creating party, please wait, ' +\n                'internet connection required');\n    const res = await dataService.saveNewProject(partyProject, TYPE_PARTY);\n    if(!res.success){\n      return toastService.printServerErrors(res);\n    } \n    loadingService.hideLoading();\n  }\n\n  public saveChallenge(challenge:Challenge, party:PartyProject){\n    if(!challenge.id) {\n      this._createChallenge(challenge, party);\n    }\n  }\n\n  private async _createChallenge(challenge:Challenge, partyProject: PartyProject) {\n    log.info('Saving System Doc::: ', partyProject);\n    loadingService.showLoading('Adding Challenge, please wait, ' +\n                'internet connection required');\n    const res = await dataService.saveSystemDoc(challenge,partyProject, TYPE_PARTY);\n    if(!res.success){\n      return toastService.printServerErrors(res);\n    }\n    loadingService.hideLoading();\n  }\n\n\n  public async acceptPartyInvitation(msg:Msg){\n    //lets send a request\n    try {\n      const res = await post(getPostRequest(env.AUTH_API_URL +'/channels/acceptChannelInvitation',\n                      { token: authService.getToken(), msgId: msg.id,}, {} ), \n                      true, 'Accept Reply sent, waiting for reply.');\n      if(!res.success){\n        return toastService.printServerErrors(res);\n      }\n\n      toastService.showMessage('Pary Membership request sent. Please wait for app update.', ToastType.success);\n      await waitMS(2000);\n      dataService.addSyncCall$.next();\n      msg.replied = {accepted: true, date: Date.now()};\n      dataService.save(msg, TYPE_MSG);\n    }\n    catch (e) {\n      log.error(e);\n    }\n  }\n\n  public async acceptFriendInvitation(msg:Msg){\n    //lets send a request\n    try {\n      const res = await post(getPostRequest(env.AUTH_API_URL +'/social/acceptFriendInvitation',\n                      { token: authService.getToken(), msgId: msg.id,}, {} ), \n                      true, 'Accept Reply sent, waiting for reply.');\n      if(!res.success){\n        return toastService.printServerErrors(res);\n      }\n\n      toastService.showMessage('Friend acceptance reply sent. Please wait for app update.', \n        ToastType.success);\n\n      await waitMS(2000);\n\n      dataService.addSyncCall$.next();\n\n      msg.replied = {accepted: true, date: Date.now()};\n      dataService.save(msg, TYPE_MSG);\n    }\n    catch (e) {\n      log.error(e);\n    }\n  }\n\n  public async rejectPartyInviation(msg:Msg) {\n    const newMsg = {...msg, ...{replied:{accepted: false, date: Date.now()}}}\n    dataService.save(newMsg, TYPE_MSG);\n  }\n\n  public async rejectFriendInviation(msg:Msg) {\n    const newMsg = {...msg, ...{replied:{accepted: false, date: Date.now()}}}\n    dataService.save(newMsg, TYPE_MSG);\n  }\n\n  public async changeChallengeState(challengeid: string|undefined, state:ChallengeState){\n    if(!challengeid) throw new Error('Challengeid cannot be undefined');\n    try {\n      const res = await post(getPostRequest(env.AUTH_API_URL +'/habits/changeChallengeState',\n                      { token: authService.getToken(), \n                        challengeid, state}, {} ), \n                      true, 'Saving challenge, please wait.');\n      if(!res.success){\n        return toastService.printServerErrors(res);\n      }\n      await dataService.saveFromServer(res.data.doc, TYPE_PARTY);\n\n      toastService.showMessage('Challenge saved.', \n        ToastType.success);\n\n      await waitMS(2000);\n      dataService.addSyncCall$.next();\n      await waitMS(2000);\n      dataService.addSyncCall$.next();\n    }\n    catch (e) {\n      log.error(e);\n    }\n  }\n\n  public async submitChallengeActions(challengeid: string|undefined, value:number){\n    if(!challengeid) throw new Error('Challengeid cannot be undefined');\n    try {\n      const actions = [{date: moment().format(env.MOMENT_DATE_FORMAT), value}]\n      const res = await post(getPostRequest(env.AUTH_API_URL +'/habits/submitChallengeActions',\n                      { token: authService.getToken(), \n                        challengeid, actions}, {} ), \n                      true, 'Saving challenge, please wait.');\n      if(!res.success){\n        return toastService.printServerErrors(res);\n      }\n      log.trace(res);\n      \n      if(res.data && res.data.challenge)\n        dataService.saveFromServer(res.data.challenge, TYPE_PARTY);\n\n      if(res.data && res.data.rewards)\n        toastService.showMessage('You have recieved '+res.data.rewards+' points', \n          ToastType.success);\n      await waitMS(2000);\n      dataService.addSyncCall$.next();\n      await waitMS(2000);\n      dataService.addSyncCall$.next();\n    }\n    catch (e) {\n      log.error(e);\n    }\n  }\n\n  public async acceptChallenge(challenge:Challenge){\n    //lets send a request\n    try {\n      const res = await post(getPostRequest(env.AUTH_API_URL +'/habits/acceptChallenge',\n                      { token: authService.getToken(), challengeid: challenge.id}, {} ), \n                      true, 'Accept Reply sent, waiting for reply.');\n      if(!res.success){\n        return toastService.printServerErrors(res);\n      }\n\n      toastService.showMessage('Challenge acceptance request sent. Please wait for update.', \n        ToastType.success);\n      await waitMS(2000);\n      dataService.addSyncCall$.next();\n    }\n    catch (e) {\n      log.error(e);\n    }\n  }\n\n\n  public get state(): PartyState {\n    return this._state;\n  }\n  public set state(value: PartyState) {\n    console.log('State: ', value);\n    this._state = value;\n    this.state$.next(this._state);\n  }\n\n  public unsubscribe() {\n    if(!this) return;\n    this._subscription.forEach(sub => {\n      if(sub)\n        sub.unsubscribe();\n    });\n  }\n\n}\n\nexport const partyService = new PartyService();","import { Subscription, BehaviorSubject } from \"rxjs\";\nimport { getPostRequest, post } from '../ajax/ajax';\nimport { env } from \"../../env\";\nimport { authService } from '../auth/authService';\nimport { toastService, ToastType } from \"../toast/toastService\";\nimport { dataService } from \"../data/dataService\";\nimport { waitMS } from '../data/utilsData';\nimport { Friend } from \"./models\";\n\nexport interface SocialState {\n  friends: Friend[],\n}\n\nexport const initSocialState = {\n  friends: []\n}\n\n\n\nexport class SocialService {\n  private _subscription: Array<Subscription> = [];\n  private _userid = ''\n  private _state: SocialState = initSocialState;\n  public state$ = new BehaviorSubject(this._state);\n  \n  async init(userid){\n    if(userid === this._userid) return;\n    this._userid = userid;\n    this.unsubscribe();\n    this._init();\n  }\n\n  private async _init() {\n\n  }\n\n  public async addFriend(username?:string) {\n    try {\n      const res = await post(getPostRequest(env.AUTH_API_URL +'/social/sendAddFriendRequest',\n                      { token: authService.getToken(), \n                        username,\n                      }), \n                      true, 'Sending invitatin request, please wait');\n      if(!res.success){\n        return toastService.printServerErrors(res);\n      }\n\n      toastService.showMessage('Friend invitation sent', ToastType.success);\n\n      waitMS(3000);\n\n      dataService.addSyncCall$.next();\n    }\n    catch (e) {\n      console.log(e);\n    }\n    \n  }\n\n\n  public get state(): SocialState {\n    return this._state;\n  }\n  public set state(value: SocialState) {\n    this._state = value;\n    this.state$.next(this._state);\n  }\n\n\n\n  public unsubscribe() {\n    if(!this) return;\n    this._subscription.forEach(sub => {\n      if(sub)\n        sub.unsubscribe();\n    });\n  }\n\n}\n\nexport const socialService = new SocialService();","import React, { useReducer } from 'react';\nimport { IonCard, IonCardTitle, IonCardHeader, IonCardContent, IonList, IonItem, IonAlert, IonFooter, IonButton, IonLabel } from '@ionic/react';\nimport  ulog from 'ulog';\nimport { Friend } from '../models';\nimport { socialService } from '../social.service';\nconst log = ulog('social');\n\nexport interface FriendsState {\n  showAddModal: boolean,\n  friends: Friend[],\n}\n\n\nconst reducer = (state, action): FriendsState => {\n  switch(action.type) {\n    case 'showAddMemberModal':\n      return {...state, ...{showAddModal: true}};\n    case 'hideAddMemberModal':\n      return {...state, ...{showAddModal: false}};\n\n    default:\n      log.error('Action type is not a match');\n      return state;\n  }\n}\n\nconst FriendsListComponent = () => {\n  const [state, _dispatch] = useReducer(reducer, {\n    showAddModal: false,\n    friends: [],\n  })\n\n  const dispatch = (type: 'showAddMemberModal'|\n                          'hideAddMemberModal', \n                    data:any = {}) => {\n    _dispatch({type, data});\n  }\n\n  const addFriend = () => {\n    dispatch(\"showAddMemberModal\");\n    \n  }\n\n  const hideAddUser = () => {\n    dispatch('hideAddMemberModal');\n  }\n\n  return (\n    <IonCard>\n      <IonCardHeader>\n        <IonCardTitle>Friends</IonCardTitle>\n      </IonCardHeader>\n      <IonCardContent>\n        <IonList>\n            {state.friends.map(member => (\n              <IonItem  button \n                        key={member.id}\n                        onClick={() => {}}>\n              <IonLabel>\n                {member.username}\n              </IonLabel>\n            </IonItem>\n            ))}\n        </IonList>\n        \n      </IonCardContent>\n        <IonFooter>\n          <IonButton onClick={()=>addFriend()} fill=\"clear\">Add Friend</IonButton>\n        </IonFooter>\n      <IonAlert \n        isOpen={state.showAddModal}\n        onDidDismiss={() => hideAddUser()}\n        header=\"Friend's Username:\"\n        inputs={[\n          {\n            name: 'username',\n            type: 'text',\n            id: 'username',\n\n\n          }\n        ]}\n        buttons={[\n          {\n            text: 'Cancel',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: () => {\n              hideAddUser();\n            }\n          },\n          {\n            text: 'Invite User',\n            handler: (data) => {\n              socialService.addFriend(data.username);\n              hideAddUser();\n            }\n          }\n        ]}\n      />\n    </IonCard>\n  )\n\n}\nexport default FriendsListComponent;","import React, { useReducer, useEffect } from 'react';\nimport { IonCard, IonCardTitle, IonCardHeader, IonCardContent, IonList, IonItem, IonLabel, IonAvatar, IonIcon, IonText, IonButton } from '@ionic/react';\nimport  ulog from 'ulog';\nimport { Msg } from '../../messages/models';\nimport { dataService } from '../../data/dataService';\nimport { TYPE_MSG } from '../models';\nimport { mail, personAdd, happy, sad, peopleCircle } from 'ionicons/icons';\nimport { printDateRelative, saveIntoArray } from '../../../utils';\nimport { partyService } from '../../parties/party.service';\nimport { COLOR_SUCCESS, COLOR_WARNING } from '../../../colors';\nconst log = ulog('messages');\n\nexport interface MessagesState {\n  messages: Msg[],\n}\n\n\nconst reducer = (state, {type, payload}): MessagesState => {\n  switch(type) {\n    case 'setMessages':\n      return {...state, ...{messages: payload}};\n      case 'updateMessage':\n        return {...state, ...{messages: saveIntoArray(payload, state.messages)}};\n    default:\n      log.error('Action type is not a match');\n      return state;\n  }\n}\n\nconst MessagesListComponent = ({channel}:{channel:string}) => {\n  const [state, _dispatch] = useReducer(reducer, {\n    messages: [],\n  })\n\n  useEffect(() => {\n    loadMsgs()\n    const sub = dataService.subscribeChannelTypeChanges(channel, TYPE_MSG)\n                    .subscribe(doc => {\n                        log.info(doc);\n                        dispatch('updateMessage', doc);\n                    });\n    return () => {\n      sub.unsubscribe();\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [channel])\n\n  const dispatch = (type: 'setMessages'|\n                          'updateMessage', \n                    payload:any = {}) => {\n    _dispatch({type, payload});\n  }\n\n  const loadMsgs = async () => {\n    log.info('Get all by project, type', channel, TYPE_MSG);\n    const msgs = await dataService.getAllByChannel(channel, TYPE_MSG);\n    dispatch('setMessages', msgs.sort((a,b)=>{\n      if(a.updated < b.updated) return 1;\n      return -1;\n    }))\n    log.info(msgs, channel);\n  }\n\n  const printMessageIcon = (msg) => {\n    if(msg.messageType === 'event'){\n      return <IonIcon icon={mail}  slot=\"start\" />\n    }\n    else if(msg.messageType === 'channelinvite') {\n      return <IonIcon icon={peopleCircle}  slot=\"start\" />\n    }\n    else if(msg.messageType === 'friendinvite') {\n      return <IonIcon icon={personAdd}  slot=\"start\" />\n    }\n  }\n\n  const printReplyStatus = (msg:Msg) => {\n    if((msg.messageType === 'channelinvite' || msg.messageType === 'friendinvite')\n        && msg.replied !== undefined) {\n      if(msg.replied) {\n        return <IonIcon icon={happy} size='large' \n                        slot=\"end\"\n                        color={COLOR_SUCCESS} />\n      }\n      else {\n        return <IonIcon icon={sad} size='large' \n                        slot=\"end\"\n                        color={COLOR_WARNING} />\n      }\n    }\n  }\n\n  const printClubRequestAcceptRejectButtons = (msg:Msg) => {\n    if(msg.messageType === 'channelinvite' && msg.replied === undefined){\n      return (\n        <div>\n          <IonButton onClick={() => partyService.acceptPartyInvitation(msg)} >\n            Accept</IonButton>\n          <IonButton onClick={() => partyService.rejectPartyInviation(msg)}> \n            Reject</IonButton>\n        </div>\n      )\n    }\n  }\n\n  const printFriendRequestAcceptRejectButtons = (msg:Msg) => {\n    if(msg.messageType === 'friendinvite' && msg.replied === undefined){\n      return (\n        <div>\n          <IonButton onClick={() => partyService.acceptFriendInvitation(msg)} >\n            Accept</IonButton>\n          <IonButton onClick={() => partyService.rejectFriendInviation(msg)}> \n            Reject</IonButton>\n        </div>\n      )\n    }\n  }\n\n  const printMessage = (msg) => {\n    if(msg.messageType === 'event'){\n      return <IonItem  button \n                key={msg.id}\n                onClick={() => {}}>\n        {printMessageIcon(msg)}\n        <IonLabel className=\"ion-text-wrap\">\n          <h3>{msg.message}</h3>\n          <IonText color=\"secondary\">\n              <p>{printDateRelative(msg.updated)}</p>\n          </IonText>\n        </IonLabel>\n      </IonItem>\n    }\n    else if(msg.messageType === 'channelinvite') {\n      return <IonItem  button \n                key={msg.id}\n                onClick={() => {}}>\n        {printMessageIcon(msg)}\n        <IonLabel className=\"ion-text-wrap\">\n          <h2>{msg.from} has invited you to join his club, \n          <strong>{msg.data.name}</strong></h2>\n          <IonText  color=\"secondary\">\n            {printDateRelative(msg.updated)}\n          </IonText>\n          <p>\n            {printClubRequestAcceptRejectButtons(msg)}\n          </p>\n          \n        </IonLabel>\n        {printReplyStatus(msg)}\n      </IonItem>\n    }\n    else if(msg.messageType === 'friendinvite') {\n      return <IonItem  button \n                key={msg.id}\n                onClick={() => {}}>\n        {printMessageIcon(msg)}\n        <IonLabel className=\"ion-text-wrap\">\n            <h2>You have received friend request from \n            <strong> {msg.from}</strong></h2>\n            <IonText  color=\"secondary\">\n              {printDateRelative(msg.updated)}\n            </IonText>\n            <p>\n              {printFriendRequestAcceptRejectButtons(msg)}\n            </p>\n        </IonLabel>\n        {printReplyStatus(msg)}\n      </IonItem>\n    }                        \n  }\n\n\n  return (\n    <IonCard>\n      <IonCardHeader>\n        <IonCardTitle>Messages</IonCardTitle>\n      </IonCardHeader>\n      <IonCardContent>\n        <IonList>\n            {state.messages.map(msg=> printMessage(msg))}\n        </IonList>\n        \n      </IonCardContent>\n    </IonCard>\n  )\n\n}\nexport default MessagesListComponent;","export const COLOR_PRIMARY = 'primary';\nexport const COLOR_SECONDARY = 'secondary';\nexport const COLOR_TERTIARY = 'tertiary';\nexport const COLOR_SUCCESS = 'success';\nexport const COLOR_WARNING = 'warning';\nexport const COLOR_DANGER = 'danger';\nexport const COLOR_LIGHT = 'light';\nexport const COLOR_MEDIUM = 'medium';\nexport const COLOR_DARK = 'dark';","import {\n  IonPage,\n  IonContent} from '@ionic/react';\nimport React, { useReducer, useEffect } from 'react';\nimport './Home.css';\nimport HeaderWithProgress from '../components/HeaderWithProgress';\nimport FriendsListComponent from '../modules/social/components/Friends.list.component';\nimport MessagesListComponent from '../modules/messages/components/Messages.list.component';\nimport ulog from 'ulog';\nimport { generateUserChannelId } from '../modules/data/utilsData';\nimport { authService } from '../modules/auth/authService';\n\nconst log = ulog('home');\n\n\nexport interface HomeState {\n  userid: string;\n}\n\nconst reducer = (state, {type, payload}:{type:string, payload:any}): HomeState => {\n  switch(type) {\n    case 'setUserid':\n      return {...state, ...{userid: payload}};\n    default:\n      log.error('Action Type is incorrect, default called', type, payload);\n      return state;\n  }\n}\n\nconst Home: React.FC = () => {\n\n  const [state, _dispatch] = useReducer(reducer, {\n    userid:''\n  })\n\n  const dispatch = (type:'setUserid', \n                    payload: any = {}) => {\n    _dispatch({type, payload});\n  }\n\n\n  useEffect(() => {\n    const sub = authService.username$.subscribe(() => {\n      log.info('Userid update, ', authService.userid);\n      dispatch('setUserid', authService.userid);\n    });\n    log.info('HOME, ', authService.userid);\n    dispatch('setUserid', authService.userid);\n    log.info('Home State', authService.userid);\n    return () => {\n      sub.unsubscribe();\n    };\n  }, [])\n\n  return (\n    <IonPage>\n      <HeaderWithProgress title=\"HabitVille\" />\n      <IonContent >\n        <FriendsListComponent />\n        <MessagesListComponent channel={generateUserChannelId(state.userid)} />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Home;\n\n","import {\n  IonPage,\n  IonContent,\n  IonHeader,\n  IonTitle,\n  IonToolbar} from '@ionic/react';\nimport React, {  } from 'react';\n\n\nconst NotFound: React.FC = () => {\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>habits</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent >\n        <div style={{padding:'20px'}}>\n          This page does not exist\n        </div>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default NotFound;\n\n","import React from 'react'\nimport {  IonInput, IonLabel, IonItem,\n  IonNote, IonText } from '@ionic/react';\n\n\nconst MyInput = ({data, updateFunction}) => {\n\n\n\n  //const [_data, setData] = useState<FormValueItem>(data); \n\n  /*\n  useEffect(() => {\n    props.attachToForm({name:props.name, value: props.value});\n\n    return props.detachFromForm({name:props.name, value:props.value});\n  },[props]);\n  */\n\n  //console.log(\"MY Input DATA: \", data);\n\n  const handleChange = (event) => {\n    updateFunction({...data, ...{value: event.target.value, dirty: true}});\n  };\n\n  const handleBlur = (event) => {\n    if(data.dirty === true) return;\n    updateFunction({...data, ...{value: event.target.value, dirty: true}});\n  }\n\n  const printErrors = () => {\n    if(data.dirty){\n      const errors =data.errors.map(m => (\n        <IonNote key={m} color=\"danger\">{m}</IonNote>\n      ))\n      return errors;\n    }\n  }\n\n\n  return (\n    <IonItem>\n      <IonLabel position=\"stacked\">\n        {data.displayName}\n        { data.hasValidation?(\n          <IonText color=\"danger\">*</IonText>\n        ):null}\n      </IonLabel>\n      <IonInput \n        name={data.id}\n        value={data.value}\n        type={data.type}\n        onIonBlur={handleBlur}\n        onIonChange={handleChange}></IonInput>\n        {data.messages.map(m => (\n          <IonNote key={m}>{m}</IonNote>\n        ))}\n        {printErrors()}\n    </IonItem>\n  )\n}\n\nexport default MyInput;","import React, { useEffect, useState } from 'react'\nimport MyInput from './myInput';\nimport { saveIntoArray, findById } from '../../utils';\nimport { IonButton } from '@ionic/react';\nimport validator from 'validator';\n\n\n// use to generate form, usually from outside form passed into here\n// so far we can use, ones that have stars have been tested\n// \"text\", \"password\", \"email\", \"number\", \"search\", \"tel\", and \"url\"\nexport interface FormItem { \n  id: string;\n  displayName?: string;\n  type: string;\n  messages?: string[];\n  validators?: any[];  \n  default?: any;\n}\n\nexport interface ValidatorItem {\n  type: string;\n  message?: string|null;\n  options?: any;\n}\n\n\n// use to hold form state\nexport interface FormValueItem {\n  id: string;\n  displayName: string;\n  type: string;\n  value: string;\n  messages: string[];\n  errors: string[];\n  dirty: boolean;\n  hasValidation:boolean;\n  //status: number; //0: untouched, 1: valid, 2: not valid\n}\n\nexport interface OptionsItem {\n  submitButtonText: string;\n}\n\nexport const defaultOptions:OptionsItem = {\n  submitButtonText: \"Submit\",\n}\n\nexport const getFormOptions = (settings:{}) => {\n  return {...defaultOptions, ...settings};\n}\n\nexport interface Props {\n  items: FormItem[],\n  submitFunction: Function,\n  options?: OptionsItem\n}\n\nexport interface State {\n  items: FormValueItem[],\n  valid: boolean\n}\n\nexport function getValidator(type:string, options:any = null, message:string|null = null):ValidatorItem {\n  return {type, options, message};\n}\n\n\n\nconst MyForm = (props:Props) => {\n  const submitFunction = props.submitFunction;\n  const options = props.options|| defaultOptions;\n\n  const [state, setState] = useState<State>({items:[], valid:false});\n\n  useEffect(() => {\n    initForm(props.items);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[props.items]);\n\n\n  const initForm = (items) => {\n    let model: FormValueItem[] = [];\n    // go thourgh props and generate our model from schema;\n    if(items) { //no schema, do nothing\n      items.forEach((item:FormItem) => {\n        let messages = item.messages;\n        \n        console.log(typeof(messages));\n        if(typeof(messages) === 'string'){\n          console.log('Messages is string');\n        }\n        else if(Array.isArray(messages)){\n          console.log('messages array');\n        }\n        else {\n          messages = [];\n        }\n\n        model.push(validateItem({\n            id: item.id,\n            displayName: item.displayName || item.id, \n            type: item.type,\n            value: item.default||'', \n            messages,\n            errors: [],\n            dirty:false,\n            hasValidation: (Array.isArray(item.validators) && item.validators.length>0)\n        }));\n      });\n      setState({items: model, valid: validateForm(model)});\n      //console.log(state);\n    }\n  }\n\n  //const updateItem = (id:string, displayName: string, type: string, value:any, messages:string[], hasValidation:boolean, touched:boolean) => {\n  const updateItem = (item:FormValueItem) => {\n    //console.log('Update Item, ', item);\n    const items = saveIntoArray(validateItem(item), state.items, 'id')\n    setState({\n      items: items,\n      valid: validateForm(items)\n    });\n  }\n\n\n\n  const validateItem = (item:FormValueItem): FormValueItem => {\n    const errors: string[] = validate(item.id, item.value);\n    //console.log(item)\n    return {...item, ...{errors}}\n  }\n\n  const validate = (id:string, value:any): string[] => {\n    //console.log(typeof(value));\n\n    if(typeof(value) !== 'string') return [];\n    \n    const item:FormItem = findById(id, props.items, 'id');\n    if(!item.validators)\n      item.validators = [];\n\n    const messages: string[] = [];\n    item.validators.forEach((val:ValidatorItem) => {\n      if(val.type === 'isEmpty') {\n        if(validator.isEmpty(value)){\n          messages.push(val.message || 'Value cannot be empty')\n        }\n      }\n      if(val.type === 'isLength'){\n        if(!validator.isLength(value, val.options)){\n          messages.push(val.message || 'Value length is not valid');\n        }\n      }\n      if(val.type === 'isEmail'){\n        if(!validator.isEmail(value, val.options)){\n          messages.push(val.message || 'Valid Email required');\n        }\n      }\n    });\n\n    //lastly check the whole form\n\n    //if(messages.length === 0)\n    //  validateForm();\n\n    return messages;\n  }\n\n\n  const submit = () => {\n    const form = {};\n    state.items.forEach(item => {\n      form[item.id] = { value: item.value };\n    });\n    submitFunction(form);\n    console.log(state);\n  }\n\n  const validateForm = (items = state.items) => {\n    let errors = 0;\n    items.forEach(item => {\n      errors += item.errors.length;\n    });\n\n    return errors === 0;\n  }\n  \n\n  return (\n    <div>\n        { Object.values(state.items).map((i) => (\n          <MyInput key={i.id} data={i} updateFunction={updateItem} />\n        ))}\n          <IonButton  \n            key={'submitButton'}\n            onClick={submit} \n            disabled={!state.valid}\n            color=\"primary\">{options.submitButtonText}</IonButton>\n    </div>\n  )\n\n};\n\nexport default MyForm;\n\n\n\n/*\n  const attachToForm = (component) => {\n    setInputs({...inputs, ...{[component.props.name]: component}});\n    setModel({...model, ...{[component.props.name]: component.state.value}});\n  };\n\n  const detachFromForm = (component) => {\n    const i = Object.assign({}, inputs);\n    delete i[component.props.name]\n    setInputs(i);\n\n    const m = Object.assign({}, model);\n    delete m[component.props.name];\n    setModel(m);\n  }\n\n  const updateModel = () => {\n    const m = Object.assign({}, model);\n    Object.keys(inputs).forEach((name) => {\n      m[name] = inputs[name].state.value;\n    });\n\n    setModel(m);\n  }\n\n  const submit = (event) => {\n    event.preventDefault();\n    updateModel();\n    console.log(model);\n  }\n\n  const getElement = (type) => {\n    if(type === 'string'){\n      return (\n        <div>type</div>\n      )\n    }\n  }\n*/","import React from 'react';\nimport { IonButton } from '@ionic/react';\nimport './auth.css';\nimport { useLocation, useHistory } from 'react-router-dom';\n\n\n\n\n\nconst AuthMenuComponent = ({page}: {page:string}) => {\n  const location = useLocation();\n  const history = useHistory();\n  \n  const push = (url:string) => {\n    if(location.pathname && url !== location.pathname){\n      history.push(url);\n    }\n  }\n\n  return (\n    <div className=\"authMenuParent\" >\n      <IonButton  onClick={() => push('/auth/login')}\n                  size=\"small\"  \n                  color={(page==='login')? 'success':'light'}\n                  fill=\"clear\">\n          Login\n      </IonButton>\n      <IonButton   onClick={() => push('/auth/register')}\n                  size=\"small\"  \n                  color={(page==='register')? 'success':'light'}\n                  fill=\"clear\">\n          Register\n      </IonButton>\n\n    </div>\n  );\n}\nexport default AuthMenuComponent;","import React from 'react';\nimport {\n  IonIcon,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonContent,\n  IonPage\n} from \"@ionic/react\";\nimport { logIn} from 'ionicons/icons';\nimport MyForm, { getValidator, FormItem, getFormOptions } from '../../forms/myForm';\nimport { authService } from '../authService';\nimport { useLocation, useHistory } from 'react-router';\nimport AuthMenuComponent from './auth.menu.component';\nimport './auth.css';\n\nconst LoginPage  = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const options = getFormOptions({\n    submitButtongText: \"Login\"\n  });\n  \n  const form: FormItem[] = [\n    {\n      id: 'id',\n      displayName: 'ID (Username or Email): ',\n      type: 'string',\n      validators: [\n        getValidator('isLength', {min:3, max:50}, 'ID needs to be between 3 to 50 characters')\n  \n      ],\n    },\n    {\n      id: 'password',\n      displayName: \"Password: \",\n      type: 'password',\n      validators: [\n        getValidator('isLength', {min:3, max:50}, 'ID needs to be between 3 to 50 characters')\n      ]\n    },\n    \n  ]\n  \n  const submit = async (form) => {\n    authService.loginAndRedirect(\n        form['id'].value, \n        form['password'].value,\n        history,\n        location);\n  }\n\n\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"primary\">\n          <IonTitle>Login</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <div style={{paddingTop:'50px'}} className=\"ion-text-center\">\n          <IonIcon icon={logIn} color=\"primary\" className=\"iconFormCenter\" />\n        </div>\n        <AuthMenuComponent page=\"login\" />\n        <div style={{padding:'20px'}}>\n          <MyForm  items={form} options={options} submitFunction={submit} /> \n        </div>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default LoginPage;\n","import React, {  } from 'react';\n\nimport {\n  IonIcon,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonContent,\n  IonPage\n} from \"@ionic/react\";\nimport { logIn} from 'ionicons/icons';\nimport MyForm, { getValidator, FormItem, getFormOptions } from '../../forms/myForm';\nimport { authService } from '../authService';\nimport { useLocation, useHistory } from 'react-router';\nimport AuthMenuComponent from './auth.menu.component';\nimport './auth.css';\n\nconst RegisterPage  = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const options = getFormOptions({\n    submitButtongText: \"Login\"\n  });\n  \n  const form: FormItem[] = [\n    {\n      id: 'username',\n      displayName: 'Username: ',\n      type: 'string',\n      validators: [\n        getValidator('isLength', {min:3, max:20}, 'Username needs to be between 3 to 20 characters')\n  \n      ],\n    },\n    {\n      id: 'email',\n      displayName: 'Email: ',\n      type: 'string',\n      validators: [\n        getValidator('isEmail',{}, 'Email is not valid')\n  \n      ],\n    },\n    {\n      id: 'password',\n      displayName: \"Password: \",\n      type: 'password',\n      validators: [\n        getValidator('isLength', {min:3, max:50}, 'Password needs to be between 3 to 50 characters')\n      ]\n    },\n    \n  ]\n  \n  const submit = async (form) => {\n    const res = await authService.register(\n                        form['username'].value, \n                        form['email'].value,\n                        form['password'].value);\n    if(res){\n      authService.loginAndRedirect(\n                        form['username'].value, \n                        form['password'].value,\n                        history,\n                        location)\n    }\n  }\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"primary\">\n          <IonTitle>Register</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <div style={{paddingTop:'50px'}} className=\"ion-text-center\">\n          <IonIcon  color=\"primary\"\n                    icon={logIn} \n                    className=\"iconFormCenter\" />\n        </div>\n        <AuthMenuComponent page=\"register\" />\n        <div style={{padding:'20px'}}>\n          <MyForm  items={form} options={options} submitFunction={submit} /> \n        </div>\n\n        \n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default RegisterPage;\n","import React, { FunctionComponent } from \"react\";\nimport { Route, Redirect, useLocation } from \"react-router-dom\";\nimport LoginPage from './components/login.page';\nimport RegisterPage from './components/register.page';\n\n\nconst UnauthenticatedRoute = ({ exact, path }: \n  { component: FunctionComponent<{}>, exact: boolean, path: string }) => {\n\n  \n  const location = useLocation();\n  // const history = useHistory();\n  // const params = useParams();\n  // const path = location.pathname;\n  \n  // console.log(\"Location:::: \", location);\n  // console.log('HISTORY:::: ', history);\n  // console.log('PARAMS:::: ', params);\n\n\n  const getRoute = () => {\n    if(location.pathname === '/auth/register'){\n      return <Route path={path} \n                    component={RegisterPage} \n                    exact={exact} />;\n    }\n    else if(location.pathname === '/auth/login'){\n      return <Route\n                path='/auth/login'\n                render={() => <LoginPage />}\n              />\n    }\n    else {\n      return <Redirect to={{\n              pathname: \"/auth/login\",\n              state: {prev: location.pathname}\n            }}/>;\n    }\n  }\n  \n\n  return (\n    getRoute()\n  );\n}\n\n\n\n\n\n/*\n\n\n\n\nconst  PrivateRoute = ({ component: Component, ...rest }) => {\n\n  const [authenticated] = useUserFacade();\n  //const location = useLocation();\n\n  //console.log(location);\n\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        authenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: \"/auth/login\"}}\n          />\n        )\n      }\n    />\n  );\n}\n*/\nexport default UnauthenticatedRoute;","\nimport { Habit, habitStage, TYPE_HABBIT } from './models';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { dataService } from '../../modules/data/dataService';\nimport { saveIntoArray, isThisUserProject } from '../../modules/data/utilsData';\nimport { ProjectItem } from '../../modules/data/models';\nimport { gamifyService } from '../../modules/gamify/gamifyService';\nimport _ from 'lodash';\nimport { authService } from '../../modules/auth/authService';\nimport ulog from 'ulog';\n\nconst log = ulog('habits');\n\nexport interface habitsState {\n  selected: Habit | null,\n  habits: Habit[],\n  stageFilter: habitStage\n}\n\nexport const getInitHabitsState = (): habitsState => {\n  return {\n    selected: null,\n    habits: [],\n    stageFilter: habitStage.current\n  }\n}\n\nexport class HabitsService {\n\n  // @ts-ignore:  we force init later on in init function\n  private _project: ProjectItem;\n  public getProject():ProjectItem {return this._project}\n  private _state: habitsState = getInitHabitsState();\n\n  public state$ = new BehaviorSubject(this._state);\n\n  private _docs: Habit[] = [];\n\n  public docs$ = new BehaviorSubject(this._docs);\n\n  private _subscription: Array<Subscription> = [];\n\n  public init(project: ProjectItem) {\n    const dataSub = dataService.getReadySub().subscribe(async (ready) => {\n      if (!ready) return;\n      const equals = _.isEqual(project, this._project);\n      if (equals) return;\n\n      await this._init(project);\n\n      dataSub.unsubscribe();\n    });\n\n  }\n\n  async _init(project: ProjectItem) {\n    if (this._project && this._project.id === project.id) return;\n    this._project = project;\n    this._docs = await dataService.getAllByProject(project.id, TYPE_HABBIT);\n    this.filterhabits();\n\n    //manage changes\n\n    const sub = dataService.subscribeProjectTypeChanges(project.id, TYPE_HABBIT)\n      .subscribe(doc => {\n        if (doc.deleted)\n          this._docs = this._docs.filter(d => d.id !== doc.id);\n        else {\n          this._docs = saveIntoArray(doc, this._docs);\n        }\n        this.filterhabits();\n        //TODO: need to optimize this, maybe start using the view query, see bottom of file\n      });\n    this._subscription.push(sub);\n  }\n\n\n\n  private filterhabits() {\n    const filtered = this._docs.filter(doc => this.filterFunction(doc));\n    this.state = { ...this._state, ...{ habits: filtered } };\n  }\n\n  private filterFunction(doc: Habit) {\n    return (doc.stage === this._state.stageFilter)\n  }\n\n\n\n  public get state(): habitsState {\n    return this._state;\n  }\n  public set state(value: habitsState) {\n    this._state = value;\n    this.state$.next(this._state);\n}\n\n  public get docs(): Habit[] {\n    return this._docs;\n  }\n  public set docs(value: Habit[]) {\n    this._docs = value;\n    this.docs$.next(this._docs);\n  }\n\n\n\n  public save(doc: Habit) {\n    log.info(\"Save: \", doc, this._project, TYPE_HABBIT);\n\n    //check if its new, no id, its noew\n    if (!doc.id) {\n      if(isThisUserProject(this._project.id, authService.getUser().id)){\n        doc = Object.assign(gamifyService.calculateNewHabitRewards(doc));\n        return dataService.save({ ...{ done: false }, ...doc }, TYPE_HABBIT, { projectid: this._project.id });\n      }\n      else {\n\n      }\n    }\n    else\n      dataService.save({ ...{ done: false }, ...doc }, TYPE_HABBIT, { projectid: this._project.id });\n  }\n\n  public remove(id: string) {\n    dataService.remove(id, TYPE_HABBIT);\n  }\n\n  public select(doc: Habit) {\n    this.state = { ...this._state, ...{ selected: doc } };\n  }\n\n  public changeStageFilter(stage: habitStage) {\n    if (stage === this._state.stageFilter) return;\n    this._state = { ...this._state, ...{ stageFilter: stage } };\n    this.filterhabits();\n\n  }\n\n\n  public unsubscribe() {\n    if (!this) return;\n    this._subscription.forEach(sub => {\n      if (sub)\n        sub.unsubscribe();\n    });\n  }\n\n}\n","import React, { useState, useEffect } from 'react';\nimport { IonItem, IonCard, IonCardHeader, IonCardTitle, IonIcon, IonFab, IonFabButton, IonCardContent, IonGrid, IonRow, IonCol, IonNote, IonBadge, IonLabel } from '@ionic/react';\nimport { COLOR_LIGHT, COLOR_DARK, COLOR_SUCCESS, COLOR_DANGER } from '../../colors';\nimport { radioButtonOff, checkmarkCircleOutline, cog } from '../../../node_modules/ionicons/icons';\nimport moment from 'moment';\nimport { Habit, MOMENT_DATE_FORMAT, HabitProgress } from './models';\nimport { habitDataFunctions } from './hooks/habits.hook';\nimport './Habit.listitem.component.css';\nimport { saveIntoArray, getIndexById } from '../../modules/data/utilsData';\nimport { calculateCurrentStreak } from './utilsHabits';\nimport { gamifyService } from '../../modules/gamify/gamifyService';\n\n\n\nconst HabitListItemComponent = ({habit, dataFunctions, showEditModalFunction}:\n  {habit:Habit, dataFunctions: habitDataFunctions, showEditModalFunction:{(habit: Habit)}}) => {\n\n  const [doc, setDoc] = useState(habit);\n\n  useEffect(() => {\n    setDoc(habit);\n  }, [habit])\n\n\n  const printDate = (index:number, active = false) => {\n    const day =  moment().subtract(index, 'day');\n    if(active)\n    {\n      return (\n        <IonLabel\n          color=\"primary\"\n        >\n        {day.format('DD')} <br /> {day.format('dd')}\n        </IonLabel>)\n    }\n    return (\n      <>\n      {day.format('DD')} <br /> {day.format('dd')}\n      </>)\n  }\n\n  const printGoal = () => {\n    if(doc.regularityInterval === 'day'){\n      return (\n        <IonItem>\n              <IonNote>\n                Remember, you promised that you will repeat \n                this habit <strong>every day</strong>.\n              </IonNote>\n        </IonItem>\n      )\n    }\n    \n    return (\n      <IonItem>\n        <IonNote>\n          Remember you promised that you will repeat this habit \n          <strong> {doc.regularityValue} times {doc.regularityInterval}</strong>\n        </IonNote>\n      </IonItem>\n    )\n  }\n\n\n\n\n  const printDayIcon = (index: number, active=false) => {\n    const day = moment().subtract(index, 'day');\n    let progress = doc.progress.find(obj => day.format(MOMENT_DATE_FORMAT) === obj.date);\n    if(!progress)\n      progress = {date: day.format(MOMENT_DATE_FORMAT), value: 0};\n\n    \n    if(active){\n      //TODO: find a way to caluclate if buffer can be used for the ones not done\n      // @ts-ignore: undefined, but we are forsing assignment just before this\n      return (<IonIcon  onClick={() => updatehabit(index, progress)}\n                      size=\"large\" \n                      key={index}\n                      color={ progress.value > 0? COLOR_SUCCESS:  COLOR_DARK} \n                      icon={progress.value > 0? checkmarkCircleOutline : radioButtonOff} />)\n    }\n    // @ts-ignore: undefined, but we are forsing assignment just before this\n    return (<IonIcon  \n    size=\"large\" \n    key={index}\n    color={ progress.value > 0? COLOR_SUCCESS:  COLOR_DANGER} \n    icon={progress.value > 0? checkmarkCircleOutline : radioButtonOff} />)\n\n    \n  }\n\n  const updatehabit = (index: number, progress:{date:string, value:number}) => {\n    let newProgress: HabitProgress = {date: progress.date, value: (progress.value === 0)? 1: 0 }\n\n    const i = getIndexById(newProgress.date, doc.progress, 'date')\n    if(i !== -1) {\n      newProgress = {...doc.progress[i], ...newProgress }\n    }\n    const progresslist = saveIntoArray(newProgress, doc.progress, 'date');\n    const newDoc = gamifyService.calculateHabitProgressRewards(\n                    calculateCurrentStreak({...doc, ...{progress: progresslist}}), newProgress);\n    dataFunctions.save(newDoc);\n\n  }\n\n  const print = () => {\n    return (\n        <IonCard>\n          <IonCardHeader>\n            {/*<IonCardSubtitle>Card Subtitle</IonCardSubtitle>*/}\n            <IonCardTitle>{doc.name}</IonCardTitle>\n            <IonBadge class=\"habitBadge\" color=\"success\">{doc.currentStreak}</IonBadge>\n            <IonBadge class=\"habitBadge\" color=\"tertiary\">{doc.bestStreak}</IonBadge>\n          </IonCardHeader>\n          <IonItem>\n            <IonGrid>\n              <IonRow class=\"datecell\">\n                <IonCol>{printDate(6)}</IonCol>\n                <IonCol>{printDate(5)}</IonCol>\n                <IonCol>{printDate(4)}</IonCol>\n                <IonCol>{printDate(3)}</IonCol>\n                <IonCol>{printDate(2)}</IonCol>\n                <IonCol>{printDate(1)}</IonCol>\n                <IonCol>{printDate(0, true)}</IonCol>\n              </IonRow>\n              <IonRow class=\"datecell\">\n                <IonCol>{printDayIcon(6)}</IonCol>\n                <IonCol>{printDayIcon(5)}</IonCol>\n                <IonCol>{printDayIcon(4)}</IonCol>\n                <IonCol>{printDayIcon(3)}</IonCol>\n                <IonCol>{printDayIcon(2)}</IonCol>\n                <IonCol>{printDayIcon(1)}</IonCol>\n                <IonCol>{printDayIcon(0, true)}</IonCol>\n              </IonRow>\n            </IonGrid>\n          </IonItem>\n          <IonCardContent>\n            {printGoal()}\n          </IonCardContent>\n          <IonFab horizontal=\"end\" vertical=\"bottom\" edge>\n            <IonFabButton size=\"small\" color={COLOR_LIGHT} onClick={() => showEditModalFunction(doc)}>\n              <IonIcon size=\"large\" icon={cog} />\n            </IonFabButton>\n          </IonFab>\n        </IonCard>\n    );\n  }\n  \n  return print();\n};\n\nexport default HabitListItemComponent;\n\n","import React, { useState } from 'react';\nimport { IonItem, IonLabel, IonIcon, IonInput, IonTextarea, IonButton, IonHeader, IonTitle, IonToolbar, IonContent, IonFooter, IonButtons, IonSelect, IonSelectOption, IonRange, IonFab, IonFabButton, IonAlert, IonSegment, IonSegmentButton } from '@ionic/react';\nimport { trash } from '../../../node_modules/ionicons/icons';\nimport { Habit, habitIntervals, habitDifficulty, printDifficulty } from './models';\nimport { capitalize } from '../../utils';\nimport { COLOR_DANGER } from '../../colors';\n\n\n\ninterface habitState {\n  regularity: {\n    interval: habitIntervals,\n    min: number,\n    max: number,\n  }\n  doc: Habit,\n  showDeleteWarrning: boolean\n}\n\nconst getRegularityValues = (interval: habitIntervals) => {\n  switch (interval) {\n    case habitIntervals.day:\n      return {interval: interval, min:1, max: 1}\n    case habitIntervals.week:\n      return {interval: interval, min:1, max: 6}\n    case habitIntervals.month:\n      return {interval: interval, min:1, max: 25}\n  }\n}\n\nconst HabitAddComponent = ({habit, dismissFunc}:\n  {habit:Habit, dismissFunc: {(habit:Habit|null, action: 'save'|'remove'|'none')}}) => {\n  const getDefaultRegularityState: habitState = {\n    regularity: getRegularityValues(habit.regularityInterval),\n    doc: new Habit(),\n    showDeleteWarrning: false\n  }\n\n  const [state, setState] = useState<habitState>({...getDefaultRegularityState, ...{doc: habit}});\n\n  const handleChange = (e) => {\n    const newDoc = {...state.doc, ...{[e.target.name]:e.detail.value}}\n    const newState = {...state, ...{doc: newDoc}};\n    setState(newState);\n  }\n\n  const handlerRegularityValue = (e) => {\n    const newDoc = {...state.doc, ...{regularityValue: e.detail.value}};\n    setState({...state, ...{doc: newDoc}});\n  }\n\n  const handlerRegularityIntervalChange = (value) => {\n    value = value || 'day';\n    const newDoc = {...state.doc, ...{regularityInterval: value, regularityValue: 1}};\n    const newReg = {...state.regularity, ...getRegularityValues(value)};\n    setState({...state, ...{doc:newDoc, regularity: newReg}});\n  }\n\n  const printRegularityLabel = () => {\n\n    const times = (state.doc.regularityValue > 1)? ' times a ': ' time a ';\n    if(state.doc.regularityInterval === 'day'){\n      return 'I will repeat this habit every day.'\n    }\n    \n    return 'I will repeat this habit ' +state.doc.regularityValue + times + state.doc.regularityInterval\n  }\n\n  const handleDifficultyChange = (e) => {\n    const newDoc = {...state.doc, ...{difficulty: e.detail.value}};\n    setState({...state, ...{doc: newDoc}});\n  }\n\n  const printDifficultyLabel = (hab: habitDifficulty): string => {\n    switch(hab) {\n      case habitDifficulty.trivial:\n        return 'Easy peasy lemon squeezy';\n      case habitDifficulty.easy:\n        return 'Piece of Cake';\n      case habitDifficulty.medium:\n        return \"Let's Rock\";\n      case habitDifficulty.hard:\n        return 'No Pain, No Gain';\n      case habitDifficulty.extreme:\n        return 'Death Wish';\n    }\n  }\n\n  const showRemoveWarrning = () => {\n    setState({...state, ...{showDeleteWarrning: true}});\n  }\n\n  const hideRemoveWarrning = () => {\n    setState({...state, ...{showDeleteWarrning: false}});\n  }\n\n  const removehabit = () => {\n    hideRemoveWarrning();\n    dismissFunc(state.doc, 'remove');\n  }\n\n\n\n  const print = () => {\n      return (\n      <>\n        <IonHeader>\n          <IonToolbar>\n            {/*\n            <IonButtons slot=\"start\">\n              <IonButton> <IonIcon size=\"large\" icon={arrowBack} /></IonButton>\n            </IonButtons>\n            */}\n            <IonTitle>Add Habit</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <IonContent>\n          <IonItem>\n              <IonLabel position=\"floating\">Name</IonLabel>\n              <IonInput \n                  name=\"name\"\n                  placeholder=\"Read book, Go running ...\" \n                  onIonChange={handleChange}\n                  value={state.doc.name} />\n          </IonItem>\n          <IonItem>\n              <IonLabel position=\"floating\">Note</IonLabel>\n              <IonTextarea \n                  placeholder=\"Enter more information here, motivate yourself...\"\n                  name=\"note\"\n                  onIonChange={handleChange}\n                  value={state.doc.note}></IonTextarea>\n          </IonItem>\n          <IonItem>\n            <IonSegment value={state.doc.regularityInterval}\n                        onIonChange={(e) => handlerRegularityIntervalChange(e.detail.value)}>\n              <IonSegmentButton value=\"day\">\n                <IonLabel>Daily</IonLabel>\n              </IonSegmentButton>\n              <IonSegmentButton value=\"week\">\n                <IonLabel>Weekly</IonLabel>\n              </IonSegmentButton>\n              <IonSegmentButton value=\"month\">\n                <IonLabel>Monthly</IonLabel>\n              </IonSegmentButton>\n            </IonSegment>\n          </IonItem>\n\n          {(state.doc.regularityInterval !== 'day')? (\n            <>\n              <IonRange \n                    min={state.regularity.min}\n                    max={state.regularity.max}\n                    debounce={100}\n                    value={state.doc.regularityValue}\n                    onIonChange={handlerRegularityValue}\n                    color=\"secondary\" >\n                <IonLabel slot=\"start\">{state.regularity.min}</IonLabel>\n                <IonLabel slot=\"end\">{state.regularity.max}</IonLabel>\n              </IonRange>\n            </>\n          ) : (\n          <></> )}\n          <IonItem>\n            <IonLabel>{printRegularityLabel()}</IonLabel>\n          </IonItem>\n\n          <IonRange min={0} \n                    max={4} \n                    debounce={100}\n                    value={state.doc.difficulty}\n                    onIonChange={handleDifficultyChange}\n                    color=\"secondary\">\n              <IonLabel slot=\"start\">{capitalize(printDifficulty(habitDifficulty.trivial))}</IonLabel>\n              <IonLabel slot=\"end\">{capitalize(printDifficulty(habitDifficulty.extreme))}</IonLabel>\n          </IonRange>\n\n          <IonItem>\n            <IonLabel>{printDifficultyLabel(state.doc.difficulty)}</IonLabel>\n          </IonItem>\n        </IonContent> \n\n        <IonFooter>\n          <IonToolbar>\n            <IonTitle>\n              <IonButton onClick={() => dismissFunc(state.doc, 'save')}>Save</IonButton>\n              <IonButton onClick={() => dismissFunc(null, 'none')}>Cancel</IonButton>\n            </IonTitle>\n          </IonToolbar>\n        </IonFooter>\n        <IonFab horizontal=\"end\" vertical=\"bottom\" >\n          <IonFabButton size=\"small\" color={COLOR_DANGER} onClick={() => showRemoveWarrning()}>\n            <IonIcon size=\"large\" icon={trash} />\n          </IonFabButton>\n        </IonFab>\n        <IonAlert\n          isOpen={state.showDeleteWarrning}\n          onDidDismiss={() => hideRemoveWarrning}\n          header={'Warrning!!!'}\n          message={'Are you sure you want to <strong>delete</strong> this habit?'}\n          buttons={[\n            {\n              text: 'Cancel',\n              role: 'cancel',\n              cssClass: 'secondary',\n              \n            },\n            {\n              text: 'Yes Im Sure',\n              handler: () => removehabit()\n            }\n          ]}\n        />\n      </>\n      );\n  }\n\n  return print();\n};\n\nexport default HabitAddComponent;\n","import React, { useReducer } from 'react';\nimport {\n  IonPage,\n  IonContent,\n  IonList,\n  IonFabButton,\n  IonFab,\n  IonIcon,\n  IonModal} from '@ionic/react';\n\nimport { add } from '../../../node_modules/ionicons/icons';\nimport { useHabitsCollectionFacade } from './hooks/habits.hook';\nimport { Habit } from './models';\nimport HabitListItemComponent from './Habit.listitem.component';\nimport HabitAddComponent from './Habit.add.component';\nimport HeaderWithProgress from '../../components/HeaderWithProgress';\nimport { authService } from '../../modules/auth/authService';\nimport { getDefaultProject } from '../../modules/data/utilsData';\n\n\nexport interface habitPageState {\n  showModal: boolean,\n  modalHabit: Habit|null,\n}\n\nconst reducer = (state, action): habitPageState => {\n  switch(action.type) {\n    case 'showModal':\n      return {...state, ...{showModal: action.data.showModal, modalHabit: action.data.habit} }\n    case 'hideModal':\n      return state;\n    default:\n      return state;\n  }\n}\n\nexport function getAction(todo:'showModal', data = {}){\n  return {type:todo, data:data};\n}\n\n\nconst HabitsPage: React.FC = () => {\n  const [habitsState, dataFunc] = useHabitsCollectionFacade(getDefaultProject(authService.userid));\n  const [state, dispatch] = useReducer(reducer, {\n    showModal:false,\n    modalHabit: null,\n  })\n\n  const { habits } = habitsState;\n\n  const addhabit = (habit:Habit = new Habit()) => {\n    dispatch(getAction('showModal', {showModal: true, habit}));\n  }\n\n  const hidehabitModal = () => {\n    dispatch(getAction('showModal', {showModal: false, habit: null}));\n  }\n\n  const habitDismissFunc = (habit: Habit|null, action:'save'|'remove'|'none') => {\n    dispatch(getAction('showModal', {showModal: false, habit: null}));\n    if(action === 'save' && habit != null){\n      dataFunc.save(habit);\n    }\n    else if(action === 'remove' && habit != null && habit.id){\n      dataFunc.remove(habit.id);\n    }\n  }\n\n\n  return (\n    <IonPage>\n      <HeaderWithProgress title=\"Habits\" />\n      <IonContent>\n        \n      <IonList>\n        {habits.map(habit => (\n              <HabitListItemComponent\n                        habit={habit} \n                        dataFunctions={dataFunc}\n                        key={habit.id} \n                        showEditModalFunction={addhabit}\n              />\n        ))}\n      </IonList>\n      {state.showModal? (\n        <IonModal isOpen={state.showModal} onDidDismiss={() => hidehabitModal()}>\n        <HabitAddComponent habit={state.modalHabit||new Habit()} \n                            dismissFunc = {habitDismissFunc}  />\n        </IonModal>\n      ) : (\n        <></>\n      )}\n      \n\n      <IonFab vertical=\"top\" horizontal=\"end\" slot=\"fixed\" edge>\n        <IonFabButton onClick={()=> addhabit()}>\n          <IonIcon icon={add} />\n        </IonFabButton>\n      </IonFab>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default HabitsPage;\n\n","import { useEffect, useState, useRef } from 'react';\nimport { Subscription } from 'rxjs';\nimport { ProjectItem } from '../../../modules/data/models';\nimport { Habit, habitStage } from '../models';\nimport { habitsState, getInitHabitsState,  HabitsService } from '../habits.service';\nimport _ from 'lodash';\n\nexport interface habitDataFunctions {\n  save: {(doc: Habit)},\n  remove: {(id: string)},\n  select: {(doc: Habit)},\n  changeStageFilter: {(stage: habitStage)}\n}\n\n\n//more simpler then auth hook, just read data\nexport function useHabitsCollectionFacade(project: ProjectItem): \n                                        [habitsState, habitDataFunctions]{\n\n  const [state, setState] = useState(getInitHabitsState());\n\n  const habitsService = useRef(new HabitsService());\n  \n          \n  const dataFunctions = {\n    save: (doc: Habit) => {\n      habitsService.current.save(doc)\n    },\n    remove: (id) => habitsService.current.remove(id), //TODO: allow user to choose, sync or not to sync\n    select: (doc: Habit) => habitsService.current.select(doc),\n    changeStageFilter: (stage: habitStage) => habitsService.current.changeStageFilter(stage),\n  }\n\n  useEffect(() => {\n    if(_.isEqual(habitsService.current.getProject(), project)) \n        return;\n    habitsService.current.init(project)\n\n    return habitsService.current.unsubscribe;\n  }, [project])\n\n  useEffect(() => {\n    const subscriptions: Subscription[] = [\n      habitsService.current.state$.subscribe(state => {\n        setState(state);\n      })\n    ];\n    return () => { subscriptions.map(it => it.unsubscribe()) };\n  },[project]);\n\n\n  return [state, dataFunctions];\n}","import React, {  } from 'react';\nimport { IonHeader } from '@ionic/react';\n\n\n\n\nconst MenuHeaderWithProgress = () => {\n\n  \n  return (\n    <IonHeader className=\"menuHeaderWithAvatar\">\n      \n      <h1>Menu</h1>\n    </IonHeader>\n  )\n}\n\nexport default MenuHeaderWithProgress;","import React, { useState } from 'react';\nimport { IonInput } from '@ionic/react';\nimport { ProjectItem } from '../../modules/data/models';\nimport { generateCollectionId, getProjectChildId } from '../../modules/data/utilsData';\nimport { TYPE_TODO_LIST, TodoList } from './models';\nimport ulog from 'ulog';\nimport { todoService } from './todo.service';\n\nconst log = ulog('todo');\n\n\nconst ListAddInlineComponent = ({projectid}:{projectid: string}) => {\n\n  const [state, setState] = useState({name:''});\n\n  const setNewTitle = (e) => {\n    setState({name: e.detail.value});\n  }\n  \n  const onKeyPress = (e) => {\n    if(e.key === 'Enter'){\n      save();\n      setState({name: ''});\n    }\n  }\n\n  const save = async () => {\n    const id = generateCollectionId(projectid, TYPE_TODO_LIST, encodeURI(state.name));\n    const newList = new TodoList({\n      id,\n      name: state.name,\n      secondaryType: TYPE_TODO_LIST,\n      //folder??\n      project: getProjectChildId(projectid),\n    })\n    newList._new = true;\n\n    log.info('NEW TODO LIST::::::::::::::: ', newList)\n    const res = await todoService.saveList(newList);\n    log.info(res);\n  };\n\n  return (\n    <IonInput\n      className=\"new-todo\"\n      placeholder=\"Add new List?\"\n      onKeyPress={onKeyPress}\n      onIonChange={setNewTitle}\n      value={state.name}\n    />\n  )\n}\n\nexport default ListAddInlineComponent;","import React, { useState } from 'react'\nimport { IonItem } from '@ionic/react'\nimport Lottie from 'react-lottie';\nimport sun from '../../icons/sun.json';\nimport './todo.menu.css';\n\nexport const waitMS = (ms: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n};\n\nconst TodoMenuItemButtonComponet = ({name, color, actonFunc}:\n  {name: string, color:string, actonFunc:Function}) => {\n  \n  const [state, setState] = useState({isStopped:true, isPaused:true})\n  \n  \n  const defaultOptions = {\n    loop: true,\n    autoplay: true, \n    animationData: sun,\n    rendererSettings: {\n      clearCanvas: true,\n      scaleMode: 'noScale',\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  }; \n  \n  const actionHandler = async() => {\n    setState({isStopped:false, isPaused:false});\n    actonFunc();\n\n    await waitMS(1000);\n    setState({isStopped:true, isPaused:true});\n  }\n  \n  \n  \n  return (\n    <IonItem  button \n        onClick={() => actionHandler()}\n        color={color}  \n        routerLink={encodeURI('/todos/tag/today')} \n        routerDirection=\"none\"\n        lines=\"none\">\n    <div className =\"lottieicon\">\n      <Lottie  options={defaultOptions}\n          height={25}\n          width={25}\n          isStopped={state.isPaused}\n          isPaused={state.isStopped}/>\n    </div>\n    {name} \n</IonItem>\n  )\n}\n\nexport default TodoMenuItemButtonComponet","import React, { useReducer, useEffect } from 'react';\nimport ListAddInlineComponent from './list.inline.add.component';\nimport ulog from 'ulog';\nimport { TodoTag, TodoList, TYPE_TODO_LIST } from './models';\nimport { dataService } from '../../modules/data/dataService';\nimport { saveIntoArray } from '../../modules/data/utilsData';\nimport { authService } from '../../modules/auth/authService';\nimport { IonList, IonItem, IonLabel, IonItemDivider, IonItemGroup, IonItemSliding, IonItemOptions, IonItemOption, IonAlert, IonIcon } from '@ionic/react';\nimport { useLocation } from 'react-router';\nimport { todoService } from './todo.service';\nimport TodoMenuItemButtonComponet from './todo.menu.item';\n\nconst log = ulog('todo');\n\nconst initialState:{\n  tags:TodoTag[],\n  tagsOpen: boolean\n  lists:TodoList[],\n  openLists: string[],\n  showDeleteListAlert: boolean,\n  deleteList: TodoList,\n} = {\n  tags:[],\n  tagsOpen: false,\n  lists:[],\n  openLists:[],\n  showDeleteListAlert: false,\n  deleteList: new TodoList(),\n}\n\nconst reducer =  (state = initialState, { type, payload }:{type:string, payload:any}) => {\n  switch (type) {\n\n    case 'hideDeleteAlert':\n      return { ...state, ...{ showDeleteListAlert: false} }\n\n    case 'showDeleteAlert': \n    return { ...state, ...{ showDeleteListAlert: true, deleteList: payload } }\n\n    case 'setTodoList': \n      if(payload.deleted)\n      return { ...state, ...{lists: state.lists.filter(l => l.id !== payload.id)} };\n      else\n        return { ...state, ...{lists: saveIntoArray(payload, state.lists)} };\n\n    case 'setTodoLists':\n      //find todos page\n      return { ...state, ...{ lists: payload } };\n\n\n    default:\n      log.error('REDUCER GOT UNHANDLED TYPE ', type, payload);\n      return state\n  }\n}\n\n\nconst TodoMenuListComponent = ({projectid}: {projectid:string}) => {\n  const location = useLocation();\n  const path = location.pathname;\n  log.warn(path);\n  const [state, _dispatch] = useReducer(reducer, initialState)\n\n  const dispatch = (type: 'setTodoLists'|\n                          'hideDeleteAlert'|\n                          'showDeleteAlert'|\n                          'setTodoList', payload = {}) => {\n    _dispatch({type, payload});\n  }\n\n\n  useEffect(() => {\n    const subTodoList = dataService.subscribeProjectTypeChanges(\n      projectid, TYPE_TODO_LIST ).subscribe(change => {\n        log.info('Menu Change: ', change);\n        dispatch('setTodoList', change);\n      })\n    loadInitTodoLists(projectid);\n    return () => {\n      subTodoList.unsubscribe();\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [authService.userid])\n\n  const loadInitTodoLists = async (projectid:string) => {\n    const todolists = await dataService.getAllByProject(projectid,TYPE_TODO_LIST);\n    log.info(todolists);\n    dispatch('setTodoLists', todolists);\n  }\n\n  const deleteList = () => {\n      todoService.deleteList(state.deleteList)\n  }\n\n\n  const tagButtonClickHandler = (tag) => {\n    console.log(tag);\n  }\n\n  return (\n    <IonList>\n      {/*}\n       <IonItem  button \n                color={(path ==='/todos/tag/today'? 'light' : '')}  \n                routerLink={encodeURI('/todos/tag/today')} \n                routerDirection=\"none\"\n                lines=\"none\">\n       \n              <IonIcon\n                size=\"large\"\n                src=\"assets/icons/sun.svg\"></IonIcon>\n            Today\n          </IonItem>\n      */}\n      <IonItemGroup key=\"listsGroup\">\n          <TodoMenuItemButtonComponet \n            name=\"Today\"\n            color={(path ==='/todos/tag/today'? 'light' : '')}  \n            actonFunc = {() => tagButtonClickHandler('today')}\n          /> \n            \n             \n        {state.lists.map( list => (\n          <IonItemSliding key={list.name+'list'}>\n            <IonItem  button \n                      color={(path ==='/todos/'+list.name? 'light' : '')}  \n                      routerLink={encodeURI('/todos/'+list.name)} \n                      routerDirection=\"none\"\n                      lines=\"none\">\n              <IonLabel>{list.name}</IonLabel>\n            </IonItem>\n            <IonItemOptions side=\"end\">\n              <IonItemOption  color=\"danger\" \n                              onClick={() => dispatch('showDeleteAlert',list)}>\n                Delete</IonItemOption>\n            </IonItemOptions>\n          </IonItemSliding>\n        ))}\n      </IonItemGroup>\n      <IonItemDivider>\n      </IonItemDivider>\n      <ListAddInlineComponent key=\"addNewItem\" projectid={projectid} />\n\n      <IonAlert \n        isOpen={state.showDeleteListAlert}\n        onDidDismiss={() => dispatch('hideDeleteAlert')}\n        header={\"Are you sure you want to delete '\" + state.deleteList.name + \"' list?\"}\n        subHeader={'All tasks in this list will be deleted'}\n        buttons={[\n          {\n            text: 'Cancel',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: () => dispatch('hideDeleteAlert')\n          },\n          {\n            text: 'Delete List',\n            handler: () => deleteList()\n          }\n        ]}\n      />\n    </IonList>\n  )\n\n\n\n}\n\nexport default TodoMenuListComponent;","import React, { useReducer, useEffect } from 'react';\nimport { home, apps, sunny, star, heart, basket, construct, bonfire, checkmark, refresh } from 'ionicons/icons';\nimport { getDefaultProject } from '../../data/utilsData';\nimport { authService } from '../../auth/authService';\nimport ulog from 'ulog';\nimport TodoMenuListComponent from '../../../pages/todo/todo.menulist.component';\n\nconst log = ulog('menu');\n\nexport interface AppPage {\n  url: string;\n  icon: any;\n  title: string;\n  lastComponent?: any;\n}\n\n\nexport interface MenuFunctions {\n\n}\n\nexport interface MenuState {\n  projectid: string,\n  appPages: AppPage[];\n}\n\nexport const todoTags: AppPage[] = [\n  {\n    title: 'Today',\n    url: '/todos/today',\n    icon: sunny,\n  },\n  {\n    title: 'Important',\n    url: '/todos/important',\n    icon: star,\n  },\n  {\n    title: 'Important',\n    url: '/todos/tasksmain33mmm',\n    icon: checkmark,\n  },\n  {\n    title: 'Whish List',\n    url: '/todos/whish',\n    icon: heart,\n  },\n  {\n    title: 'Buy',\n    url: '/todos/buy',\n    icon: basket,\n  },\n  {\n    title: 'Projects',\n    url: '/todos/projects',\n    icon: construct,\n  },\n]\n\nexport const getMenuState = (projectid: string): MenuState => {\n  return {\n    projectid,\n    appPages: [\n      {\n        title: 'Home',\n        url: '/home',\n        icon: home,\n      },\n      {\n        title: 'Habits',\n        url: '/habits',\n        icon: refresh,\n      },\n      {\n        title: 'Parties',\n        url: '/parties',\n        icon: bonfire,\n      },\n      {\n        title: 'Todos',\n        url: '/todos',\n        icon: apps,\n        lastComponent: <TodoMenuListComponent projectid={projectid}  />\n      }\n    ]\n  }\n};\n\n\nconst reducer = (state, { type, payload }:{type:string, payload:any}):MenuState => {\n  switch (type) {\n  case 'authChange':\n    return getMenuState(getDefaultProject(authService.userid).id);\n  default:\n    log.error('REDUCER GOT UNHANDLED TYPE ', type, payload);\n    return state\n  }\n}\n\n\n\n//more simpler then auth hook, just read data\nexport function useMenuHookFacade(): [MenuState, MenuFunctions] {\n  const project = getDefaultProject(authService.userid);\n  const [state, _dispatch] = useReducer(reducer, getMenuState(project.id))\n\n  useEffect(() => {\n    const sub = authService.username$.subscribe(name => {\n      _dispatch({type: 'authChange', payload: authService.userid});\n    })\n   \n    return () => {sub.unsubscribe()};\n  }, [])\n          \n  const menuFunctions: MenuFunctions = {\n  }\n\n  \n\n\n  return [state, menuFunctions];\n}","import {\n  IonContent,\n  IonIcon,\n  IonItem,\n  IonLabel,\n  IonMenu,\n  IonMenuToggle,\n  IonGrid,\n  IonCol,\n  IonRow\n} from '@ionic/react';\nimport React from 'react';\nimport { withRouter, useLocation } from 'react-router-dom';\nimport MenuHeaderWithProgress from './MenuHeaderWithProgress';\nimport { useMenuHookFacade } from '../modules/menu/hooks/menu.hook';\nimport './menu.css';\nimport ulog from 'ulog'\n\nconst log = ulog('menu')\n\nconst Menu = () => {\n\n  const [state,] = useMenuHookFacade();\n  const location = useLocation();\n  const path = location.pathname;\n  log.warn(path);\n  return (\n    <IonMenu key=\"ionmenu_left\" contentId=\"main\" type=\"overlay\">\n      <MenuHeaderWithProgress />\n      <IonContent key=\"menu_left\" >\n        <IonGrid>\n        {state.appPages.map((appPage, index) => {\n          return (\n            <>\n              <IonRow key={appPage.title.replace(' ', '')+appPage.url + index}>\n                <IonCol class=\"leftMenuCol\">\n                <IonMenuToggle  autoHide={false}>\n                  <IonItem\n                        color={(path === appPage.url? 'light' : '')}   \n                        routerLink={appPage.url} routerDirection=\"none\">\n                    <IonIcon slot=\"start\" icon={appPage.icon} />\n                    <IonLabel>{appPage.title}</IonLabel>\n                  </IonItem>\n                </IonMenuToggle>\n                </IonCol>\n              </IonRow>\n              {appPage.lastComponent? (\n                appPage.lastComponent\n              ) : (<></>)}\n            </>\n        )})}\n        </IonGrid>\n      </IonContent>\n    </IonMenu>\n)};\n\nexport default withRouter(Menu);\n","import React, { useState } from 'react';\nimport { PartyProject } from '../models';\nimport { IonHeader, IonToolbar, IonTitle, IonContent, IonItem, \n  IonInput, IonLabel, IonTextarea, IonFooter, IonButton } from '@ionic/react';\n\n\n\n\n\nconst PartyEditComponent = ({party, dismissFunc}:\n    {party: PartyProject| null, dismissFunc:{(party: PartyProject|null, action: 'save'| 'remove' | 'none')}}) => {\n\n  const [state, setState] = useState({party: party||new PartyProject()})\n\n\n  const handleChange = (e) => {\n    const newDoc = {...state.party, ...{[e.target.name]:e.detail.value}}\n    const newState = {...state, ...{party: newDoc}};\n    setState(newState);\n  }\n\n\n  return (\n    <>\n      <IonHeader>\n            <IonToolbar>\n              <IonTitle>Add/Edit Party</IonTitle>\n            </IonToolbar>\n      </IonHeader>\n      <IonContent>\n          <IonItem>\n                <IonLabel position=\"floating\">Name</IonLabel>\n                <IonInput \n                    name=\"name\"\n                    placeholder=\"Your Cool Party Name\" \n                    onIonChange={handleChange}\n                    value={state.party.name} />\n            </IonItem>\n            <IonItem>\n                <IonLabel position=\"floating\">Note</IonLabel>\n                <IonTextarea \n                    placeholder=\"More details for your party members\"\n                    name=\"note\"\n                    onIonChange={handleChange}\n                    value={state.party.note}></IonTextarea>\n            </IonItem>\n            <IonFooter>\n              <IonToolbar>\n                <IonTitle>\n                  <IonButton onClick={() => dismissFunc(state.party, 'save')}>Save</IonButton>\n                  <IonButton onClick={() => dismissFunc(null, 'none')}>Cancel</IonButton>\n                </IonTitle>\n              </IonToolbar>\n            </IonFooter>\n      </IonContent>\n    </>\n  );\n}\n\nexport default PartyEditComponent;","import React, { useState, useEffect, useReducer } from 'react';\nimport { PartyProject } from '../models';\nimport { IonCard, IonCardHeader, IonCardTitle, IonCardSubtitle, IonBadge } from '@ionic/react';\nimport { useHistory } from '../../../../node_modules/@types/react-router';\n\n\nconst PartyListItemComponent = ({partyProject, history,  showEditModalFunction}:\n          {partyProject:PartyProject, history, showEditModalFunction:{(party: PartyProject)}}) => {\n\n  const [state, setState] = useState({party: partyProject})\n\n  useEffect(() => {\n    setState({...state, ...{party:partyProject}});\n  }, [partyProject])\n\n  return(\n    <IonCard>\n      <IonCardHeader onClick={() => history.push('/parties/'+ encodeURI(state.party.id||''))}>\n        <IonCardTitle>{state.party.name} \n              <IonBadge>{state.party.members.length}</IonBadge></IonCardTitle>\n        <IonCardSubtitle>{state.party.note}</IonCardSubtitle>\n      </IonCardHeader>\n    </IonCard>\n  )\n\n\n} \n\nexport default PartyListItemComponent;\n\n\n","import React, { useEffect, useReducer } from 'react';\nimport {\n  IonPage,\n  IonContent,\n  IonList,\n  IonCard,\n  IonCardHeader,\n  IonCardTitle,\n  IonCardSubtitle,\n  IonCardContent,\n  IonLabel,\n  IonButton,\n  IonModal,\n  IonItem} from '@ionic/react';\nimport HeaderWithProgress from '../../../components/HeaderWithProgress';\nimport { authService } from '../../auth/authService';\nimport { PartyProject } from '../models';\nimport PartyEditComponent from '../components/Party.edit.component';\nimport { partyService } from '../party.service';\nimport PartyListItemComponent from '../components/Party.listitem.component';\nimport { useHistory } from 'react-router-dom';\nimport ulog from 'ulog';\n\nconst log = ulog('parties');\n\n\n\nexport interface PartiesState {\n  userId: string,\n  showModal: boolean,\n  party: PartyProject|null\n  docs: PartyProject[],\n}\nconst reducer = (state, action:{type:string, data:any}): PartiesState => {\n  switch(action.type) {\n    case 'dismissEdit':\n      return {...state, ...{showModal: false, party: null}}\n    case 'edit':\n      return {...state, ...{showModal: true, party: action.data}}\n    case 'docs':\n      return {...state, ...{docs:action.data}};\n    case 'userid': \n      return {...state, ...{userId: action.data}};\n    default:\n      log.error('ERROR, INCORRECT ACTION TYPE ', action);\n      return state;\n  }\n}\n\n\n\nconst PartiesPage = () => {\n  const history = useHistory();\n  const [state, _dispatch] = useReducer(reducer, {\n    userId: '',\n    showModal: false,\n    party: new PartyProject(),\n    docs: [],\n  })\n\n  const dispatch = (type: 'userid'|\n                          'dismissEdit'|\n                          'edit'|\n                          'docs', data:any = null) => {\n      _dispatch({type, data});                      \n  }\n\n  useEffect(() => {\n    const subs = [\n      authService.username$.subscribe(username => {\n        dispatch('userid', authService.userid);\n      }),\n      partyService.state$.subscribe(changes => {\n        dispatch('docs', changes.docs);\n      }),\n\n    ]\n    return () => {\n      subs.forEach(sub => {\n        if(sub) sub.unsubscribe();\n      });\n    };\n    // eslint-disable-next-line\n  }, [])\n\n  const editParty = (party:PartyProject = new PartyProject()) => {\n    dispatch('edit', party);\n  }\n\n\n  const modalDismissFunc = (party: PartyProject|null, action:'save'|'remove'|'none') => {\n    dispatch('dismissEdit')\n    if(action === 'save' && party != null){\n      partyService.saveParty(party)\n    }\n    else if(action === 'remove' && party != null && party.id){\n      //dataFunc.remove(habit._id);\n    }\n  }\n\n  const hideModal = () => {\n    dispatch('dismissEdit');\n  }\n\n  return (\n    <IonPage>\n      <HeaderWithProgress title=\"Parties\" />\n      <IonContent>\n        {state.showModal? (\n          <IonModal isOpen={state.showModal} onDidDismiss={() => hideModal()}>\n            <PartyEditComponent party={state.party} \n                                dismissFunc = {modalDismissFunc}  />\n          </IonModal>\n        ) : (\n          <></>\n        )}\n        <IonCard>\n          <IonCardHeader>\n            <IonCardTitle>\n              Here you can join friends to conquer those tasks together.\n            </IonCardTitle>\n            <IonCardSubtitle>\n              \n            </IonCardSubtitle>\n          </IonCardHeader>\n          <IonCardContent>\n            <IonLabel>\n              Create your party to go on quests and challenge your friends.\n            </IonLabel>\n            <IonButton onClick={() =>editParty()} >Create Party</IonButton>\n            <br></br><br></br><br></br>\n            <IonLabel>\n              Join your friends party, give them your code: <strong>{state.userId}</strong>\n            </IonLabel>\n            \n          </IonCardContent>\n        </IonCard>\n      <IonList>\n        {state.docs.map(party => (\n          <PartyListItemComponent partyProject={party} \n                                  history={history}\n                                  key={party.id}\n                                  showEditModalFunction={editParty} />\n        ))}  \n      </IonList>\n      <IonItem>\n        <IonLabel>To join a party, you can give part leader your id: {state.userId} </IonLabel>\n      </IonItem>\n      \n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default PartiesPage;\n\n","import React from 'react';\nimport { PartyMember, ChallengeMember } from '../models';\nimport { IonBadge } from '@ionic/react';\nimport { COLOR_LIGHT, COLOR_SUCCESS } from '../../../colors';\nimport moment from 'moment';\nimport { MOMENT_DATE_FORMAT } from '../../../pages/habits/models';\nimport './challenge.css';\n\n\nconst ChallengeMemberScoreHistory = ({member}:\n  {member: PartyMember|ChallengeMember}) => {\n\n\n const printDay = (dateString) => {\n  const score = member.scoreHistory[dateString];\n  let color = COLOR_LIGHT;\n  let exp = 0;\n  if(score){\n    color = COLOR_SUCCESS;\n    exp = score.exp;\n  }\n\n  return <IonBadge class=\"scoreHistoryBadge\"  color={color}>{exp}</IonBadge>\n }\n\n  \n  return (\n    <>\n      {printDay(moment().subtract(6, 'd').format(MOMENT_DATE_FORMAT))}\n      {printDay(moment().subtract(5, 'd').format(MOMENT_DATE_FORMAT))}\n      {printDay(moment().subtract(4, 'd').format(MOMENT_DATE_FORMAT))}\n      {printDay(moment().subtract(3, 'd').format(MOMENT_DATE_FORMAT))}\n      {printDay(moment().subtract(2, 'd').format(MOMENT_DATE_FORMAT))}\n      {printDay(moment().subtract(1, 'd').format(MOMENT_DATE_FORMAT))}\n      {printDay(moment().subtract(0, 'd').format(MOMENT_DATE_FORMAT))}\n    </>\n  )\n\n}\nexport default ChallengeMemberScoreHistory;","import React, { useReducer } from 'react';\nimport { PartyProject, PartyMember } from '../models';\nimport { IonCard, IonCardTitle, IonCardHeader, IonCardContent, IonList, IonItem, IonAlert, IonFooter, IonButton, IonLabel, IonBadge } from '@ionic/react';\nimport { partyService } from '../party.service';\nimport  ulog from 'ulog';\nimport { authService } from '../../auth/authService';\nimport { canEditProjectByRights } from '../../data/utilsData';\nimport { COLOR_LIGHT, COLOR_SUCCESS, COLOR_SECONDARY } from '../../../colors';\nimport ChallengeMemberScoreHistory from './Challenge.member.scoreHistory';\nconst log = ulog('memberlist');\n\nexport interface MembersState {\n  showAddModal: boolean,\n  members: PartyMember[],\n}\n\n\nconst reducer = (state, action): MembersState => {\n  switch(action.type) {\n    case 'showAddMemberModal':\n      return {...state, ...{showAddModal: true}};\n    case 'hideAddMemberModal':\n      return {...state, ...{showAddModal: false}};\n\n    default:\n      log.error('Action type is not a match');\n      return state;\n  }\n}\n\nconst PartyMembersListComponent = ({project}:{project:PartyProject}) => {\n  const [state, _dispatch] = useReducer(reducer, {\n    showAddModal: false,\n    members: [],\n  })\n\n  const dispatch = (type: 'showAddMemberModal'|\n                          'hideAddMemberModal', \n                    data:any = {}) => {\n    _dispatch({type, data});\n  }\n\n  const addMember = () => {\n    dispatch(\"showAddMemberModal\");\n    \n  }\n\n  const hideAddUser = () => {\n    dispatch('hideAddMemberModal');\n  }\n\n  const canEditThisProject = () => {\n    const self = project.members.find(m => m.id === authService.userid);\n    if(!self) return false;\n    return canEditProjectByRights(self.rights);\n  }\n\n  const printScore = (score, index) =>{\n    let color = COLOR_LIGHT;\n    if(index === 0) color = COLOR_SUCCESS;\n    if(index === 1) color = COLOR_SECONDARY;\n    return <IonBadge slot=\"end\" color={color}>{score.exp}</IonBadge>\n  }\n\n  \n  return (\n    <IonCard>\n      <IonCardHeader>\n        <IonCardTitle>Members</IonCardTitle>\n      </IonCardHeader>\n      <IonCardContent>\n        <IonList>\n            {project.members.sort((a,b) => b.score.exp - a.score.exp)\n                            .map((member, i) => (\n          <IonItem key={member.id}>\n            <IonLabel>\n              <h2>{member.username} - \n                  <ChallengeMemberScoreHistory member={member}  />\n              </h2>\n            </IonLabel>\n              {printScore(member.score, i)}\n          </IonItem>\n            ))}\n        </IonList>\n        \n      </IonCardContent>\n      {canEditThisProject()? (\n        <IonFooter>\n          <IonButton onClick={()=>addMember()} fill=\"clear\">Invite</IonButton>\n        </IonFooter>\n      ) : ( <></>)}\n      <IonAlert \n        isOpen={state.showAddModal}\n        onDidDismiss={() => hideAddUser()}\n        header=\"Friend ID:\"\n        subHeader={'Found at bottom of parties page.'}\n        inputs={[\n          {\n            name: 'userid',\n            type: 'text',\n            id: 'adduserid',\n          }\n        ]}\n        buttons={[\n          {\n            text: 'Cancel',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: () => {\n              hideAddUser();\n            }\n          },\n          {\n            text: 'Invite User',\n            handler: (data) => {\n              partyService.addUser(data.userid, project);\n              hideAddUser();\n            }\n          }\n        ]}\n      />\n    </IonCard>\n  )\n\n}\nexport default PartyMembersListComponent;","import React, { useEffect, useReducer } from 'react';\nimport { IonItem, IonLabel, IonList, IonText, IonBadge } from '@ionic/react';\nimport { Challenge } from '../models';\nimport { COLOR_LIGHT, COLOR_SUCCESS, COLOR_SECONDARY } from '../../../colors';\nimport ChallengeMemberScoreHistory from './Challenge.member.scoreHistory';\n\n\nexport interface ChallengeLocalState {\n  challenge: Challenge,\n}\n\nconst reducer = (state, action): ChallengeLocalState => {\n  switch(action.type) {\n    case 'challenge':\n      return {...state, ...{challenge:action.data}}\n\n    default:\n      console.log('ERROR WENT TO DEFAULTS:: ', action);\n      return state;\n  }\n}\n\n\nconst ChallengeMembersItem = ({challenge}:\n  {challenge:Challenge}) => {\n\n  const [state, _dispatch] = useReducer(reducer, {\n    challenge,\n  })\n\n  const dispatch = (type:'challenge', data:any) => {\n    _dispatch({type, data});\n  }\n\n  useEffect(() => {\n    dispatch('challenge', challenge);\n  }, [challenge])\n\n  const printScore = (score, index) =>{\n    let color = COLOR_LIGHT;\n    if(index === 0) color = COLOR_SUCCESS;\n    if(index === 1) color = COLOR_SECONDARY;\n    return <IonBadge slot=\"end\" color={color}>{score.exp}</IonBadge>\n  }\n\n\n  const print = () => {\n    return (\n      <IonList>\n        {state.challenge.members.sort((a,b)=> b.score.exp - a.score.exp)\n          .map((member, i) => (\n            <IonItem key={member.id}>\n              <IonLabel>\n                <h2>{member.username} - \n                  <ChallengeMemberScoreHistory member={member} />\n                </h2>\n              </IonLabel>\n              {printScore(member.score, i)}\n            </IonItem>\n        ))}\n      </IonList>\n    );\n  }\n  \n  return print();\n};\n\nexport default ChallengeMembersItem;\n\n","import React, { useEffect, useReducer } from 'react';\nimport { IonItem, IonCard, IonCardHeader, IonCardTitle, IonCardContent, IonNote, IonFooter, IonButton, IonLabel } from '@ionic/react';\nimport { Challenge, ChallengeState } from '../models';\nimport ulog from 'ulog';\nimport { partyService } from '../party.service';\nimport { authService } from '../../auth/authService';\nimport ChallengeMembersItem from './Challenge.members.item.component';\nimport { canEditProject } from '../../data/utilsData';\n\nconst log = ulog('clubs');\n\nexport interface ChallengeLocalState {\n  challenge: Challenge,\n}\n\nconst reducer = (state, action): ChallengeLocalState => {\n  switch(action.type) {\n    case 'challenge':\n      return {...state, ...{challenge:action.data}}\n\n    default:\n      console.log('ERROR WENT TO DEFAULTS:: ', action);\n      return state;\n  }\n}\n\n\nconst ChallengeListItemComponent = ({challenge, showEditModalFunction}:\n  {challenge:Challenge, showEditModalFunction:{(challenge: Challenge)}}) => {\n\n  const [state, _dispatch] = useReducer(reducer, {\n    challenge,\n  })\n\n  const dispatch = (type:'challenge', data:any) => {\n    _dispatch({type, data});\n  }\n\n  useEffect(() => {\n    dispatch('challenge', challenge);\n  }, [challenge])\n\n  const joined = challenge.members.find(m => m.id === authService.userid);\n\n  log.info('Challenge Item: ', state);\n\n  const printTitle = () => {\n    if(state.challenge.state === ChallengeState.waiting){\n      return <IonCardTitle>{state.challenge.name} - Join if you dare</IonCardTitle>\n    }\n    else if(state.challenge.state === ChallengeState.current){\n      return <IonCardTitle>{state.challenge.name} - In progress</IonCardTitle>\n    }\n    else if(state.challenge.state === ChallengeState.finished) {\n      return <IonCardTitle>{state.challenge.name} - Finished</IonCardTitle>\n    }\n    else if(state.challenge.state === ChallengeState.future) {\n      return <IonCardTitle>{state.challenge.name} - Preivew of future challenge</IonCardTitle>\n    }\n    return <IonCardTitle>{state.challenge.name}</IonCardTitle>\n  }\n\n  const printInfo = () => {\n    if(state.challenge.regularityInterval === 'day'){\n      return (\n        <IonItem>\n          <IonLabel>\n            <h2>{state.challenge.note}</h2>\n            <IonNote>\n              Challenge goal, for <strong>every day</strong>.\n            </IonNote>\n          </IonLabel>\n        </IonItem>\n      )\n    }\n    \n    return (\n      <IonItem>\n        <IonLabel>\n          <h2>{state.challenge.note}</h2>\n          <IonNote>\n            Challenge goal is for \n            <strong> {state.challenge.regularityIntervalGoal} times {state.challenge.regularityInterval}</strong>\n          </IonNote>\n        </IonLabel>\n      </IonItem>\n    )\n  }\n\n  const challengeSubmitForToday = () => {\n\n    return false;\n  }\n\n  const printActionButtons = () => {\n    if(state.challenge.state === ChallengeState.waiting && joined === undefined){\n      return <IonButton size=\"small\"   fill=\"clear\"\n            onClick={() => partyService.acceptChallenge(state.challenge)} >\n            Accept Challenge</IonButton>\n    }\n    else if(state.challenge.state === ChallengeState.current){\n      if(challengeSubmitForToday()) return;\n      return <IonButton size=\"small\"  fill=\"clear\"\n        onClick={() => partyService.submitChallengeActions(state.challenge.id, 1)} >\n            Done</IonButton>\n    }\n    else if(state.challenge.state === ChallengeState.finished) {\n\n    }\n    else if(state.challenge.state === ChallengeState.future) {\n\n    }\n\n  }\n\n  const printAdminActionButtons = () => {\n    if(!canEditProject(state.challenge.id, authService.getUser())) return;\n    if(state.challenge.state === ChallengeState.waiting){\n      return <>\n              <IonButton size=\"small\" fill=\"clear\"\n                onClick={() => partyService.changeChallengeState(state.challenge.id, ChallengeState.current)} >\n                Start Challenge</IonButton>\n              <IonButton size=\"small\" fill=\"clear\"\n                onClick={() => partyService.changeChallengeState(state.challenge.id, ChallengeState.waiting)} >\n                Freeze For Future Use</IonButton>\n            </>\n    }\n    else if(state.challenge.state === ChallengeState.current){\n\n    }\n    else if(state.challenge.state === ChallengeState.finished) {\n\n    }\n    else if(state.challenge.state === ChallengeState.future) {\n\n    }\n\n  }\n\n\n\n\n  const print = () => {\n    return (\n        <IonCard>\n          <IonCardHeader>\n            {/*<IonCardSubtitle>Card Subtitle</IonCardSubtitle>*/}\n            {printTitle()}\n          </IonCardHeader>\n          <IonCardContent>\n            <ChallengeMembersItem challenge={state.challenge} />\n            {printInfo()}\n          </IonCardContent>\n          <IonFooter>\n            {printActionButtons()}\n            {printAdminActionButtons()}\n          </IonFooter>\n         {/* \n          <IonFab horizontal=\"end\" vertical=\"bottom\" edge>\n            <IonFabButton size=\"small\" color={COLOR_LIGHT} onClick={() => showEditModalFunction(doc)}>\n              <IonIcon size=\"large\" icon={cog} />\n            </IonFabButton>\n          </IonFab>\n        */}\n        </IonCard>\n    );\n  }\n  \n  return print();\n};\n\nexport default ChallengeListItemComponent;\n\n","import React, { useState } from 'react';\nimport { IonItem, IonLabel, IonIcon, IonInput, IonTextarea, IonButton, \n  IonHeader, IonTitle, IonToolbar, IonContent, IonFooter, \n  IonRange, IonFab, \n  IonFabButton, IonAlert, IonSegment, IonSegmentButton } from '@ionic/react';\nimport { ChallengeIntervals, Challenge, ChallengeDifficulty } from '../models';\nimport { capitalize } from '../../../utils';\nimport { COLOR_DANGER } from '../../../colors';\nimport { trash } from 'ionicons/icons';\nimport ulog from 'ulog';\n\nconst log = ulog('party');\n\n\ninterface challengeState {\n  regularity: {\n    interval: ChallengeIntervals,\n    min: number,\n    max: number,\n  }\n  doc: Challenge,\n  showDeleteWarrning: boolean\n}\n\nconst getRegularityValues = (interval: ChallengeIntervals) => {\n  switch (interval) {\n    case ChallengeIntervals.day:\n      return {interval: interval, min:1, max: 1}\n    case ChallengeIntervals.week:\n      return {interval: interval, min:1, max: 6}\n    case ChallengeIntervals.month:\n      return {interval: interval, min:1, max: 25}\n  }\n}\n\nconst ChallengeAddComponent = ({challenge, dismissFunc}:\n  {challenge:Challenge|null, dismissFunc: {(challenge:Challenge|null, action: 'save'|'remove'|'none')}}) => {\n  const _challenge = challenge|| new Challenge();\n  const getDefaultRegularityState: challengeState = {\n    regularity: getRegularityValues(_challenge.regularityInterval),\n    doc: _challenge,\n    showDeleteWarrning: false\n  }\n  const [state, setState] = useState<challengeState>({...getDefaultRegularityState, ...{doc: _challenge}});\n\n\n  const handleChange = (e) => {\n    const newDoc = {...state.doc, ...{[e.target.name]:e.detail.value}}\n    const newState = {...state, ...{doc: newDoc}};\n    setState(newState);\n  }\n\n  const handlerRegularityValue = (e) => {\n    const newDoc = {...state.doc, ...{regularityValue: e.detail.value}};\n    setState({...state, ...{doc: newDoc}});\n  }\n\n  const handlerRegularityIntervalChange = (value) => {\n    value = value || 'day';\n    const newDoc = {...state.doc, ...{regularityInterval: value, regularityValue: 1}};\n    const newReg = {...state.regularity, ...getRegularityValues(value)};\n    setState({...state, ...{doc:newDoc, regularity: newReg}});\n  }\n\n  const printRegularityLabel = () => {\n\n    const times = (state.doc.regularityIntervalGoal > 1)? ' times a ': ' time a ';\n    if(state.doc.regularityInterval === 'day'){\n      return 'I will repeat this task every day.'\n    }\n    \n    return 'I will repeat this task ' + state.doc.regularityIntervalGoal + times + state.doc.regularityInterval\n  }\n\n  const handleDifficultyChange = (e) => {\n    const newDoc = {...state.doc, ...{difficulty: e.detail.value}};\n    setState({...state, ...{doc: newDoc}});\n  }\n\n  const printDifficultyLabel = (chdiff: ChallengeDifficulty): string => {\n    switch(chdiff) {\n      case ChallengeDifficulty.trivial:\n        return 'Easy peasy lemon squeezy';\n      case ChallengeDifficulty.easy:\n        return 'Piece of Cake';\n      case ChallengeDifficulty.medium:\n        return \"Let's Rock\";\n      case ChallengeDifficulty.hard:\n        return 'No Pain, No Gain';\n      case ChallengeDifficulty.extreme:\n        return 'Death Wish';\n    }\n  }\n\n  const showRemoveWarrning = () => {\n    setState({...state, ...{showDeleteWarrning: true}});\n  }\n\n  const hideRemoveWarrning = () => {\n    setState({...state, ...{showDeleteWarrning: false}});\n  }\n\n  const removehabit = () => {\n    hideRemoveWarrning();\n    dismissFunc(state.doc, 'remove');\n  }\n\n\n\n  const print = () => {\n      return (\n      <>\n        <IonHeader>\n          <IonToolbar>\n            {/*\n            <IonButtons slot=\"start\">\n              <IonButton> <IonIcon size=\"large\" icon={arrowBack} /></IonButton>\n            </IonButtons>\n            */}\n            <IonTitle>Add Challenge</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <IonContent>\n          <IonItem>\n              <IonLabel position=\"floating\">Name</IonLabel>\n              <IonInput \n                  name=\"name\"\n                  placeholder=\"Read book, Go running ...\" \n                  onIonChange={handleChange}\n                  value={state.doc.name} />\n          </IonItem>\n          <IonItem>\n              <IonLabel position=\"floating\">Note</IonLabel>\n              <IonTextarea \n                  placeholder=\"Enter more information here, motivate yourself...\"\n                  name=\"note\"\n                  onIonChange={handleChange}\n                  value={state.doc.note}></IonTextarea>\n          </IonItem>\n          <IonItem>\n            <IonSegment value={state.doc.regularityInterval}\n                        onIonChange={(e) => handlerRegularityIntervalChange(e.detail.value)}>\n              <IonSegmentButton value=\"day\">\n                <IonLabel>Daily</IonLabel>\n              </IonSegmentButton>\n              <IonSegmentButton value=\"week\">\n                <IonLabel>Weekly</IonLabel>\n              </IonSegmentButton>\n              <IonSegmentButton value=\"month\">\n                <IonLabel>Monthly</IonLabel>\n              </IonSegmentButton>\n            </IonSegment>\n          </IonItem>\n\n          {(state.doc.regularityInterval !== 'day')? (\n            <>\n              <IonRange \n                    min={state.regularity.min}\n                    max={state.regularity.max}\n                    debounce={100}\n                    value={state.doc.regularityIntervalGoal}\n                    onIonChange={handlerRegularityValue}\n                    color=\"secondary\" >\n                <IonLabel slot=\"start\">{state.regularity.min}</IonLabel>\n                <IonLabel slot=\"end\">{state.regularity.max}</IonLabel>\n              </IonRange>\n            </>\n          ) : (\n          <></> )}\n          <IonItem>\n            <IonLabel>{printRegularityLabel()}</IonLabel>\n          </IonItem>\n\n          <IonRange min={0} \n                    max={4} \n                    debounce={100}\n                    value={state.doc.difficulty}\n                    onIonChange={handleDifficultyChange}\n                    color=\"secondary\">\n              <IonLabel slot=\"start\">{capitalize(printDifficultyLabel(ChallengeDifficulty.trivial))}</IonLabel>\n              <IonLabel slot=\"end\">{capitalize(printDifficultyLabel(ChallengeDifficulty.extreme))}</IonLabel>\n          </IonRange>\n\n          <IonItem>\n            <IonLabel>{printDifficultyLabel(state.doc.difficulty)}</IonLabel>\n          </IonItem>\n        </IonContent> \n\n        <IonFooter>\n          <IonToolbar>\n            <IonTitle>\n              <IonButton onClick={() => dismissFunc(state.doc, 'save')}>Save</IonButton>\n              <IonButton onClick={() => dismissFunc(null, 'none')}>Cancel</IonButton>\n            </IonTitle>\n          </IonToolbar>\n        </IonFooter>\n        <IonFab horizontal=\"end\" vertical=\"bottom\" >\n          <IonFabButton size=\"small\" color={COLOR_DANGER} onClick={() => showRemoveWarrning()}>\n            <IonIcon size=\"large\" icon={trash} />\n          </IonFabButton>\n        </IonFab>\n        <IonAlert\n          isOpen={state.showDeleteWarrning}\n          onDidDismiss={() => hideRemoveWarrning}\n          header={'Warrning!!!'}\n          message={'Are you sure you want to <strong>delete</strong> this habit?'}\n          buttons={[\n            {\n              text: 'Cancel',\n              role: 'cancel',\n              cssClass: 'secondary',\n              \n            },\n            {\n              text: 'Yes Im Sure',\n              handler: () => removehabit()\n            }\n          ]}\n        />\n      </>\n      );\n  }\n  \n  return print();\n};\n\nexport default ChallengeAddComponent;\n","import React, { useReducer, useEffect } from 'react';\nimport { IonList, IonModal, IonCard, \n  IonCardContent, IonCardHeader, IonCardTitle, \n  IonFab, IonFabButton, IonIcon, IonButton, IonFooter } from '@ionic/react';\nimport { Challenge, PartyProject, TYPE_PARTY } from '../models';\nimport ChallengeListItemComponent from './Challenge.listitem.component';\nimport ChallengeAddComponent from './Challenge.add.component';\nimport { add } from 'ionicons/icons';\nimport { dataService } from '../../data/dataService';\nimport { partyService } from '../party.service';\nimport { getProjectChildId, canEditProjectByRights } from '../../data/utilsData';\nimport { saveIntoArray } from '../../../utils';\nimport  ulog from 'ulog';\nimport { authService } from '../../auth/authService';\n\n//ulog.level = 7;\nconst log = ulog('challengelist');\n\n\nexport interface ChallengeListState {\n  showModal: boolean,\n  modalChallenge: Challenge|null,\n  challenges: Challenge[],\n}\n\nconst reducer = (state, action): ChallengeListState => {\n  switch(action.type) {\n    case 'addChallengeModal': \n      return {...state, ...{showModal: true, modalChalleng: action.data}}\n    case 'hideChallengeModal':\n      return {...state, ...{showModal: false, modalChalleng: null}}\n    case 'loadChallenges': \n      return {...state, ...{challenges: action.data}}\n    case 'challengeChange':\n      return {...state, ...{challenges:saveIntoArray(action.data,state.challenges)}};\n    default:\n      return state;\n  }\n}\n\n\n\n\nconst ChallengeListComponent = ({project}:{project: PartyProject}) => {\n  const [state, _dispatch] = useReducer(reducer, {\n    showModal: false,\n    modalChallenge: null,\n    challenges: [],\n  });\n\n  useEffect(() => {\n    const sub = dataService.subscribeByPropertyChange('secondaryType', 'challenge')\n      .subscribe(change => {\n        if(change.id.startsWith(getProjectChildId(project.id)))\n          dispatch('challengeChange', change);\n\n    });\n    if(project.id)\n      loadChallenges(project.id);\n\n    return () => {\n      sub.unsubscribe();\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [project.id])\n\n  const loadChallenges = async (id: string) => {\n    const res = await dataService.queryByProperty(\n        'secondaryType', 'equals', 'challenge', TYPE_PARTY);\n    const challenges = res.filter(doc => doc.id.startsWith(getProjectChildId(id)));\n    dispatch('loadChallenges', challenges);\n  };\n\n  const dispatch = (type: 'addChallengeModal'|\n                          'loadChallenges'|\n                          'challengeChange'|\n                          'hideChallengeModal', data:any) => {\n    _dispatch({type, data});\n  }\n  \n  const addChallenge = (ch:Challenge = new Challenge()) => {\n    dispatch('addChallengeModal', ch);\n  }\n\n  const hideChallengeModal = () => {\n    dispatch('hideChallengeModal', null);\n  }\n\n  const challengeDismissFunc = (challenge: Challenge|null, action:'save'|'remove'|'none') => {\n    hideChallengeModal();\n    if(action === 'save' && challenge != null){\n      partyService.saveChallenge(challenge, project);\n    }\n    else if(action === 'remove' && challenge != null && challenge.id){\n      //dataFunc.remove(habit.id);\n    }\n  }\n\n\n  const canEditThisProject = () => {\n    const self = project.members.find(m => m.id === authService.userid);\n    if(!self) return false;\n    return canEditProjectByRights(self.rights);\n  }\n\n  return (\n    <IonCard>\n      <IonCardHeader>\n        <IonCardTitle>Challenges</IonCardTitle>\n      </IonCardHeader>\n      <IonCardContent>\n        <IonList>\n          {state.challenges.map(challenge => (\n                <ChallengeListItemComponent\n                          challenge={challenge} \n                          key={challenge.id} \n                          showEditModalFunction={addChallenge}/>\n          ))}\n        </IonList>\n        {state.showModal? (\n          <IonModal isOpen={state.showModal} onDidDismiss={() => hideChallengeModal()}>\n          <ChallengeAddComponent challenge={state.modalChallenge} \n                              dismissFunc = {challengeDismissFunc}  />\n          </IonModal>\n        ) : (\n          <></>\n        )}\n      </IonCardContent>\n      <IonFooter>\n        {canEditThisProject()? (\n          <IonButton    onClick={() => addChallenge()}\n            fill=\"clear\">Add New Challenge</IonButton>\n        ) : ( <></>)}\n      </IonFooter>\n    </IonCard>\n  )\n}\n\n\n\nexport default ChallengeListComponent;","import React, { useState, useEffect, useRef } from 'react';\nimport { IonPage, IonContent} from '@ionic/react';\nimport HeaderWithProgress from '../../../components/HeaderWithProgress';\nimport { PartyProject, TYPE_PARTY } from '../models';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { dataService } from '../../data/dataService';\nimport { HabitsService } from '../../../pages/habits/habits.service';\nimport PartyMembersListComponent from '../components/Members.list.component';\nimport ChallengeListComponent from '../components/Challenge.list.component';\n\n\n\ninterface State {\n  party:PartyProject,\n}\n\nconst getInitState = {\n    party: new PartyProject(),\n}\n\n\nconst loadParty = async (id:string, state, setState, history) => {\n\n  const dataSub = dataService.getReadySub().subscribe(async (ready) => {\n    if(!ready) return;\n    const party = await dataService.getDoc(id, TYPE_PARTY);\n    \n    if(!party){\n      dataSub.unsubscribe();\n      history.push('/parties');\n      return\n    }\n    setState({...state, ...{party}})\n    dataSub.unsubscribe();\n  })\n  \n}\n\n//*********** Page Start *************/\nconst PartyViewPage = () => {\n  const {id} = useParams();\n  const history = useHistory();\n  const [state, setState] = useState<State>(getInitState)\n  const habitsService = useRef(new HabitsService());\n\n  //if(!id) return history.push('/parties');\n  useEffect(() => {\n    if(id)\n      loadParty(id, state, setState, history)\n    else {\n      history.push('/parties');\n    }\n  }, [id])\n  \n\n\n\n\n\n  return (\n    <IonPage>\n      <HeaderWithProgress title={\"Party: \" + state.party.name} />\n      <IonContent>\n        \n      {state.party.id? (\n        <>\n          <PartyMembersListComponent  project={state.party} />\n          <ChallengeListComponent project={state.party} />\n        </>\n      ):(<></>)}\n\n      </IonContent>\n    </IonPage>\n  )\n}\n\nexport default PartyViewPage;","import React, {  } from 'react';\nimport { Redirect, Route, useHistory, useLocation } from 'react-router-dom';\nimport UserPage from './modules/auth/components/user.page';\nimport TodosPage from './pages/todo/Todos.page';\nimport IntroPage from './modules/auth/components/intro.page';\nimport { useAppStatus, AppStatus } from './modules/app/hooks/appStatus.hook';\nimport Home from './pages/Home';\nimport NotFound from './pages/NotFound';\nimport UnauthenticatedRoute from './modules/auth/unauthenticatedRoute';\nimport HabitsPage from './pages/habits/Habits.page';\nimport { IonSplitPane, IonRouterOutlet } from '../node_modules/@ionic/react';\nimport Menu from './components/Menu';\nimport PartiesPage from './modules/parties/pages/Parties.page';\nimport PartyViewPage from './modules/parties/pages/Party.view.page';\n\nexport const Routes = () => {\n  const [appStatus] = useAppStatus();\n  const history = useHistory();\n  const location = useLocation();\n\n  if(appStatus.status === AppStatus.auth && location.pathname.startsWith('/auth/')){\n    if(location.state){\n      const newpath = location.state['prev'] || '/';\n      history.push(newpath);\n    }\n  }\n  \n  const getRoutes = () => {\n    switch(appStatus.status){\n      case AppStatus.auth:\n        return (\n          <IonSplitPane when=\"sm\" contentId=\"main\">\n            <Menu key=\"menu\"/>\n            <IonRouterOutlet id=\"main\">\n                <Route path=\"/home\" component={Home} exact={true} />           \n                <Route exact path=\"/auth/user\" component={UserPage} />\n                <Route path=\"/todos\" component={TodosPage} exact={true} />\n                <Route path=\"/todos/:list\" component={TodosPage} exact={true} />\n                <Route path=\"/todos/tag/:tag\" component={TodosPage} exact={true} />\n                <Route path=\"/habits\" component={HabitsPage} exact={true} />\n                <Route path=\"/parties\" component={PartiesPage} exact={true} />\n                <Route path=\"/parties/:id\" component={PartyViewPage} exact={true} />\n                <Route path=\"/\" render={() => <Redirect to=\"/home\" />} exact={true} />\n                <Route path=\"/404\" component={NotFound} />\n                <Redirect to=\"/404\" />\n            </IonRouterOutlet>\n        </IonSplitPane>\n        )\n      case AppStatus.guest:\n          return (\n            <IonRouterOutlet>\n              <UnauthenticatedRoute exact path=\"*\" component={Home} />\n            </IonRouterOutlet>\n          );\n      default:\n          return (\n            <IonRouterOutlet>\n              <Route exact path=\"*\"  component={IntroPage} />\n            </IonRouterOutlet>\n          );\n      \n\n    }\n  }\n\n  return getRoutes();\n}","import React, { useState, useEffect } from 'react';\nimport { Subscription } from 'rxjs';\nimport { toastService, ToastMessage } from './toastService';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const Toasts: React.FC = () => {\n  const [message, setMessage] = useState<ToastMessage | null>(null);\n\n  useEffect(() => {\n    const subscriptions: Subscription[] = [\n      toastService.messages$.subscribe((m: ToastMessage) =>{\n        setMessage(m);\n      })\n    ];\n    return () => { subscriptions.map(it => it.unsubscribe()) };\n  },[message]);\n\n  return (\n    <div className='toastDiv' >\n      <ToastContainer\n          position=\"top-right\"\n          autoClose={5000}\n          hideProgressBar\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          draggable\n          pauseOnHover\n          />\n    </div>\n  );\n};","import React from 'react';\nimport { IonApp } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\n\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\nimport './theme/my.css';\n\nimport { Loading } from './modules/loading/loading.component';\nimport { Routes } from './routes';\nimport { Toasts } from './modules/toast/toast.component';\n\n\n\nconst App: React.FC = () => (\n  <IonApp>\n    <IonReactRouter>\n      <Loading /><Toasts />\n      <Routes />\n    </IonReactRouter>\n  </IonApp>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}